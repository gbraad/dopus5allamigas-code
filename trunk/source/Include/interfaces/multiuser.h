#ifndef MULTIUSER_INTERFACE_DEF_H
#define MULTIUSER_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.5.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif


#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct muIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct muIFace *Self);
	uint32 APICALL (*Release)(struct muIFace *Self);
	void APICALL (*Expunge)(struct muIFace *Self);
	struct Interface * APICALL (*Clone)(struct muIFace *Self);
	ULONG APICALL (*muLogoutA)(struct muIFace *Self, struct TagItem * taglist);
	ULONG APICALL (*muLogout)(struct muIFace *Self, ...);
	ULONG APICALL (*muLoginA)(struct muIFace *Self, struct TagItem * taglist);
	ULONG APICALL (*muLogin)(struct muIFace *Self, ...);
	ULONG APICALL (*muGetTaskOwner)(struct muIFace *Self, struct Task * task);
	BOOL APICALL (*muPasswd)(struct muIFace *Self, STRPTR oldpwd, STRPTR newpwd);
	struct muUserInfo * APICALL (*muAllocUserInfo)(struct muIFace *Self);
	void APICALL (*muFreeUserInfo)(struct muIFace *Self, struct muUserInfo * info);
	struct muUserInfo * APICALL (*muGetUserInfo)(struct muIFace *Self, struct muUserInfo * info, ULONG keytype);
	void APICALL (*Reserved1)(struct muIFace *Self);
	BOOL APICALL (*muSetDefProtectionA)(struct muIFace *Self, struct TagItem * taglist);
	BOOL APICALL (*muSetDefProtection)(struct muIFace *Self, ...);
	ULONG APICALL (*muGetDefProtection)(struct muIFace *Self, struct Task * task);
	BOOL APICALL (*muSetProtection)(struct muIFace *Self, STRPTR name, LONG mask);
	BOOL APICALL (*muLimitDOSSetProtection)(struct muIFace *Self, BOOL flag);
	BOOL APICALL (*muCheckPasswd)(struct muIFace *Self, struct TagItem * taglist);
	BOOL APICALL (*muCheckPasswdTags)(struct muIFace *Self, ...);
	void APICALL (*Reserved2)(struct muIFace *Self);
	BPTR APICALL (*muGetPasswdDirLock)(struct muIFace *Self);
	BPTR APICALL (*muGetConfigDirLock)(struct muIFace *Self);
	struct muExtOwner * APICALL (*muGetTaskExtOwner)(struct muIFace *Self, struct Task * task);
	void APICALL (*muFreeExtOwner)(struct muIFace *Self, struct muExtOwner * info);
	ULONG APICALL (*muGetRelationshipA)(struct muIFace *Self, struct muExtOwner * user, ULONG owner, struct TagItem * taglist);
	ULONG APICALL (*muGetRelationship)(struct muIFace *Self, struct muExtOwner * user, ULONG owner, ...);
	struct muExtOwner * APICALL (*muUserInfo2ExtOwner)(struct muIFace *Self, struct muUserInfo * info);
	struct muGroupInfo * APICALL (*muAllocGroupInfo)(struct muIFace *Self);
	void APICALL (*muFreeGroupInfo)(struct muIFace *Self, struct muGroupInfo * info);
	struct muGroupInfo * APICALL (*muGetGroupInfo)(struct muIFace *Self, struct muGroupInfo * info, ULONG keytype);
	BOOL APICALL (*muAddMonitor)(struct muIFace *Self, struct muMonitor * monitor);
	void APICALL (*muRemMonitor)(struct muIFace *Self, struct muMonitor * monitor);
	BOOL APICALL (*muKill)(struct muIFace *Self, struct Task * task);
	BOOL APICALL (*muFreeze)(struct muIFace *Self, struct Task * task);
	BOOL APICALL (*muUnfreeze)(struct muIFace *Self, struct Task * task);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* MULTIUSER_INTERFACE_DEF_H */
