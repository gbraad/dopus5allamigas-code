/*

Directory Opus 5
Original APL release version 5.82
Copyright 1993-2012 Jonathan Potter & GP Software

This program is free software; you can redistribute it and/or
modify it under the terms of the AROS Public License version 1.1.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
AROS Public License for more details.

The release of Directory Opus 5 under the GPL in NO WAY affects
the existing commercial status of Directory Opus for Windows.

For more information on Directory Opus for Windows please see:

                 http://www.gpsoft.com.au

*/
/*
 *
 * dopus.library header file
 *
 */

#ifndef INLINE4_DOPUS5_H
#define INLINE4_DOPUS5_H

/*
** This file was auto generated by idltool 53.5.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef PROTO_DOS_H
#include <proto/dos.h>
#endif
#ifndef PROTO_INTUITION_H
#include <proto/intuition.h>
#endif
#ifndef PROTO_GRAPHICS_H
#include <proto/graphics.h>
#endif
#ifndef PROTO_LAYOUT_H
#include <proto/layout.h>
#endif
#ifndef PROTO_WB_H
#include <proto/wb.h>
#endif
#ifndef PROTO_WB_H
#include <proto/wb.h>
#endif
#ifndef PROTO_REXXSYSLIB_H
#include <proto/rexxsyslib.h>
#endif
#include <interfaces/dopus5.h>

/* Inline macros for Interface "main" */
#define RemovedFunc0() IDOpus->RemovedFunc0() 
#define RandomDopus(limit) IDOpus->RandomDopus((limit)) 
#define Atoh(str, len) IDOpus->Atoh((str), (len)) 
#define BtoCStr(bstr, cstr, len) IDOpus->BtoCStr((bstr), (cstr), (len)) 
#define DivideU(num, div, rem, utility) IDOpus->DivideU((num), (div), (rem), (utility)) 
#define Itoa(num, str, sep) IDOpus->Itoa((num), (str), (sep)) 
#define ItoaU(num, str, sep) IDOpus->ItoaU((num), (str), (sep)) 
#define Ito26(num, str) IDOpus->Ito26((num), (str)) 
#define BytesToString(bytes, string, places, sep) IDOpus->BytesToString((bytes), (string), (places), (sep)) 
#define DivideToString(string, num, div, places, sep) IDOpus->DivideToString((string), (num), (div), (places), (sep)) 
#define SetBusyPointer(window) IDOpus->SetBusyPointer((window)) 
#define BuildKeyString(code, qual, mask, same, buffer) IDOpus->BuildKeyString((code), (qual), (mask), (same), (buffer)) 
#define ActivateStrGad(gadget, window) IDOpus->ActivateStrGad((gadget), (window)) 
#define AllocTimer(unit, port) IDOpus->AllocTimer((unit), (port)) 
#define FreeTimer(handle) IDOpus->FreeTimer((handle)) 
#define StartTimer(handle, secs, micro) IDOpus->StartTimer((handle), (secs), (micro)) 
#define CheckTimer(handle) IDOpus->CheckTimer((handle)) 
#define StopTimer(handle) IDOpus->StopTimer((handle)) 
#define GetDosPathList(copy) IDOpus->GetDosPathList((copy)) 
#define FreeDosPathList(list) IDOpus->FreeDosPathList((list)) 
#define DoSimpleRequest(window, simplereq) IDOpus->DoSimpleRequest((window), (simplereq)) 
#define SimpleRequest(parent, title, buttons, message, buffer, data, bufsize, flags) IDOpus->SimpleRequest((parent), (title), (buttons), (message), (buffer), (data), (bufsize), (flags)) 
#define SelectionList(list, parent, screen, title, ok, cancel, sel, flags, buffer, switchtxt, switchflags) IDOpus->SelectionList((list), (parent), (screen), (title), (ok), (cancel), (sel), (flags), (buffer), (switchtxt), (switchflags)) 
#define WriteIcon(name, obj) IDOpus->WriteIcon((name), (obj)) 
#define WriteFileIcon(source, dest) IDOpus->WriteFileIcon((source), (dest)) 
#define GetDragInfo(window, rast, width, height, flags) IDOpus->GetDragInfo((window), (rast), (width), (height), (flags)) 
#define FreeDragInfo(draginfo) IDOpus->FreeDragInfo((draginfo)) 
#define GetDragImage(draginfo, x, y) IDOpus->GetDragImage((draginfo), (x), (y)) 
#define ShowDragImage(draginfo, x, y) IDOpus->ShowDragImage((draginfo), (x), (y)) 
#define HideDragImage(draginfo) IDOpus->HideDragImage((draginfo)) 
#define StampDragImage(draginfo, x, y) IDOpus->StampDragImage((draginfo), (x), (y)) 
#define GetDragMask(drag) IDOpus->GetDragMask((drag)) 
#define CheckDragDeadlock(drag) IDOpus->CheckDragDeadlock((drag)) 
#define AddDragImage(drag) IDOpus->AddDragImage((drag)) 
#define RemDragImage(drag) IDOpus->RemDragImage((drag)) 
#define OpenConfigWindow(newwindow) IDOpus->OpenConfigWindow((newwindow)) 
#define CloseConfigWindow(window) IDOpus->CloseConfigWindow((window)) 
#define GetWindowMsg(port) IDOpus->GetWindowMsg((port)) 
#define ReplyWindowMsg(msg) IDOpus->ReplyWindowMsg((msg)) 
#define StripIntuiMessagesDopus(window) IDOpus->StripIntuiMessagesDopus((window)) 
#define CloseWindowSafely(window) IDOpus->CloseWindowSafely((window)) 
#define CalcObjectDims(parent, font, pos, dest, last, flags, ob, d2arg) IDOpus->CalcObjectDims((parent), (font), (pos), (dest), (last), (flags), (ob), (d2arg)) 
#define CalcWindowDims(screen, pos, dest, font, flags) IDOpus->CalcWindowDims((screen), (pos), (dest), (font), (flags)) 
#define AddObjectList(window, objects) IDOpus->AddObjectList((window), (objects)) 
#define FreeObject(objlist, object) IDOpus->FreeObject((objlist), (object)) 
#define FreeObjectList(objlist) IDOpus->FreeObjectList((objlist)) 
#define RefreshObjectList(window, list) IDOpus->RefreshObjectList((window), (list)) 
#define GetObject(list, id) IDOpus->GetObject((list), (id)) 
#define StoreGadgetValue(list, msg) IDOpus->StoreGadgetValue((list), (msg)) 
#define SetGadgetValue(list, id, value) IDOpus->SetGadgetValue((list), (id), (value)) 
#define GetGadgetValue(list, id) IDOpus->GetGadgetValue((list), (id)) 
#define SetObjectKind(list, id, kind) IDOpus->SetObjectKind((list), (id), (kind)) 
#define SetGadgetChoices(list, id, choices) IDOpus->SetGadgetChoices((list), (id), (choices)) 
#define CheckObjectArea(object, x, y) IDOpus->CheckObjectArea((object), (x), (y)) 
#define GetObjectRect(list, id, rect) IDOpus->GetObjectRect((list), (id), (rect)) 
#define DisplayObject(window, object, fg, bg, txt) IDOpus->DisplayObject((window), (object), (fg), (bg), (txt)) 
#define DisableObject(list, id, state) IDOpus->DisableObject((list), (id), (state)) 
#define BoundsCheckGadget(list, id, min, max) IDOpus->BoundsCheckGadget((list), (id), (min), (max)) 
#define AddWindowMenus(window, data) IDOpus->AddWindowMenus((window), (data)) 
#define FreeWindowMenus(window) IDOpus->FreeWindowMenus((window)) 
#define SetWindowBusy(window) IDOpus->SetWindowBusy((window)) 
#define ClearWindowBusy(window) IDOpus->ClearWindowBusy((window)) 
#define GetString(locale, num) IDOpus->GetString((locale), (num)) 
#define FindKeyEquivalent(list, msg, process) IDOpus->FindKeyEquivalent((list), (msg), (process)) 
#define ShowProgressBar(window, object, total, count) IDOpus->ShowProgressBar((window), (object), (total), (count)) 
#define SetWindowID(window, id_ptr, id, port) IDOpus->SetWindowID((window), (id_ptr), (id), (port)) 
#define GetWindowID(window) IDOpus->GetWindowID((window)) 
#define GetWindowAppPort(window) IDOpus->GetWindowAppPort((window)) 
#define Att_NewList(flags) IDOpus->Att_NewList((flags)) 
#define Att_NewNode(list, name, data, flags) IDOpus->Att_NewNode((list), (name), (data), (flags)) 
#define Att_RemNode(node) IDOpus->Att_RemNode((node)) 
#define Att_PosNode(list, node, before) IDOpus->Att_PosNode((list), (node), (before)) 
#define Att_RemList(list, flags) IDOpus->Att_RemList((list), (flags)) 
#define Att_FindNode(list, number) IDOpus->Att_FindNode((list), (number)) 
#define Att_NodeNumber(list, name) IDOpus->Att_NodeNumber((list), (name)) 
#define Att_FindNodeData(list, data) IDOpus->Att_FindNodeData((list), (data)) 
#define Att_NodeDataNumber(list, data) IDOpus->Att_NodeDataNumber((list), (data)) 
#define Att_NodeName(list, number) IDOpus->Att_NodeName((list), (number)) 
#define Att_NodeCount(list) IDOpus->Att_NodeCount((list)) 
#define Att_ChangeNodeName(node, name) IDOpus->Att_ChangeNodeName((node), (name)) 
#define Att_FindNodeNumber(list, node) IDOpus->Att_FindNodeNumber((list), (node)) 
#define AddSorted(list, node) IDOpus->AddSorted((list), (node)) 
#define BuildMenuStrip(data, locale) IDOpus->BuildMenuStrip((data), (locale)) 
#define FindMenuItem(menu, id) IDOpus->FindMenuItem((menu), (id)) 
#define DoPopUpMenu(window, menu, item, code) IDOpus->DoPopUpMenu((window), (menu), (item), (code)) 
#define GetPopUpItem(menu, id) IDOpus->GetPopUpItem((menu), (id)) 
#define IPC_Startup(ipc, data, reply) IDOpus->IPC_Startup((ipc), (data), (reply)) 
#define IPC_Command(ipc, command, flags, data, data_free, reply) IDOpus->IPC_Command((ipc), (command), (flags), (data), (data_free), (reply)) 
#define IPC_Reply(msg) IDOpus->IPC_Reply((msg)) 
#define IPC_Free(ipc) IDOpus->IPC_Free((ipc)) 
#define IPC_FindProc(list, name, act, data) IDOpus->IPC_FindProc((list), (name), (act), (data)) 
#define IPC_Quit(ipc, flags, wait) IDOpus->IPC_Quit((ipc), (flags), (wait)) 
#define IPC_Hello(ipc, owner) IDOpus->IPC_Hello((ipc), (owner)) 
#define IPC_Goodbye(ipc, owner, flags) IDOpus->IPC_Goodbye((ipc), (owner), (flags)) 
#define IPC_GetGoodbye(msg) IDOpus->IPC_GetGoodbye((msg)) 
#define IPC_ListQuit(list, owner, flags, wait) IDOpus->IPC_ListQuit((list), (owner), (flags), (wait)) 
#define IPC_Flush(port) IDOpus->IPC_Flush((port)) 
#define IPC_ListCommand(list, command, flags, data, wait) IDOpus->IPC_ListCommand((list), (command), (flags), (data), (wait)) 
#define IPC_ProcStartup(data, code) IDOpus->IPC_ProcStartup((data), (code)) 
#define IPC_Launch(list, ipc, name, entry, stack, data, dos) IDOpus->IPC_Launch((list), (ipc), (name), (entry), (stack), (data), (dos)) 
#define OpenImage(name, info) IDOpus->OpenImage((name), (info)) 
#define CloseImage(image) IDOpus->CloseImage((image)) 
#define CopyImage(image) IDOpus->CopyImage((image)) 
#define FlushImages() IDOpus->FlushImages() 
#define RenderImage(rp, image, left, top, tags) IDOpus->RenderImage((rp), (image), (left), (top), (tags)) 
#define GetImageAttrs(image, tags) IDOpus->GetImageAttrs((image), (tags)) 
#define NewMemHandle(puddle, thresh, type) IDOpus->NewMemHandle((puddle), (thresh), (type)) 
#define FreeMemHandle(handle) IDOpus->FreeMemHandle((handle)) 
#define ClearMemHandle(handle) IDOpus->ClearMemHandle((handle)) 
#define AllocMemH(handle, size) IDOpus->AllocMemH((handle), (size)) 
#define FreeMemH(memory) IDOpus->FreeMemH((memory)) 
#define DrawBox(rp, rect, info, recess) IDOpus->DrawBox((rp), (rect), (info), (recess)) 
#define DrawFieldBox(rp, rect, info) IDOpus->DrawFieldBox((rp), (rect), (info)) 
#define NewLister(path) IDOpus->NewLister((path)) 
#define NewButtonBank(init, type) IDOpus->NewButtonBank((init), (type)) 
#define NewButton(memory) IDOpus->NewButton((memory)) 
#define NewFunction(memory, type) IDOpus->NewFunction((memory), (type)) 
#define NewInstruction(memory, type, string) IDOpus->NewInstruction((memory), (type), (string)) 
#define ReadSettings(env, name) IDOpus->ReadSettings((env), (name)) 
#define ReadListerDef(iff, id) IDOpus->ReadListerDef((iff), (id)) 
#define OpenButtonBank(name) IDOpus->OpenButtonBank((name)) 
#define DefaultSettings(settings) IDOpus->DefaultSettings((settings)) 
#define DefaultEnvironment(env) IDOpus->DefaultEnvironment((env)) 
#define DefaultButtonBank() IDOpus->DefaultButtonBank() 
#define SaveSettings(env, name) IDOpus->SaveSettings((env), (name)) 
#define SaveListerDef(iff, lister) IDOpus->SaveListerDef((iff), (lister)) 
#define SaveButtonBank(bank, name) IDOpus->SaveButtonBank((bank), (name)) 
#define CloseButtonBank(bank) IDOpus->CloseButtonBank((bank)) 
#define FreeListerDef(lister) IDOpus->FreeListerDef((lister)) 
#define FreeButtonList(list) IDOpus->FreeButtonList((list)) 
#define FreeButtonImages(list) IDOpus->FreeButtonImages((list)) 
#define FreeButton(button) IDOpus->FreeButton((button)) 
#define FreeFunction(function) IDOpus->FreeFunction((function)) 
#define FreeInstruction(ins) IDOpus->FreeInstruction((ins)) 
#define FreeInstructionList(func) IDOpus->FreeInstructionList((func)) 
#define CopyButtonBank(bank) IDOpus->CopyButtonBank((bank)) 
#define CopyButton(button, memory, type) IDOpus->CopyButton((button), (memory), (type)) 
#define CopyFunction(function, memory, newfunc) IDOpus->CopyFunction((function), (memory), (newfunc)) 
#define NewFiletype(memory) IDOpus->NewFiletype((memory)) 
#define ReadFiletypes(name, memory) IDOpus->ReadFiletypes((name), (memory)) 
#define SaveFiletypeList(list, name) IDOpus->SaveFiletypeList((list), (name)) 
#define FreeFiletypeList(list) IDOpus->FreeFiletypeList((list)) 
#define FreeFiletype(type) IDOpus->FreeFiletype((type)) 
#define CopyFiletype(orig, memory) IDOpus->CopyFiletype((orig), (memory)) 
#define FindFunctionType(list, type) IDOpus->FindFunctionType((list), (type)) 
#define SaveButton(iff, button) IDOpus->SaveButton((iff), (button)) 
#define ReadButton(iff, memory) IDOpus->ReadButton((iff), (memory)) 
#define ReadFunction(iff, memory, funclist, function) IDOpus->ReadFunction((iff), (memory), (funclist), (function)) 
#define OpenIFFFile(name, mode, id) IDOpus->OpenIFFFile((name), (mode), (id)) 
#define CloseIFFFile(iff) IDOpus->CloseIFFFile((iff)) 
#define OpenStatusWindow(title, text, screen, graph, flags) IDOpus->OpenStatusWindow((title), (text), (screen), (graph), (flags)) 
#define SetStatusText(window, text) IDOpus->SetStatusText((window), (text)) 
#define UpdateStatusGraph(window, text, total, count) IDOpus->UpdateStatusGraph((window), (text), (total), (count)) 
#define ReadILBM(name, flags) IDOpus->ReadILBM((name), (flags)) 
#define FreeILBM(ilbm) IDOpus->FreeILBM((ilbm)) 
#define DecodeILBM(src, w, h, d, dst, mask, comp) IDOpus->DecodeILBM((src), (w), (h), (d), (dst), (mask), (comp)) 
#define DecodeRLE(rleinfo) IDOpus->DecodeRLE((rleinfo)) 
#define LoadPalette32(vp, palette) IDOpus->LoadPalette32((vp), (palette)) 
#define GetPalette32(vp, palette, count, first) IDOpus->GetPalette32((vp), (palette), (count), (first)) 
#define OpenBuf(name, mode, buffer_size) IDOpus->OpenBuf((name), (mode), (buffer_size)) 
#define CloseBuf(file) IDOpus->CloseBuf((file)) 
#define ReadBuf(file, data, size) IDOpus->ReadBuf((file), (data), (size)) 
#define WriteBuf(file, data, size) IDOpus->WriteBuf((file), (data), (size)) 
#define FlushBuf(file) IDOpus->FlushBuf((file)) 
#define SeekBuf(file, offset, mode) IDOpus->SeekBuf((file), (offset), (mode)) 
#define ExamineBuf(file, fib) IDOpus->ExamineBuf((file), (fib)) 
#define OpenDisk(disk, port) IDOpus->OpenDisk((disk), (port)) 
#define CloseDisk(handle) IDOpus->CloseDisk((handle)) 
#define AddScrollBars(win, list, drawinfo, noidcmp) IDOpus->AddScrollBars((win), (list), (drawinfo), (noidcmp)) 
#define FindBOOPSIGadget(list, id) IDOpus->FindBOOPSIGadget((list), (id)) 
#define BOOPSIFree(list) IDOpus->BOOPSIFree((list)) 
#define SerialValid(data) IDOpus->SerialValid((data)) 
#define WB_Install_Patch() IDOpus->WB_Install_Patch() 
#define WB_Remove_Patch() IDOpus->WB_Remove_Patch() 
#define WB_AddAppWindow(id, data, window, port, tags) IDOpus->WB_AddAppWindow((id), (data), (window), (port), (tags)) 
#define WB_RemoveAppWindow(window) IDOpus->WB_RemoveAppWindow((window)) 
#define WB_FindAppWindow(window) IDOpus->WB_FindAppWindow((window)) 
#define WB_AppWindowData(window, id, userdata) IDOpus->WB_AppWindowData((window), (id), (userdata)) 
#define WB_AppWindowLocal(window) IDOpus->WB_AppWindowLocal((window)) 
#define LockAppList() IDOpus->LockAppList() 
#define NextAppEntry(last, type) IDOpus->NextAppEntry((last), (type)) 
#define UnlockAppList() IDOpus->UnlockAppList() 
#define AddNotifyRequest(type, data, port) IDOpus->AddNotifyRequest((type), (data), (port)) 
#define RemoveNotifyRequest(node) IDOpus->RemoveNotifyRequest((node)) 
#define SendNotifyMsg(type, data, flags, wait, name, fib) IDOpus->SendNotifyMsg((type), (data), (flags), (wait), (name), (fib)) 
#define StrCombine(s1, s2, s3, len) IDOpus->StrCombine((s1), (s2), (s3), (len)) 
#define StrConcat(s1, s2, len) IDOpus->StrConcat((s1), (s2), (len)) 
#define WB_Launch(name, screen, wait) IDOpus->WB_Launch((name), (screen), (wait)) 
#define CopyLocalEnv(a0) IDOpus->CopyLocalEnv((a0)) 
#define CLI_Launch(name, screen, cd, in, out, wait, stack) IDOpus->CLI_Launch((name), (screen), (cd), (in), (out), (wait), (stack)) 
#define SerialCheck(num, p) IDOpus->SerialCheck((num), (p)) 
#define ChecksumFile(file, skip) IDOpus->ChecksumFile((file), (skip)) 
#define ReplyFreeMsg(msg) IDOpus->ReplyFreeMsg((msg)) 
#define TimerActive(timer) IDOpus->TimerActive((timer)) 
#define NewButtonFunction(memory, type) IDOpus->NewButtonFunction((memory), (type)) 
#define IFFOpen(name, mode, form) IDOpus->IFFOpen((name), (mode), (form)) 
#define IFFClose(handle) IDOpus->IFFClose((handle)) 
#define IFFPushChunk(handle, id) IDOpus->IFFPushChunk((handle), (id)) 
#define IFFWriteChunkBytes(handle, data, size) IDOpus->IFFWriteChunkBytes((handle), (data), (size)) 
#define IFFPopChunk(handle) IDOpus->IFFPopChunk((handle)) 
#define IFFWriteChunk(handle, data, chunk, size) IDOpus->IFFWriteChunk((handle), (data), (chunk), (size)) 
#define FindNameI(list, name) IDOpus->FindNameI((list), (name)) 
#define AnimDecodeRIFFXor(delta, plane, rowbytes, sourcebytes) IDOpus->AnimDecodeRIFFXor((delta), (plane), (rowbytes), (sourcebytes)) 
#define AnimDecodeRIFFSet(delta, plane, rowbytes, sourcebytes) IDOpus->AnimDecodeRIFFSet((delta), (plane), (rowbytes), (sourcebytes)) 
#define ConvertRawKey(code, qual, key) IDOpus->ConvertRawKey((code), (qual), (key)) 
#define OpenClipBoard(unit) IDOpus->OpenClipBoard((unit)) 
#define CloseClipBoard(clip) IDOpus->CloseClipBoard((clip)) 
#define WriteClipString(clip, string, len) IDOpus->WriteClipString((clip), (string), (len)) 
#define ReadClipString(clip, string, len) IDOpus->ReadClipString((clip), (string), (len)) 
#define LockAttList(list, exclusive) IDOpus->LockAttList((list), (exclusive)) 
#define UnlockAttList(list) IDOpus->UnlockAttList((list)) 
#define RemovedFunc1() IDOpus->RemovedFunc1() 
#define RemovedFunc2() IDOpus->RemovedFunc2() 
#define RemovedFunc3() IDOpus->RemovedFunc3() 
#define RemovedFunc4() IDOpus->RemovedFunc4() 
#define RemovedFunc5() IDOpus->RemovedFunc5() 
#define RemovedFunc6() IDOpus->RemovedFunc6() 
#define RemovedFunc7() IDOpus->RemovedFunc7() 
#define GetSemaphore(sem, exc, data) IDOpus->GetSemaphore((sem), (exc), (data)) 
#define FreeSemaphore(sem) IDOpus->FreeSemaphore((sem)) 
#define ShowSemaphore(sem) IDOpus->ShowSemaphore((sem)) 
#define SaveFunction(iff, func) IDOpus->SaveFunction((iff), (func)) 
#define IFFNextChunk(iff, form) IDOpus->IFFNextChunk((iff), (form)) 
#define IFFChunkSize(iff) IDOpus->IFFChunkSize((iff)) 
#define IFFReadChunkBytes(iff, buffer, size) IDOpus->IFFReadChunkBytes((iff), (buffer), (size)) 
#define IFFFileHandle(iff) IDOpus->IFFFileHandle((iff)) 
#define IFFChunkRemain(iff) IDOpus->IFFChunkRemain((iff)) 
#define IFFChunkID(iff) IDOpus->IFFChunkID((iff)) 
#define IFFGetFORM(iff) IDOpus->IFFGetFORM((iff)) 
#define ScreenInfo(screen) IDOpus->ScreenInfo((screen)) 
#define GetEditHook(type, flags, tags) IDOpus->GetEditHook((type), (flags), (tags)) 
#define FreeEditHook(hook) IDOpus->FreeEditHook((hook)) 
#define InitWindowDims(window, dims) IDOpus->InitWindowDims((window), (dims)) 
#define StoreWindowDims(window, dims) IDOpus->StoreWindowDims((window), (dims)) 
#define CheckWindowDims(window, dims) IDOpus->CheckWindowDims((window), (dims)) 
#define InitListLock(ll, name) IDOpus->InitListLock((ll), (name)) 
#define IPC_QuitName(list, name, flags) IDOpus->IPC_QuitName((list), (name), (flags)) 
#define QualValid(qual) IDOpus->QualValid((qual)) 
#define FHFromBuf(file) IDOpus->FHFromBuf((file)) 
#define WB_AppIconFlags(icon) IDOpus->WB_AppIconFlags((icon)) 
#define GetWBArgPath(arg, buf, size) IDOpus->GetWBArgPath((arg), (buf), (size)) 
#define RemovedFunc8() IDOpus->RemovedFunc8() 
#define DeviceFromLock(lock, name) IDOpus->DeviceFromLock((lock), (name)) 
#define DeviceFromHandler(port, name) IDOpus->DeviceFromHandler((port), (name)) 
#define DevNameFromLockDopus(lock, buffer, len) IDOpus->DevNameFromLockDopus((lock), (buffer), (len)) 
#define GetIconFlags(icon) IDOpus->GetIconFlags((icon)) 
#define SetIconFlags(icon, flags) IDOpus->SetIconFlags((icon), (flags)) 
#define GetIconPosition(icon, x, y) IDOpus->GetIconPosition((icon), (x), (y)) 
#define SetIconPosition(icon, x, y) IDOpus->SetIconPosition((icon), (x), (y)) 
#define BuildTransDragMask(mask, image, width, height, depth, flags) IDOpus->BuildTransDragMask((mask), (image), (width), (height), (depth), (flags)) 
#define GetImagePalette(image) IDOpus->GetImagePalette((image)) 
#define FreeImageRemap(remap) IDOpus->FreeImageRemap((remap)) 
#define SwapListNodes(list, s1, s2) IDOpus->SwapListNodes((list), (s1), (s2)) 
#define RemovedFunc9() IDOpus->RemovedFunc9() 
#define Seed(seed) IDOpus->Seed((seed)) 
#define RemovedFunc10() IDOpus->RemovedFunc10() 
#define RemovedFunc11() IDOpus->RemovedFunc11() 
#define RemovedFunc12() IDOpus->RemovedFunc12() 
#define CopyDiskObject(icon, flags) IDOpus->CopyDiskObject((icon), (flags)) 
#define FreeDiskObjectCopy(icon) IDOpus->FreeDiskObjectCopy((icon)) 
#define IFFFailure(iff) IDOpus->IFFFailure((iff)) 
#define GetCachedDefDiskObject(type) IDOpus->GetCachedDefDiskObject((type)) 
#define FreeCachedDiskObject(icon) IDOpus->FreeCachedDiskObject((icon)) 
#define GetCachedDiskObject(name, flags) IDOpus->GetCachedDiskObject((name), (flags)) 
#define GetCachedDiskObjectNew(name, flags) IDOpus->GetCachedDiskObjectNew((name), (flags)) 
#define IconCheckSum(icon, which) IDOpus->IconCheckSum((icon), (which)) 
#define OpenProgressWindow(tags) IDOpus->OpenProgressWindow((tags)) 
#define CloseProgressWindow(win) IDOpus->CloseProgressWindow((win)) 
#define HideProgressWindow(win) IDOpus->HideProgressWindow((win)) 
#define ShowProgressWindow(win, scr, a2arg) IDOpus->ShowProgressWindow((win), (scr), (a2arg)) 
#define SetProgressWindow(win, tags) IDOpus->SetProgressWindow((win), (tags)) 
#define GetProgressWindow(win, tags) IDOpus->GetProgressWindow((win), (tags)) 
#define SetNotifyRequest(req, flags, mask) IDOpus->SetNotifyRequest((req), (flags), (mask)) 
#define ChangeAppIcon(icon, render, select, title, flags) IDOpus->ChangeAppIcon((icon), (render), (select), (title), (flags)) 
#define CheckProgressAbort(win) IDOpus->CheckProgressAbort((win)) 
#define GetSecureString(gad) IDOpus->GetSecureString((gad)) 
#define NewButtonWithFunc(mem, label, type) IDOpus->NewButtonWithFunc((mem), (label), (type)) 
#define FreeButtonFunction(func) IDOpus->FreeButtonFunction((func)) 
#define CopyButtonFunction(function, memory, newfunc) IDOpus->CopyButtonFunction((function), (memory), (newfunc)) 
#define FindPubScreen(scr, lock) IDOpus->FindPubScreen((scr), (lock)) 
#define SetAppIconMenuState(icon, item, state) IDOpus->SetAppIconMenuState((icon), (item), (state)) 
#define SearchFile(file, text, flags, buffer, size) IDOpus->SearchFile((file), (text), (flags), (buffer), (size)) 
#define ParseDateStrings(string, date, time, range) IDOpus->ParseDateStrings((string), (date), (time), (range)) 
#define DateFromStrings(date, time, ds) IDOpus->DateFromStrings((date), (time), (ds)) 
#define GetMatchHandle(name) IDOpus->GetMatchHandle((name)) 
#define FreeMatchHandle(handle) IDOpus->FreeMatchHandle((handle)) 
#define MatchFiletype(handle, type) IDOpus->MatchFiletype((handle), (type)) 
#define LayoutResize(window) IDOpus->LayoutResize((window)) 
#define GetFileVersion(name, ver, rev, date, prog) IDOpus->GetFileVersion((name), (ver), (rev), (date), (prog)) 
#define AsyncRequest(ipc, type, window, callback, data, tags) IDOpus->AsyncRequest((ipc), (type), (window), (callback), (data), (tags)) 
#define CheckRefreshMsg(window, mask) IDOpus->CheckRefreshMsg((window), (mask)) 
#define RemapImage(image, screen, remap) IDOpus->RemapImage((image), (screen), (remap)) 
#define FreeRemapImage(image, remap) IDOpus->FreeRemapImage((image), (remap)) 
#define FreeAppMessage(msg) IDOpus->FreeAppMessage((msg)) 
#define ReplyAppMessage(msg) IDOpus->ReplyAppMessage((msg)) 
#define SetLibraryFlags(flags, mask) IDOpus->SetLibraryFlags((flags), (mask)) 
#define StartRefreshConfigWindow(win, state) IDOpus->StartRefreshConfigWindow((win), (state)) 
#define EndRefreshConfigWindow(win) IDOpus->EndRefreshConfigWindow((win)) 
#define CompareListFormat(f1, f2) IDOpus->CompareListFormat((f1), (f2)) 
#define UpdateGadgetValue(list, msg, id) IDOpus->UpdateGadgetValue((list), (msg), (id)) 
#define UpdateGadgetList(list) IDOpus->UpdateGadgetList((list)) 
#define NewBitMap(w, h, d, f, b) IDOpus->NewBitMap((w), (h), (d), (f), (b)) 
#define DisposeBitMap(b) IDOpus->DisposeBitMap((b)) 
#define ParseArgs(temp, args) IDOpus->ParseArgs((temp), (args)) 
#define DisposeArgs(args) IDOpus->DisposeArgs((args)) 
#define SetConfigWindowLimits(window, min, max) IDOpus->SetConfigWindowLimits((window), (min), (max)) 
#define SetEnv(name, data, save) IDOpus->SetEnv((name), (data), (save)) 
#define IsListLockEmpty(list) IDOpus->IsListLockEmpty((list)) 
#define AllocAppMessage(mem, reply, num) IDOpus->AllocAppMessage((mem), (reply), (num)) 
#define CheckAppMessage(msg) IDOpus->CheckAppMessage((msg)) 
#define CopyAppMessage(msg, mem) IDOpus->CopyAppMessage((msg), (mem)) 
#define SetWBArg(msg, num, lock, name, mem) IDOpus->SetWBArg((msg), (num), (lock), (name), (mem)) 
#define OriginalCreateDir(name) IDOpus->OriginalCreateDir((name)) 
#define OriginalDeleteFile(name) IDOpus->OriginalDeleteFile((name)) 
#define OriginalSetFileDate(name, date) IDOpus->OriginalSetFileDate((name), (date)) 
#define OriginalSetComment(name, comment) IDOpus->OriginalSetComment((name), (comment)) 
#define OriginalSetProtection(name, mask) IDOpus->OriginalSetProtection((name), (mask)) 
#define OriginalRename(oldname, newname) IDOpus->OriginalRename((oldname), (newname)) 
#define OriginalOpen(name, access) IDOpus->OriginalOpen((name), (access)) 
#define OriginalClose(file) IDOpus->OriginalClose((file)) 
#define OriginalWrite(file, data, length) IDOpus->OriginalWrite((file), (data), (length)) 
#define CreateTitleGadget(scr, list, zoom, offset, type, id) IDOpus->CreateTitleGadget((scr), (list), (zoom), (offset), (type), (id)) 
#define FindGadgetType(gad, type) IDOpus->FindGadgetType((gad), (type)) 
#define FixTitleGadgets(win) IDOpus->FixTitleGadgets((win)) 
#define OriginalRelabel(dev, name) IDOpus->OriginalRelabel((dev), (name)) 
#define FakeILBM(data, pal, w, h, d, flags) IDOpus->FakeILBM((data), (pal), (w), (h), (d), (flags)) 
#define IPC_SafeCommand(ipc, command, flags, data, data_free, reply, list) IDOpus->IPC_SafeCommand((ipc), (command), (flags), (data), (data_free), (reply), (list)) 
#define ClearFiletypeCache() IDOpus->ClearFiletypeCache() 
#define GetTimerBase() IDOpus->GetTimerBase() 
#define InitDragDBuf(drag) IDOpus->InitDragDBuf((drag)) 
#define FreeRexxMsgEx(msg) IDOpus->FreeRexxMsgEx((msg)) 
#define CreateRexxMsgEx(port, extension, host) IDOpus->CreateRexxMsgEx((port), (extension), (host)) 
#define SetRexxVarEx(msg, varname, value, length) IDOpus->SetRexxVarEx((msg), (varname), (value), (length)) 
#define GetRexxVarEx(msg, varname, bufpointer) IDOpus->GetRexxVarEx((msg), (varname), (bufpointer)) 
#define BuildRexxMsgEx(port, extension, host, tags) IDOpus->BuildRexxMsgEx((port), (extension), (host), (tags)) 
#define NotifyDiskChange() IDOpus->NotifyDiskChange() 
#define GetDosListCopy(list, memory) IDOpus->GetDosListCopy((list), (memory)) 
#define FreeDosListCopy(list) IDOpus->FreeDosListCopy((list)) 
#define DateFromStringsNew(date, time, ds, method) IDOpus->DateFromStringsNew((date), (time), (ds), (method)) 
#define RemapIcon(icon, screen, free) IDOpus->RemapIcon((icon), (screen), (free)) 
#define GetOriginalIcon(icon) IDOpus->GetOriginalIcon((icon)) 
#define CalcPercent(amount, total, utilbase) IDOpus->CalcPercent((amount), (total), (utilbase)) 
#define IsDiskDevice(port) IDOpus->IsDiskDevice((port)) 
#define DrawDragList(rp, vp, flags) IDOpus->DrawDragList((rp), (vp), (flags)) 
#define RemoveDragImage(drag) IDOpus->RemoveDragImage((drag)) 
#define SetNewIconsFlags(flags, prec) IDOpus->SetNewIconsFlags((flags), (prec)) 
#define ReadBufLine(file, data, size) IDOpus->ReadBufLine((file), (data), (size)) 
#define GetLibraryFlags() IDOpus->GetLibraryFlags() 
#define GetIconType(icon) IDOpus->GetIconType((icon)) 
#define SetReqBackFill(hook, scr) IDOpus->SetReqBackFill((hook), (scr)) 
#define LockReqBackFill(scr) IDOpus->LockReqBackFill((scr)) 
#define UnlockReqBackFill() IDOpus->UnlockReqBackFill() 
#define DragCustomOk(bm) IDOpus->DragCustomOk((bm)) 
#define WB_LaunchNew(name, scr, wait, stack, tool) IDOpus->WB_LaunchNew((name), (scr), (wait), (stack), (tool)) 
#define UpdatePathList() IDOpus->UpdatePathList() 
#define UpdateMyPaths() IDOpus->UpdateMyPaths() 
#define GetPopUpImageSize(window, menu, width, height) IDOpus->GetPopUpImageSize((window), (menu), (width), (height)) 
#define GetDeviceUnit(startup, device, unit) IDOpus->GetDeviceUnit((startup), (device), (unit)) 
#define StripWindowMessages(port, except) IDOpus->StripWindowMessages((port), (except)) 
#define DeleteIcon(name) IDOpus->DeleteIcon((name)) 
#define MUFSLogin(window, name, password) IDOpus->MUFSLogin((window), (name), (password)) 
#define UpdateEnvironment(env) IDOpus->UpdateEnvironment((env)) 
#define ConvertStartMenu(bank) IDOpus->ConvertStartMenu((bank)) 
#define GetOpusPathList() IDOpus->GetOpusPathList() 
#define GetStatistics(id) IDOpus->GetStatistics((id)) 
#define SetPopUpDelay(delay) IDOpus->SetPopUpDelay((delay)) 
#define WB_LaunchNotify(name, scr, wait, stack, tool, proc, notify, flags) IDOpus->WB_LaunchNotify((name), (scr), (wait), (stack), (tool), (proc), (notify), (flags)) 
#define WB_AppWindowWindow(appwindow) IDOpus->WB_AppWindowWindow((appwindow)) 
#define OpenEnvironment(name, data) IDOpus->OpenEnvironment((name), (data)) 
#define PopUpNewHandle(data, callback, locale) IDOpus->PopUpNewHandle((data), (callback), (locale)) 
#define PopUpFreeHandle(handle) IDOpus->PopUpFreeHandle((handle)) 
#define PopUpNewItem(handle, string, id, flags) IDOpus->PopUpNewItem((handle), (string), (id), (flags)) 
#define PopUpSeparator(handle) IDOpus->PopUpSeparator((handle)) 
#define PopUpItemSub(handle, item) IDOpus->PopUpItemSub((handle), (item)) 
#define PopUpEndSub(handle) IDOpus->PopUpEndSub((handle)) 
#define PopUpSetFlags(menu, id, value, mask) IDOpus->PopUpSetFlags((menu), (id), (value), (mask)) 
#define AddAllocBitmapPatch(task, screen) IDOpus->AddAllocBitmapPatch((task), (screen)) 
#define RemAllocBitmapPatch(handle) IDOpus->RemAllocBitmapPatch((handle)) 
#define LoadPos(name, pos, font) IDOpus->LoadPos((name), (pos), (font)) 
#define SavePos(name, pos, font) IDOpus->SavePos((name), (pos), (font)) 

/* autogenerated old ones:

#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define RenderImageTags(rp, image, left, ...) IDOpus->RenderImageTags((rp), (image), (left), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define RenderImageTags(rp, image, left, vargs...) IDOpus->RenderImageTags(rp, image, left, ## vargs) 
#endif
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetEditHookTags(type, ...) IDOpus->GetEditHookTags((type), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetEditHookTags(type, vargs...) IDOpus->GetEditHookTags(type, ## vargs) 
#endif
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define OpenProgressWindowTags(...) IDOpus->OpenProgressWindowTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define OpenProgressWindowTags(...) IDOpus->OpenProgressWindowTags(## vargs) 
#endif
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define SetProgressWindowTags(...) IDOpus->SetProgressWindowTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define SetProgressWindowTags(vargs...) IDOpus->SetProgressWindowTags(## vargs) 
#endif
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetProgressWindowTags(...) IDOpus->GetProgressWindowTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetProgressWindowTags(vargs...) IDOpus->GetProgressWindowTags(## vargs) 
#endif
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define BuildRexxMsgExTags(port, extension, ...) IDOpus->BuildRexxMsgExTags((port), (extension), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define BuildRexxMsgExTags(port, extension, vargs...) IDOpus->BuildRexxMsgExTags(port, extension, ## vargs) 
#endif

*/

#define SimpleRequestTags(window,title,buttons,message,...) \
({ \
	IPTR __args[] = { __VA_ARGS__ }; \
	(short) SimpleRequest(window, title, buttons, message, 0, (APTR)&__args, 0, 0); \
})

#define OpenProgressWindowTags(...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(APTR) OpenProgressWindow((struct TagItem *)&__tags); \
})

#define SetProgressWindowTags(prog, ...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(void) SetProgressWindow(prog, (struct TagItem *)&__tags); \
})

#define AsyncRequestTags(my_ipc,type,window,callback,data,...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(long)AsyncRequest(my_ipc, type, window, callback, data, (struct TagItem *)&__tags); \
})

#define GetEditHookTags(type,flags,...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(struct Hook *)GetEditHook(type, flags, (struct TagItem *)&__tags); \
})

#define BuildRexxMsgExTags(port,ext,host,...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(struct RexxMsg *)BuildRexxMsgEx(port, ext, host, (struct TagItem *)&__tags); \
})

#define GetProgressWindowTags(prog, ...) \
({ \
	IPTR __tags[] = { __VA_ARGS__ }; \
	(void) GetProgressWindow(prog, (struct TagItem *)&__tags); \
})

#endif /* INLINE4_DOPUS5_H */
