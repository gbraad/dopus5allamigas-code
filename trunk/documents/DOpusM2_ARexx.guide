@DATABASE DOpusM2_ARexx
@$VER: DOpusM2_ARexx.guide 57.7 (12.5.2014)
@AUTHOR "Dr Greg Perry, Jonathan Potter, Leo Davidson, Andrew Dunbar and Dave Clarke"
@(c) GPSoftware 1999
@(c) DOPUS5 Open Source Team 2012-2014
@INDEX index
@NODE MAIN "Directory Opus Magellan II  ARexx Guide."

@{fg shine}@{b}Directory Opus Magellan II ARexx Guide @{ub}@{fg text}
@{fg fill}©1998 GPSoftware, All Rights Reserved.@{fg text}

 @{" Introduction " LINK gen_intro}                     @{" Guide Credits " LINK credits}
 @{" The ARexx Port " LINK gen_port}                   @{" Guide History " LINK guide_history}
 @{" Results From Commands " LINK gen_results}
 @{" ARexx Commands " LINK arexx_commands}                   @{" Purchasing Opus Magellan " LINK purchasing}
 - @{" dopus " LINK list_dopus}
 - @{" lister " LINK list_lister}                         @{" Index " LINK index}
 - @{" command " LINK list_command}
 @{" Error Codes " LINK gen_errors}
 @{" Custom Handlers " LINK custom_handlers}
 - @{" The Basics " LINK ch_the_basics}
 - @{" For Listers " LINK ch_listers} @{"(events list)" LINK ch_listers_events}
 - @{" For AppIcons " LINK ch_appicons}
 @{" ARexx Modules " LINK arexx_modules}

@{i}This guide is best viewed with the OS3.0 (V39) or higher AmigaGuide
datatype as it makes extensive use of coloured text. Things will be
much less readable with earlier versions of AmigaGuide -- Upgrade! @{ui}

This Amigaguide document was originally developed for Opus 5.5 by Leo Davidson
and has been updated to support features in Opus Magellan 5.66 as of
29/Oct/1997 by Andrew Dunbar, GPSoftware Brisbane, Australia.

Updated again to support features of DOpus Magellan II as of 12.9.1998
by Dave Clarke, Melbourne Australia.

Updated for open source versions as of 12.5.2014

@endnode
@NODE guide_history "DOpus Magellan II ARexx Guide History"

@{fg shine}v50.0 -- 21/May/1995@{fg text}
Initial version based on the Directory Opus 5.0 Manual.
Never publicly released or properly polished off.

@{fg shine}v55.0 -- 21/Sep/1996@{fg text} @{fg fill}@{i}(What is it about the 21st?) @{ui}@{fg text}
Completely re-done. Based on the Directory Opus 5.5 Manual with numerous
additions and several corrections.

@{fg shine}v55.1 -- 22/Sep/1996@{fg text}
@{" Lister events " LINK ch_listers_events} @{" snapshot " LINK ch_lsnapshot} and @{" unsnapshot " LINK ch_lunsnapshot} were missing.
Fixed a small spelling error (I'm sure there are more :-) ).
Rearranged the main @{" contents page " LINK MAIN} slightly.

@{fg shine}v55.2 -- 2/Oct/1996@{fg text}
Second returned argument of @{" lister query position " LINK lister_query_position} now documented.
Improved @{" lister clear flags " LINK lister_clear} section (description of flags).
Added a special note about @{" dropfrom's " LINK ch_ldropfrom} to the main Opus window.

@{fg shine}v56.1 -- 29/Oct/1997@{fg text}
Guide document updated to support features in Opus Magellan 5.66 as of
29/Oct/1997 by Andrew Dunbar, GPSoftware Brisbane, Australia.

@{fg shine}v57.0 -- 29/Jul/1998@{fg text}
Guide document updated to support features in Opus Magellan II by
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.1 -- 1/Sep/1998@{fg text}
Found a few typo's, added the FTP ARexx commands, added 'lister2 popups' to
Custom Handler section, found a few missing index links.
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.2 -- 1/Sep/1998@{fg text}
Removed the FTP ARexx commands, it doesn't have any.
Stupid me :-/
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.3 -- 12/Sep/1998@{fg text}
Found a few typos, I was missing from the credits for some reason :-/
Updated the distributors list.
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.4 -- 12/Sep/1998@{fg text}
Added 'lister query/set commentlength', fixed 'dopus/lister request'.
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.5 -- 16/Oct/1998@{fg text}
Typos in 'lister set/clear value' fixed.  Typo in 'dopus set sound' fixed.
Dave Clarke, Beta-tester Melbourne, Australia.

@{fg shine}v57.6 -- 12/May/2014@{fg text}
Minor updates to credits and copyright.
DOPSUS5 Open Source Team.

@endnode
@NODE credits "DOpus Magellan II ARexx Guide Credits"

@{fg shine}Credits@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
Directory Opus and this guide are © Copyright @{b}Jonathan Potter@{ub} and
GPSoftware, Brisbane, 1998. All Rights Reserved. The Directory Opus
software was written by Jonathan Potter and designed by Jonathan Potter and
@{b}Greg Perry@{ub}. OpusFTP and AFC modules were programmed by @{b}Andrew Dunbar and
Greg Perry@{ub}. The manual which this guide was based on was written by
Greg Perry and Jonathan Potter. AmigaGuide conversion, corrections and
additional material by @{b}Leo Davidson@{ub}.  Lot's more additions and
corrections done by Dave Clarke and his merry band of ELFs, (ELectronic
Fingers). Original sources sold and released as @{b}Open Source@{ub} in 2012.
Current open source versions are (c) Copyright 2012-2014 DOPUS5
Open Source team.


@{i}As well as being much more user-friendly than the ARexx section of the
printed manual, this guide contains everything in the manual and more. @{ui}

@{fg shine}Software used in Guide Creation@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
Guide checked using @{b}CheckGuide@{ub} v1.0 (C)1994 @{b}Eddy Carroll@{ub}.
Guide edited in @{b}CygnusEd Professional@{ub} v3.5 (C)1987-1996 Cygnus Software.
Guide edited in @{b}TurboText@{ub} v2.0 (C)1990-1994 Martin Taillefer
Guide index created by a CEd macro & Commodore's "sort" command. :-)
v30 Multiview/AmigaGuide datatype used for viewing.
Everything tied together and launched from Directory Opus 5, what else?

No "AmigaGuide editors" were used. IMO they're as much use as HTML editors.

@ENDNODE
@NODE purchasing "Purchasing Directory Opus Magellan"

@{fg shine}Purchasing Directory Opus Magellan@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}

This program is free software; you can redistribute it and/or
modify it under the terms of the AROS Public License version 1.1.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
AROS Public License for more details.

The release of Directory Opus 5 under the GPL in NO WAY affects
the existing commercial status of Directory Opus for Windows.

For more information on Directory Opus for Windows please see:

                 http://www.gpsoft.com.au

For further information about Directory Opus for Windows and
purchasing Directory Opus for Windows,
please contact:


@{fg shine} Dr Greg Perry               @{fg fill}Ph/fax:       @{fg text}+61 7 33661402
@{fg shine} GPSoftware                  @{fg fill}WWW:          @{fg text}http://www.gpsoft.com.au/
 PO Box 570
 Ashgrove
 Qld
 Australia 4060

@endnode
@NODE gen_port "DOpus Magellan II ARexx: The Port."

@{fg shine}The DOpus5 ARexx Port.@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
The Directory Opus 5 ARexx port name is @{bg fill} DOPUS.x @{bg back}, where @{bg fill} x @{bg back} is the
invocation count of the program (the first and most often used one is
@{bg fill} DOPUS.1 @{bg back}). Since ARexx scripts launched from Directory Opus do not
automatically inherit the command address, you may want to use the @{bg fill} {Qp} @{bg back}
command sequence in Opus functions (this is described elsewhere in the
printed manual).

@endnode
@NODE gen_results "DOpus Magellan II ARexx: Results from commands."

@{fg shine}Results from commands.@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
If a command returns a value or information, the data will generally be
returned in the @{bg fill} RESULT @{bg back} variable. The only exceptions to this are the
@{" dopus getdesktop " LINK dopus_getdesktop}, @{" dopus getstring " LINK dopus_getstring} and @{" lister getstring " LINK lister_getstring} commands
which return information in the special @{bg fill} DOPUSRC @{bg back} variable.

@{" Error " LINK gen_errors} codes are returned in the @{bg fill} RC @{bg back} variable.

@{i}You must include the line @{bg fill} "OPTIONS RESULTS" @{bg back} near the top of your script
to enable the @{bg fill} RESULT @{bg back} variable. See an ARexx manual for more information. @{ui}

@endnode
@NODE gen_intro "DOpus Magellan II ARexx: Introduction."

@{fg shine}Introduction to ARexx support in Directory Opus 5.@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
The ARexx command set is very comprehensive and flexible. Almost complete
control of listers in name mode is offered, along with the ability to
launch functions and commands. You can add your own commands to Opus via
ARexx scripts which are loaded automatically - the commands appear
identical to the built-in functions. You can even replace the default
commands with your own.

There is also a powerful custom handler ability. This allows your ARexx
program to receive messages from Opus for a variety of user actions,
including lister and icon events. See the section on @{" Custom Handlers " LINK custom_handlers}
for more information.

@endnode
@node arexx_commands "DOpus Magellan II ARexx: Commands."

@{fg shine}ARexx Commands@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
For simplicity, the Directory Opus 5 command set is arranged in a
hierarchical structure, with only three main (or base) commands:-

@{" dopus " LINK list_dopus}

The first base command is @{bg fill} dopus @{bg back}. This is a general purpose command, and
allows you to perform functions not falling into the other categories.

@{" lister " LINK list_lister}

The next base command, @{bg fill} lister @{bg back}, allows you to control listers and entries
within listers.

@{" command " LINK list_command}

The third base command is @{bg fill} command @{bg back}. This allows you to call the internal
commands of Directory Opus 5 from an ARexx script. The commands execute
exactly as if they had been run from a custom button or menu.

@endnode
@NODE list_dopus "DOpus Magellan II ARexx: 'dopus' commands."

@{fg shine}'dopus' commands.@{fg text} (Alphabetical listing)
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
These are a general purpose commands, allowing you to perform functions
not falling into the other categories.

 @{" dopus addappicon " LINK dopus_addappicon}
 @{" dopus addtrap " LINK dopus_addtrap}
 @{" dopus back " LINK dopus_back}
 @{" dopus checkdesktop " LINK dopus_checkdesktop}
 @{" dopus clear " LINK dopus_clear}
 @{" dopus command " LINK dopus_command}
 @{" dopus desktoppopup " LINK dopus_desktoppopup}
 @{" dopus error " LINK dopus_error}
 @{" dopus front " LINK dopus_front}
 @{" dopus getdesktop " LINK dopus_getdesktop}
 @{" dopus getfiletype " LINK dopus_getfiletype}
 @{" dopus getstring " LINK dopus_getstring}
 @{" dopus matchdesktop " LINK dopus_matchdesktop}
 @{" dopus progress " LINK dopus_progress}
 @{" dopus query " LINK dopus_query}
   ---> @{" background " LINK dopus_query_background}      @{" font " LINK dopus_query_font}            @{" palette " LINK dopus_query_palette}         @{" pens " LINK dopus_query_pens}           @{" sound " LINK dopus_query_sound}
 @{" dopus read " LINK dopus_read}
 @{" dopus refresh " LINK dopus_refresh}
   ---> @{" all " LINK dopus_refresh_all}             @{" background " LINK dopus_refresh_background}      @{" icons " LINK dopus_refresh_icons}           @{" lister " LINK dopus_refresh_lister}
 @{" dopus remappicon " LINK dopus_remappicon}
 @{" dopus remtrap " LINK dopus_remtrap}
 @{" dopus request " LINK dopus_request}
 @{" dopus script " LINK dopus_script}
 @{" dopus screen " LINK dopus_screen}
 @{" dopus send " LINK dopus_send}
 @{" dopus set " LINK dopus_set}
   ---> @{" background " LINK dopus_set_background}      @{" font " LINK dopus_set_font}            @{" palette " LINK dopus_set_palette}         @{" pens " LINK dopus_set_pens}           @{" sound " LINK dopus_set_sound}
 @{" dopus setappicon " LINK dopus_setappicon}
 @{" dopus version " LINK dopus_version}

@ENDNODE
@NODE list_lister "DOpus Magellan II ARexx: 'lister' commands."

@{fg shine}'lister' commands.@{fg text} (Alphabetical listing)
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
These commands allow you to control listers and entries within listers.

 @{" lister add " LINK lister_add}
 @{" lister addstem " LINK lister_addstem}
 @{" lister copy " LINK lister_copy}
 @{" lister clear " LINK lister_clear}
        @{" value " LINK lister_clear_value}
 @{" lister clearcaches " LINK lister_clearcaches}
 @{" lister close " LINK lister_close}
 @{" lister empty " LINK lister_empty}
 @{" lister findcache " LINK lister_findcache}
 @{" lister getstring " LINK lister_getstring}
 @{" lister iconify " LINK lister_iconify}
 @{" lister new " LINK lister_new}
 @{" lister query " LINK lister_query}
   ---> @{" active " LINK lister_query_active}           @{" all " LINK lister_query_all}            @{" dest " LINK lister_query_dest}          @{" source " LINK lister_query_source}
   ---> @{" abort " LINK lister_query_abort}            @{" busy " LINK lister_query_busy}           @{" case " LINK lister_query_case}          @{" commentlength " LINK lister_query_commentlength}
        @{" dirs " LINK lister_query_dirs}             @{" display " LINK lister_query_display}        @{" entries " LINK lister_query_entries}       @{" entry " LINK lister_query_entry}
        @{" files " LINK lister_query_files}            @{" firstsel " LINK lister_query_firstsel}       @{" flags " LINK lister_query_flags}         @{" handler " LINK lister_query_handler}
        @{" header " LINK lister_query_header}           @{" hide " LINK lister_query_hide}           @{" label " LINK lister_query_label}         @{" lock " LINK lister_query_lock}
        @{" mode " LINK lister_query_mode}             @{" namelength " LINK lister_query_namelength}     @{" numdirs " LINK lister_query_numdirs}       @{" numentries " LINK lister_query_numentries}
        @{" numfiles " LINK lister_query_numfiles}         @{" numseldirs " LINK lister_query_numseldirs}     @{" numselentries " LINK lister_query_numselentries} @{" numselfiles " LINK lister_query_numselfiles}
        @{" path " LINK lister_query_path}             @{" proc " LINK lister_query_proc}           @{" position " LINK lister_query_position}      @{" seldirs " LINK lister_query_seldirs}
        @{" selentries " LINK lister_query_selentries}       @{" selfiles " LINK lister_query_selfiles}       @{" separate " LINK lister_query_separate}      @{" show " LINK lister_query_show}
        @{" sort " LINK lister_query_sort}             @{" title " LINK lister_query_title}          @{" toolbar " LINK lister_query_toolbar}       @{" value " LINK lister_query_value}
        @{" visible " LINK lister_query_visible}          @{" window " LINK lister_query_window}
 @{" lister read " LINK lister_read}
 @{" lister refresh " LINK lister_refresh}
 @{" lister reload " LINK lister_reload}
 @{" lister remove " LINK lister_remove}
 @{" lister request " LINK lister_request}
 @{" lister set " LINK lister_set}
   ---> @{" busy " LINK lister_set_busy}             @{" case " LINK lister_set_case}           @{" commentlength " LINK lister_set_commentlength} @{" dest " LINK lister_set_dest}
        @{" display " LINK lister_set_display}          @{" field " LINK lister_set_field}          @{" flags " LINK lister_set_flags}         @{" handler " LINK lister_set_handler}
        @{" header " LINK lister_set_header}           @{" hide " LINK lister_set_hide}           @{" label " LINK lister_set_label}         @{" lock " LINK lister_set_lock}
        @{" mode " LINK lister_set_mode}             @{" namelength " LINK lister_set_namelength}     @{" newprogress " LINK lister_set_newprogress}   @{" off " LINK lister_set_off}
        @{" path " LINK lister_set_path}             @{" position " LINK lister_set_position}       @{" progress " LINK lister_set_progress}      @{" separate " LINK lister_set_separate}
        @{" show " LINK lister_set_show}             @{" sort " LINK lister_set_sort}           @{" source " LINK lister_set_source}        @{" title " LINK lister_set_title}
        @{" toolbar " LINK lister_set_toolbar}          @{" value " LINK lister_set_value}          @{" visible " LINK lister_set_visible}
 @{" lister select " LINK lister_select}
 @{" lister wait " LINK lister_wait}

@ENDNODE
@NODE dopus_addappicon "DOpus Magellan II ARexx: 'dopus addappicon'."

@{fg shine}dopus addappicon@{fg text} @{fg fill}<@{fg text}port@{fg fill}> <@{fg text}label@{fg fill}> <@{fg text}id@{fg fill}> [@{fg shine}pos@{fg fill} <@{fg text}x@{fg fill}> <@{fg text}y@{fg fill}>] [@{fg shine}icon@{fg fill} <@{fg text}filename@{fg fill}>]
                 @{fg fill}[@{fg shine}quotes@{fg fill}] [@{fg shine}info@{fg fill}] [@{fg shine}snap@{fg fill}] [@{fg shine}close@{fg fill}] [@{fg shine}local@{fg fill}] [@{fg shine}locked@{fg fill}]
                 @{fg fill}[@{fg shine}menu@{fg fill} <@{fg text}stem@{fg fill}>] [@{fg shine}base@{fg fill} <@{fg text}base@{fg fill}>]
@{fg text}
This command allows you to add your own AppIcons to the Opus (and
optionally the Workbench) screen from ARexx. You can specify an icon image
to use, the label of the icon and the position on the screen, as well as
several other parameters. You can also specify the items for the pop-up
menu for the new icon. Opus sends messages to the message port you specify
- see the example scripts provided for more information on how to receive
and process these messages.

The parameters for @{bg fill} addappicon @{bg back} are:-

        @{b}port@{ub}   -       the name of the port messages are sent to
        @{b}label@{ub}  -       the icon label (text displayed under the icon)
        @{b}id@{ub}     -       your own ID for the icon; this is returned in
                        messages
        @{b}pos@{ub}    -       position for the icon (xy coordinates)
        @{b}icon@{ub}   -       optional pathname of icon file to use
                        @{i}(without the .info suffix) @{ui}
        @{b}quotes@{ub} -       specify this keyword if you want filenames
                        quoted when sent to the message port
        @{b}info@{ub}   -       if you want "Information" to work on this icon
        @{b}snap@{ub}   -       if you want "Snapshot" to work on this icon
        @{b}close@{ub}  -       if you want "Close" instead of "Open" in
                        the pop-up menu
        @{b}local@{ub}  -       if you want the icon to be local to Opus
                        (and not appear on Workbench)
        @{b}locked@{ub} -       the icon will start out locked in position,
                        unable to be moved
        @{b}menu@{ub}   -       name of a stem variable containing
                        your own menu items
        @{b}base@{ub}   -       allows you to specify the base ID of
                        messages sent from the pop-up menu

The @{bg fill} menu @{bg back} parameter allows you to specify your own items for the icon's
pop-up menu. The stem variable must be in the following format:

        @{b}stem.COUNT@{ub}     - number of items
        @{b}stem.0@{ub}         - item 1
        @{b}stem.1@{ub}         - item 2
        etc.

If you specify "---" as an item, a separator bar will appear.

When you receive a message that the user has selected one of these menu
items, the message will contain the @{bg fill} ID @{bg back} of the item. This is the value
corresponding to the item's position in the stem array (eg 0 for item 1, 1
for item 2, etc). If the base field is specified, the value given for the
base will be added to this ID.

This command returns an @{bg fill} appicon handle @{bg back} in @{" RESULT " LINK gen_results} if it is successful.
This same handle can be passed to @{" dopus setappicon " LINK dopus_setappicon} to modify the icon,
and must be passed to @{" dopus remappicon " LINK dopus_remappicon} to remove the appicon when you
are finished.

If you do not specify an icon file to use then the system's default "tool"
icon will be used for the image.

Messages from the appicon are sent to the port you specified. The messages
are structured in much the same way as messages sent from listers, so
there's no reason you shouldn't be able to use the same code for both. For
more information, see the @{" Custom Handlers " LINK custom_handlers} section.

@{fg shine}See also:@{fg text}

@{" dopus setappicon " LINK dopus_setappicon}
@{" dopus remappicon " LINK dopus_remappicon}
@{" AppIcon Handlers " LINK ch_appicons}

@endnode

@NODE dopus_addtrap "DOpus Magellan II ARexx: 'dopus addtrap'."

@{fg shine}dopus addtrap @{fg fill}(@{fg shine}abort@{fg fill}|<@{fg text}command@{fg fill}>) <@{fg text}handler@{fg fill}> [@{fg shine}port @{fg fill}<@{fg text}portname@{fg fill}>]
@{fg text}
This command allows your script to trap the progress bar's abort button or
any Opus internal command.

Specify the @{bg fill} abort @{bg back} keyword to trap the abort message, or the name of the
internal command you wish to trap.

@{bg fill} handler @{bg back} is the name of your @{" custom handler " LINK custom_handlers} message port. If you pass
the name of a message port with the optional @{bg fill} port @{bg back} keyword, the message
will be sent to that port instead of your usual handler port. This can be
very useful when used with @{bg fill} abort @{bg back} if your handler is busy doing something
synchronously when the abort is pressed. If the abort port is on a separate
process, it may be able to interrupt the main handler process using signals
for instance.

You can also add a trap for all internal commands using an asterisk as a
wildcard, for example:  dopus addtrap * myhandler

The @{" dopus remtrap " LINK dopus_remtrap} command is used to remove trapped functions.

See the @{" Custom Handlers " LINK custom_handlers} section for more information on the messages
sent.

@{fg shine}See also:@{fg text}

@{" dopus remtrap " LINK dopus_remtrap}
@{" Trapped Commands " LINK ch_ltrappedfunctions}

@endnode
@NODE dopus_back "DOpus Magellan II ARexx: 'dopus back'."

@{fg shine}dopus back
@{fg text}
This command moves the Directory Opus 5 window (and screen) to the rear of
the display.

@{fg shine}See also:@{fg text}

@{" dopus front " LINK dopus_front}

@endnode
@NODE dopus_checkdesktop "DOpus Magellan II ARexx: 'dopus checkdesktop'."

@{fg shine}dopus checkdesktop
@{fg text}
This command is used when your script has just copied one or more files to
a directory. You pass it the destination path that you copied the files to,
and Opus compares this path with the location of the Desktop folder. If
they are the same, Opus will then scan the Desktop folder and update the
icons on-screen if necessary.

@{fg shine}See also:@{fg text}

@{" dopus getdesktop " LINK dopus_getdesktop}
@{" dopus matchdesktop " LINK dopus_matchdesktop}

@endnode
@NODE dopus_clear "DOpus Magellan II ARexx: 'dopus clear'."

@{fg shine}dopus clear @{fg fill}<@{fg text}item@{fg fill}>
@{fg text}
This command allows you to clear a setting, it the equivalent of doing a
@{" dopus set " LINK dopus_set} with a null string.

For example,
        + @{b}dopus clear sound Startup@{ub}
        + @{b}dopus clear background desktop@{ub}


@{fg shine}See also:@{fg text}

@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_command "DOpus Magellan II ARexx: 'dopus command'."

@{fg shine}dopus command @{fg fill}<@{fg text}name@{fg fill}> @{fg shine}program @{fg fill}<@{fg text}scriptname@{fg fill}> [@{fg shine}desc @{fg fill}<@{fg text}description@{fg fill}>]
              @{fg fill}[@{fg shine}template @{fg fill}<@{fg text}template@{fg fill}>] [@{fg shine}source@{fg fill}] [@{fg shine}dest@{fg fill}] [@{fg shine}private@{fg fill}]
              @{fg fill}[@{fg shine}help @{fg fill}<@{fg text}help file@{fg fill}>] [@{fg shine}handler@{fg fill}] [@{fg shine}temp@{fg fill}]
              @{fg fill}[@{fg shine}ext @{fg fill}<@{fg text}menu name@{fg fill}> @{fg shine}type @{fg fill}<@{fg text}filetype@{fg fill}>] [@{fg shine}remove@{fg fill}]
@{fg text}
This command provides the ability to add new internal commands to Directory
Opus, or to replace existing commands. It is generally called from within
the init function of an Opus ARexx module and the @{bg fill} program @{bg back} parameter will
be the name of that module, @{i}without the ".dopus5" extension.@{ui}
The @{bg fill} program @{bg back} field is mandatory, and Opus will run the script name you
provide here whenever this function is invoked.

Use the @{bg fill} name @{bg back} parameter to specify what the command should be called,
and, optionally, use the @{bg fill} desc @{bg back} parameter to define a description of
the command which will appear in command lists.

Using the @{bg fill} handler @{bg back} parameter will allow  the item to be displayed
only if a custom handler matching the @{bg fill} program @{bg back} parameter is present
for the lister.

The @{bg fill} remove @{bg back} flag allows you to remove any command specified with @{bg fill} name @{bg back}.

@{bg fill} temp @{bg back} will allow you to add a 'temporary' command, which does not have
an external command file.  This command will then do nothing unless it is
trapped with the @{" dopus addtrap " LINK dopus_addtrap} command.  Use the @{bg fill} remove @{bg back} flag
of the @{" dopus command " LINK dopus_command} to remove it when you are done.
Using the @{bg fill} private @{bg back} flag will stop the temporary command from being
seen in the internal command list.

The @{bg fill} template @{bg back} is not parsed for you in any way -- it is simply shown to the
user when they request a template for your command. It is up to your script
to handle the argument string sent to it.

If you give the @{bg fill} source @{bg back} or @{bg fill} dest @{bg back} keyword (or both), your command will not
run unless there is a lister of the given type. When run, the lister will
automatically go busy, and the "source" or "dest" argument given to your
script will contain the lister's handle. (Each argument still exists when
the relevant keyword is not given, but is always "0").

@{i}Note that the standard ARexx module example code parses the source lister
handle into a variable called @{b}source@{ub} and the destination handle into
@{b}dest@{ub}. Be careful that when you specify the @{bg fill} source @{bg back} keyword for
dopus command that you put it in quotes ("source"), otherwise the contents
of the @{b}source@{ub} variable may be used in place of the actual word "source".
Take similar precautions with the "dest" word. @{ui}

You can specify a help file for the new command with the @{bg fill} help @{bg back} parameter.

@{fg shine}PopUpExtensions@{fg text}

You can add a command to the pop-up menu of icons of a given type, or to
the lister itself, by specifying a filetype name or ID for the @{bg fill} type @{bg back}
parameter and the string to appear as the menu item for the @{bg fill} ext @{bg back} parameter.

To match more than one filetype you can specify the @{bg fill} type @{bg back} parameter
multiple times (but you can only have one @{bg fill} ext @{bg back}). You can also specify
one of the following keywords for the @{bg fill} type @{bg back} parameter:

  @{b}all, disk, drawer, tool, project, trash, baddisk, leftout, lister, lister2.@{ub}

Specifying @{b}lister@{ub} for the @{bg fill} type @{bg back} parameter will add items to the lister
pop-up menu rather than the icon pop-up menu.

Specifying @{b}lister2@{ub} for the @{bg fill} type @{bg back} parameter will add items to
the pop-up menu available from the SRCE/DEST display in the lister status bar.

If you add menus to a filetype at priority -124, they will only be shown
if no other filetype matched. This allows you to have a "default filetype"
with menus that will only be shown if no other filetype menus are
displayed.

Commands which are intended for pop-up menus are unlikely to be of general
use. You can use the @{bg fill} private @{bg back} keyword to hide the command (it will not
appear in any list shown to the user). (This is @{i}not @{ui}restricted to
PopUpExtensions.)

See @{" ARexx modules " LINK arexx_modules} and the example scripts for more information.

@endnode
@NODE dopus_desktoppopup "DOpus Magellan II ARexx: 'dopus desktoppopup'."

@{fg shine}dopus desktoppopup @{fg fill}[@{fg shine}flags@{fg fill}]
@{fg text}
This command triggers the Desktop popup menu at the current mouse position,
and returns a value in @{" RC " LINK gen_results} indicating the user's selection.

@{bg fill} flags @{bg back} specifies what options will be disabled, by default all options
are available.  Add the flag values as appropriate.

        Add to disable     Item           Result Code
              2        Create Left-Out        1
              4        Copy to Desktop        2
              8        Move to Desktop        3

If the user cancels the operation, @{" RC " LINK gen_results} will have the value 0.

For example,
        + @{b}dopus desktoppopup 6@{ub}
        > @{i}2@{ui}


@{fg shine}See also:@{fg text}

@{" dopus getdesktop " LINK dopus_getdesktop}

@endnode
@NODE dopus_error "DOpus Magellan II ARexx: 'dopus error'."

@{fg shine}dopus error @{fg fill}<@{fg text}code@{fg fill}>
@{fg text}
This command is used to retrieve meaningful error messages when passed an
Opus ARexx error code.

For example,
        + @{b}dopus error 1@{ub}
        > @{i}File rejected by filters @{ui}

        + @{b}dopus error 10@{ub}
        > @{i}Invalid lister handle @{ui}

@{fg shine}See also:@{fg text}

@{" Errors " LINK gen_errors}

@endnode
@NODE dopus_front "DOpus Magellan II ARexx: 'dopus front'."

@{fg shine}dopus front
@{fg text}
This command moves the Directory Opus 5 window (and screen) to the front of
the display.

@{fg shine}See also:@{fg text}

@{" dopus back " LINK dopus_back}

@endnode
@NODE dopus_getdesktop "DOpus Magellan II ARexx: 'dopus getdesktop'."

@{fg shine}dopus getdesktop
@{fg text}
This command allows you to find the path of the desktop folder. It returns
the path in @{" RESULT " LINK gen_results}, and returns a value in @{" DOPUSRC " LINK gen_results} that indicates the
user's desktop settings:

      0    desktop popup disabled
      1    no default action
      2    default : create leftout
      3    default : move
      4    default : copy

For example,
        + @{b}dopus getdesktop@{ub}
        > @{i}HD0:Opus5/Desktop/@{ui}

This command, the @{" lister getstring " LINK lister_getstring} and the @{" dopus getstring " LINK dopus_getstring} commands
are the only ones that use the @{" DOPUSRC " LINK gen_results} variable currently, but this may
change in the future.

@{fg shine}See also:@{fg text}

@{" dopus checkdesktop " LINK dopus_checkdesktop}
@{" dopus matchdesktop " LINK dopus_matchdesktop}

@endnode
@NODE dopus_getfiletype "DOpus Magellan II ARexx: 'dopus getfiletype'."

@{fg shine}dopus getfiletype @{fg fill}<@{fg text}filename@{fg fill}> [@{fg shine}id@{fg fill}]
@{fg text}
This command allows you to query a file to see if it is recognised by
Directory Opus 5. @{bg fill} filename @{bg back} is the name of the file, including the full
path. By default, if the file is recognised the Filetype description string
will be returned in @{" RESULT " LINK gen_results}. If you specify the @{bg fill} ID @{bg back} keyword, the
Filetype ID will be returned instead.

For example,
        + @{b}dopus getfiletype ram:testfile.lha@{ub}
        > @{i}LHA Archive @{ui}
        + @{b}dopus getfiletype ram:picture.jpg id@{ub}
        > @{i}JPEG @{ui}

@endnode
@NODE dopus_getstring "DOpus Magellan II ARexx: 'dopus getstring'."

@{fg shine}dopus getstring @{fg fill}<@{fg text}text@{fg fill}> [@{fg shine}secure@{fg fill}] [<@{fg text}length@{fg fill}>] [<@{fg text}default@{fg fill}>] [<@{fg text}buttons@{fg fill}>]
@{fg text}
This command allows you to prompt the user to input a text string.

@{bg fill} text @{bg back} is a string of text to be displayed in the requester, and should be
surrounded by quotes if it contains spaces.

The @{bg fill} secure @{bg back} keyword causes the string to be displayed as asterisks ("*"),
which can be useful for passwords.

@{bg fill} length @{bg back} is the maximum length of string to accept and defaults to 80 if
not specified.

@{bg fill} default @{bg back} is the default value of the string; that is, the text you wish to
initially appear in the field.

@{bg fill} buttons @{bg back} are the buttons you wish the requester to have; each button
should be separated by a vertical bar character ("|"). If the buttons
parameter is omitted the requester will have a single button marked "OK".

For example,
        > @{b}dopus getstring '"Please enter some text" 40 "" Okay|Cancel'@{ub}

@{i}Note the quotes around the entire argument string. @{ui}

@{i}You can have multiple lines in the requester text by putting the "return"
character at the end of lines. @{ui}

This would display a requester with the string "Please enter some text", a
maximum input length of 40 characters, an empty default sting, and buttons
labelled "Okay" and "Cancel".

The string (if any) is returned in @{" RESULT " LINK gen_results}. The cardinal number of the
selected button is returned in the special variable @{" DOPUSRC " LINK gen_results}, but the
last (rightmost) gadget is always number 0. In the above example, if the
user clicked "Okay", @{" DOPUSRC " LINK gen_results} would contain 1, and if the user clicked
"Cancel" it would contain 0.  If the RETURN key is used in the string gadget
to accept the text, then the @{" DOPUSRC " LINK gen_results} variable will contain the value -1.

This command, the @{" lister getstring " LINK lister_getstring} and the @{" dopus getdesktop " LINK dopus_getdesktop} commands
are the only ones that use the @{" DOPUSRC " LINK gen_results} variable currently, but this may
change in the future.

@{i}Please note that previous versions of Opus 5 did not clear @{" RESULT " LINK gen_results} if an
empty string was entered. Make sure that this change does not affect your
scripts. Also note that the @{" DOPUSRC " LINK gen_results} variable did not exist in the
original version of Opus 5. @{ui}

@{fg shine}See also:@{fg text}

@{" dopus request " LINK dopus_request}
@{" lister getstring " LINK lister_getstring}
@{" lister request " LINK lister_request}

@endnode
@NODE dopus_matchdesktop "DOpus Magellan II ARexx: 'dopus matchdesktop'."

@{fg shine}dopus matchdesktop @{fg fill}<@{fg text}path@{fg fill}>@{fg shine}
@{fg text}
This command allows you to match a supplied @{bg fill} path @{bg back} against the desktop
folder.  @{" RC " LINK gen_results} will be set according to whether a match was made.

For example,
        + @{b}dopus matchdesktop 'dopus5:desktop/'@{ub}
        > @{i}1@{ui}

@{fg shine}See also:@{fg text}

@{" dopus getdesktop " LINK dopus_getdesktop}
@{" dopus checkdesktop " LINK dopus_checkdesktop}

@endnode
@NODE dopus_progress "DOpus Magellan II ARexx: 'dopus progress'."

@{fg shine}dopus progress @{fg fill}[@{fg shine}name@{fg fill}] [@{fg shine}file@{fg fill}] [@{fg shine}info@{fg fill}] [@{fg shine}info2@{fg fill}] [@{fg shine}info3@{fg fill}] [@{fg shine}bar@{fg fill}] [@{fg shine}abort@{fg fill}]
@{fg text}
This opens a progress indicator centred on the Opus screen. It is similar
to the @{" lister set newprogress " LINK lister_set_newprogress} command which you should use if you want
the indicator centred on a lister window instead.

        @{b}name@{ub}   - allocates space for filename display
        @{b}file@{ub}   - allocates space for file progress display
        @{b}info@{ub}   - allocates space for information line 1
        @{b}info2@{ub}  - allocates space for information line 2
        @{b}info3@{ub}  - allocates space for information line 3
        @{b}bar@{ub}    - allocates space for progress bar
        @{b}abort@{ub}  - adds "Abort" gadget

Progress windows that show both the bar graph and the file progress will
have the graph and file displays swapped around. This means that instead of
the graph showing the percentage of files copied, and a 'xx%' display
showing the progress of that file, the graph shows the file progress and a
'xxx of yyy' display gives overall information.

A handle is returned in @{" RESULT " LINK gen_results} which you should use to control the
indicator with the commands below.

For example,
        + @{b}dopus progress name file info bar abort@{ub}
        > @{i}137025148 @{ui}


@{bg text}@{fg fill} The following commands are for use once your progress window is open. @{fg text}@{bg back}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}abort
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

This is similar to @{" lister query abort " LINK lister_query_abort} command for lister-based progress
indicators. It returns 1 if the user has clicked the "Abort" gadget of the
indicator, and 0 otherwise.

For example,
        + @{b}dopus progress 137025148 abort@{ub}
        > @{i}0 @{ui}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}off
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

This is similar to @{" lister clear progress " LINK lister_clear} for lister-based indicators. It
closes the progress indicator window.

For example,
        + @{b}dopus progress 137025148 off@{ub}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}name @{fg fill}<@{fg text}filename@{fg fill}>
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

If the progress bar was opened with the @{b}name@{ub} parameter, this will set the
current filename to @{bg fill} filename @{bg back}.

For example,
        + @{b}dopus progress 137025148 name 'myfile.txt'@{ub}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}file @{fg fill}<@{fg text}total@{fg fill}> <@{fg text}count@{fg fill}>
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

If the progress indicator was opened with the @{b}file@{ub} but not the @{b}bar@{ub}
parameter, this will set the total number of files and the number of the
current file. This is shown as 'xx%' in the top right of the requester.

If the progress indicator was opened with both the @{b}file@{ub} and @{b}bar@{ub} parameters,
this will set the total number of bytes and the current byte count. This is
shown in the bar graph part of the requester.

        + @{b}dopus progress 137025148 file 12 4@{ub}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> <@{fg shine}info@{fg fill}|@{fg shine}info2@{fg fill}|@{fg shine}info3@{fg fill}> <@{fg text}text@{fg fill}>
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

@{bg fill} text @{bg back} is a text string to be displayed between the filename and the bar
graph of the progress indicator. You can only use this if you allocated
this space when you created the progress bar.

For example,
        + @{b}dopus progress 137025148 info "From 'T' to 'Ram:'"@{ub}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}bar @{fg fill}<@{fg text}total@{fg fill}> <@{fg text}count@{fg fill}>
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

If the progress indicator was opened with the @{b}bar@{ub} but not the @{b}file@{ub}
parameter, this will set the @{bg fill} total @{bg back} number of bytes and the current byte
@{bg fill} count @{bg back}. This is shown in the bar graph part of the requester.

If the progress indicator was opened with both the @{b}file@{ub} and @{b}bar@{ub} parameters,
this will set the @{bg fill} total @{bg back} number of files and the the current file @{bg fill} count @{bg back}.
This is shown as 'xxx of yyy' in the top right of the requester.

For example,
        + @{b}dopus progress 137025148 bar 1024 100@{ub}


@{fg shine}dopus progress @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}title @{fg fill}<@{fg text}text@{fg fill}>
@{fg text}
@{bg fill} handle @{bg back} is the handle of the progress indicator in question, obtained
when you first open it.

@{bg fill} text @{bg back} is a text string to be displayed in the title bar of the progress
indicator.

For example,
        + @{b}dopus progress 137025148 title 'Copying...'@{ub}


@{fg shine}See also:@{fg text}

@{" lister set newprogress " LINK lister_set_newprogress}
@{" lister set progress " LINK lister_set_progress}

@endnode
@NODE dopus_query "DOpus Magellan II ARexx: 'dopus query'."

@{fg shine}dopus query @{fg fill}<@{fg text}item@{fg fill}>
@{fg text}
This command allows you to get information about the current Opus settings
and complements the @{" dopus set " LINK dopus_set} command.


@{fg shine}See also:@{fg text}

@{" dopus query background " LINK dopus_query_background}
@{" dopus query font " LINK dopus_query_font}
@{" dopus query palette " LINK dopus_query_palette}
@{" dopus query pens " LINK dopus_query_pens}
@{" dopus query sound " LINK dopus_query_sound}
@{" dopus set " LINK dopus_set}
@{" dopus set background " LINK dopus_set_background}
@{" dopus set font " LINK dopus_set_font}
@{" dopus set palette " LINK dopus_set_palette}
@{" dopus set pens " LINK dopus_set_pens}
@{" dopus set sound " LINK dopus_set_sound}

@endnode
@NODE dopus_query_background "DOpus Magellan II ARexx: 'dopus query background'."

@{fg shine}dopus query background @{fg fill}<@{fg text}desktop@{fg fill}|@{fg text}lister@{fg fill}|@{fg text}req@{fg fill}>
@{fg text}
This command allows you to query the current background picture for
either the Desktop, Listers, or Requesters.  The path and filename will
be returned in @{" RESULT " LINK gen_results}.

For example,
        + @{b}dopus query background desktop@{ub}
        > @{i}DOpus5:Backgrounds/Stonewash.iff@{ui}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus set " LINK dopus_set}
@{" dopus set background " LINK dopus_set_background}

@endnode
@NODE dopus_query_font "DOpus Magellan II ARexx: 'dopus query font'."

@{fg shine}dopus query font @{fg fill}<@{fg text}type@{fg fill}>
@{fg text}
Returns information about the current Opus fonts in use.

@{bg fill} type @{bg back} can be one of the following:

    @{fg shine}screen@{fg text}  - The font Opus uses when on it's own screen.
    @{fg shine}listers@{fg text} - Current font used for the listers file display.
    @{fg shine}iconsd@{fg text}  - Font used for the Desktop icon display.
    @{fg shine}iconsw@{fg text}  - Font used for icon display in windows.

For example,
        + @{b}dopus query font screen@{ub}
        > @{i}"XHelvetica.font" 11@{ui}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus set " LINK dopus_set}
@{" dopus set font " LINK dopus_set_font}

@endnode
@NODE dopus_query_palette "DOpus Magellan II ARexx: 'dopus query palette'."

@{fg shine}dopus query palette
@{fg text}
Returns the current Opus palette information as a group of 16 hex numbers.
The last 8 represent the Opus colours, the first 8 represent the system
colours when Opus is on it's own screen.

For example,
        + @{b}dopus query palette@{ub}
        > @{i}0x909090 0x000000 0xF0F0F0 0x606DA0 0x808080 0xA0A0A0 0xA09070 0xF0A090
          0xB4E494 0xC8FC00 0x004C94 0xFCFCD4 0xD8D8D8 0x183454 0xE8E8E8 0x505050@{ui}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus set " LINK dopus_set}
@{" dopus set palette " LINK dopus_set_palette}

@endnode
@NODE dopus_query_pens "DOpus Magellan II ARexx: 'dopus query pens'."

@{fg shine}dopus query pens @{fg fill}<@{fg text}type@{fg fill}>
@{fg text}
Returns information about the current Opus pen colours used for the various
display components.

     @{bg fill} type @{bg back}        @{bg fill} Returned values @{bg back}

    @{fg shine}icons@{fg text}          <dfg> <dbg> <dstyle> <wfg> <wbg> <wstyle>
    @{fg shine}files@{fg text}          <fg> <bg>
    @{fg shine}dirs@{fg text}           <fg> <bg>
    @{fg shine}selfiles@{fg text}       <fg> <bg>
    @{fg shine}seldirs@{fg text}        <fg> <bg>
    @{fg shine}devices@{fg text}        <fg> <bg>
    @{fg shine}assigns@{fg text}        <fg> <bg>
    @{fg shine}source@{fg text}         <fg> <bg>
    @{fg shine}dest@{fg text}           <fg> <bg>
    @{fg shine}gauge@{fg text}          <normal> <full>
    @{fg shine}user@{fg text}           <count>

The pen number is mapped in the following way:

  1-4    bottom four system colours
  5-8    top four system colours
 9-16    Opus user pens

For example,
        + @{b}dopus query pens icons@{ub}
        > @{i}8 1 3 1 12 2@{ui}
        + @{b}dopus query pens gauge@{ub}
        > @{i}11 13@{ui}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus set " LINK dopus_set}
@{" dopus set pens " LINK dopus_set_pens}

@endnode
@NODE dopus_query_sound "DOpus Magellan II ARexx: 'dopus query sound'."

@{fg shine}dopus query sound @{fg fill}<@{fg text}event@{fg fill}>
@{fg text}
This command allows you to query the current sound for the specified
@{bg fill} event @{bg back}.  The path and filename will be returned in @{" RESULT " LINK gen_results}.

For example,
        + @{b}dopus query sound Startup@{ub}
        > @{i}DOpus5:Sounds/Danger.8svx@{ui}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus set " LINK dopus_set}
@{" dopus set sound " LINK dopus_set_sound}

@endnode
@NODE dopus_read "DOpus Magellan II ARexx: 'dopus read'."

@{fg shine}dopus read @{fg fill}[@{fg shine}delete@{fg fill}] [@{fg shine}pos @{fg fill}<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}>] @{fg fill}[<@{fg text}handle@{fg fill}>] @{fg fill}[@{fg shine}hex@{fg fill}|@{fg shine}ansi@{fg fill}|@{fg shine}smart@{fg fill}] <@{fg text}filename@{fg fill}>
@{fg shine}dopus read @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}quit
@{fg text}
The @{bg fill} read @{bg back} command is provided to allow you greater control over the Opus
text viewer. It basically allows you to open a viewer and view multiple
files in it one by one before closing it again.

The @{bg fill} pos @{bg back} keyword will allow you to open the viewer at a specific
position on the screen.

When you do not specify a @{bg fill} handle @{bg back} a new viewer is opened and its viewer
handle is returned in @{" RESULT " LINK gen_results}. You use the viewer handle in much the same
way as you would a lister handle, you can either get it to load new files or
@{bg fill} quit @{bg back}.

Normally the viewer will default to ASCII mode to view files, you can specify
another mode to use by using one of the keywords: @{bg fill} hex @{bg back}, @{bg fill} ansi @{bg back}
or @{bg fill} smart @{bg back}.

If you give the @{bg fill} delete @{bg back} keyword the file will be deleted once the viewer
has been closed. This is useful for displaying temporary files.

For example,
        + @{b}dopus read ram:file1.txt@{ub}
        > @{i}121839492 @{ui}
        + @{b}"dopus read pos 10/10/400/200 ram:file2.txt"@{ub}
        > @{i}121839492 @{ui}
        + @{b}dopus read 121839492 ram:file2.txt@{ub}
        > @{i}121839492 @{ui}
        + @{b}dopus read hex C:Info@{ub}
        > @{i}121839492 @{ui}
        + @{b}dopus read 121839492 quit@{ub}
        > @{i}0 @{ui}

@endnode
@NODE dopus_refresh "DOpus Magellan II ARexx: 'dopus refresh'."

@{fg shine}dopus refresh @{fg fill}<@{fg text}item@{fg fill}> [@{fg shine}options@{fg fill}]
@{fg text}
This command lets you refresh the relevant @{bg fill} item @{bg back} in the Directory Opus
display.

The various @{fg shine}refresh@{fg text} commands are needed after modifying some settings
with the @{" dopus set " LINK dopus_set} command.


@{fg shine}See also:@{fg text}

@{" dopus refresh all " LINK dopus_refresh_all}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus refresh icons " LINK dopus_refresh_icons}
@{" dopus refresh lister " LINK dopus_refresh_lister}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_refresh_all "DOpus Magellan II ARexx: 'dopus refresh all'."

@{fg shine}dopus refresh all
@{fg text}
Refreshes the entire Directory Opus display.

For example,
        + @{b}dopus refresh all@{ub}


@{fg shine}See also:@{fg text}

@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus refresh icons " LINK dopus_refresh_icons}
@{" dopus refresh lister " LINK dopus_refresh_lister}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_refresh_background "DOpus Magellan II ARexx: 'dopus refresh background'."

@{fg shine}dopus refresh background @{fg fill}[@{fg shine}custom@{fg fill}]
@{fg text}
This command causes the Opus display backgrounds to be updated after
the execution of a @{" dopus set background " LINK dopus_set_background} command.

If you used the @{bg fill} custom @{bg back} keyword on the @{" dopus set background " LINK dopus_set_background} then you
must use it here, if you don't the pictures will revert back to the
environment settings.

For example,
        + @{b}dopus refresh background@{ub}
        + @{b}dopus refresh background custom@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query background " LINK dopus_query_background}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh all " LINK dopus_refresh_all}
@{" dopus refresh icons " LINK dopus_refresh_icons}
@{" dopus refresh lister " LINK dopus_refresh_lister}
@{" dopus set background " LINK dopus_set_background}

@endnode
@NODE dopus_refresh_icons "DOpus Magellan II ARexx: 'dopus refresh icons'."

@{fg shine}dopus refresh icons
@{fg text}
This command refreshes the icon display in all listers and the Opus Desktop.

For example,
        + @{b}dopus refresh icons@{ub}


@{fg shine}See also:@{fg text}

@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh all " LINK dopus_refresh_all}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus refresh lister " LINK dopus_refresh_lister}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_refresh_lister "DOpus Magellan II ARexx: 'dopus refresh lister'."

@{fg shine}dopus refresh lister @{fg fill}[@{fg shine}full@{fg fill}]
@{fg text}
This command refreshes the lister displays.

The @{bg fill} full @{bg back} flag causes everything in the listers to be
refreshed, instead of just the lister itself.

For example,
        + @{b}dopus refresh lister@{ub}
        + @{b}dopus refresh lister full@{ub}


@{fg shine}See also:@{fg text}

@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh all " LINK dopus_refresh_all}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus refresh icons " LINK dopus_refresh_icons}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_remappicon "DOpus Magellan II ARexx: 'dopus remappicon'."

@{fg shine}dopus remappicon @{fg fill}<@{fg text}handle@{fg fill}>
@{fg text}
Removes an appicon that was added previously with the @{" dopus addappicon " LINK dopus_addappicon}
command.

@{bg fill} handle @{bg back} is the value returned by @{" dopus addappicon " LINK dopus_addappicon}.

@{fg shine}See also:@{fg text}

@{" dopus addappicon " LINK dopus_addappicon}
@{" dopus setappicon " LINK dopus_setappicon}
@{" AppIcon Handlers " LINK ch_appicons}

@endnode
@NODE dopus_remtrap "DOpus Magellan II ARexx: 'dopus remtrap'."

@{fg shine}dopus remtrap @{fg fill}(@{fg shine}abort@{fg fill}|<@{fg text}command@{fg fill}>) <@{fg text}handler@{fg fill}>
@{fg text}
Disables the trapping of the progress bar's abort button or the specified
Opus internal command as initiated with the @{" dopus addtrap " LINK dopus_addtrap} command.

If you specify "*" as the command, all traps added for this handler will be
removed.

@{bg fill} handler @{bg back} is the name of the message port as specified in the
@{" dopus addtrap " LINK dopus_addtrap} command.

@{fg shine}See also:@{fg text}

@{" dopus addtrap " LINK dopus_addtrap}
@{" Trapped Commands " LINK ch_ltrappedfunctions}

@endnode
@NODE dopus_request "DOpus Magellan II ARexx: 'dopus request'."

@{fg shine}dopus request @{fg fill}<@{fg text}text@{fg fill}> <@{fg text}buttons@{fg fill}>
@{fg text}
This command allows you to request a choice from the user.

@{bg fill} text @{bg back} is a string of text to be displayed in the requester.

@{bg fill} buttons @{bg back} are the buttons you wish the requester to have; each button
should be separated by a vertical bar character ("|").

For example,
 + @{b}dopus request '"Please choose an option" Option 1|Option 2|Option 3'@{ub}

@{i}Note the quotes around the entire argument string. @{ui}

@{i}You can have multiple lines in the requester text by putting the "return"
character at the end of lines. @{ui}

This would display a requester with the string "Please choose an option",
and three buttons labelled "Option 1", "Option 2" and "Option 3".

The cardinal number of the selected button is returned in @{" RC " LINK gen_results}. The last
button supplied ("Option 3" in this case) is designated a Cancel button,
and so returns the value 0. Therefore, the values returned by this example
are 1, 2 and 0 respectively.

@{fg shine}See also:@{fg text}

@{" dopus getstring " LINK dopus_getstring}
@{" lister request " LINK lister_request}
@{" lister getstring " LINK lister_getstring}

@endnode
@NODE dopus_screen "DOpus Magellan II ARexx: 'dopus screen'."

@{fg shine}dopus screen
@{fg text}
This command returns information about the Opus screen in @{" RESULT " LINK gen_results} in the
following format:-

        @{b}<name> <width> <height> <depth> <barheight> <lister width> <lister height>@{ub}

If Opus is iconified it does not have a screen. In this case @{" RC " LINK gen_results} will be
set to 5. You can use this to find out whether or not Opus is currently
iconified.

For example,
        + @{b}dopus screen@{ub}
        > @{i}DOPUS.1 640 512 2 10 308 341@{ui}

The @{b}barheight@{ub} value is useful if you intend to open listers or other
windows just below the screen title bar.

Any screen depth of more than 8 bits, (256 colours), will be reported as 8.

@endnode
@NODE dopus_script "DOpus Magellan II ARexx: 'dopus script'."

@{fg shine}dopus script @{fg fill}<@{fg text}name@{fg fill}> [@{fg shine}data@{fg fill}]
@{fg text}
This command allows you to trigger both internal and custom scripts.

@{bg fill} name @{bg back} is the name of the script, (case insensitive).

@{bg fill} data @{bg back} is an optional string that is passed to the script in the
{Qa} parameter.

For example,
        + @{b}dopus script 'DOpus5:ARexx/ArcDir.dopus5' 'RAM:foo.lha'

@endnode
@NODE dopus_send "DOpus Magellan II ARexx: 'dopus send'."

@{fg shine}dopus send @{fg fill}<@{fg text}port name@{fg fill}> <@{fg text}string@{fg fill}>
@{fg text}
This command does nothing to Opus itself, but instead makes it easy for
you to send a string (of any length) to another ARexx task (via a message).
The string is supplied in Arg0 of the message sent to the named port.

See the @{" Custom Handlers " LINK custom_handlers} section.

@endnode
@NODE dopus_set "DOpus Magellan II ARexx: 'dopus set'."

@{fg shine}dopus set @{fg fill}<@{fg text}background@{fg fill}|@{fg text}font@{fg fill}|@{fg text}palette@{fg fill}|@{fg text}pens@{fg fill}|@{fg text}sound@{fg fill}> <@{fg text}options@{fg fill}>
@{fg text}
This command allows you to change the various Directory Opus settings, it is
used extensively by the Themes system.


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query background " LINK dopus_query_background}
@{" dopus query font " LINK dopus_query_font}
@{" dopus query palette " LINK dopus_query_palette}
@{" dopus query pens " LINK dopus_query_pens}
@{" dopus query sound " LINK dopus_query_sound}
@{" dopus set background " LINK dopus_set_background}
@{" dopus set font " LINK dopus_set_font}
@{" dopus set palette " LINK dopus_set_palette}
@{" dopus set pens " LINK dopus_set_pens}
@{" dopus set sound " LINK dopus_set_sound}

@endnode
@NODE dopus_set_background "DOpus Magellan II ARexx: 'dopus set background'."

@{fg shine}dopus set background @{fg fill}<@{fg text}file@{fg fill}>@{fg text} @{fg fill}[@{fg shine}desktop@{fg fill}|@{fg shine}lister@{fg fill}|@{fg shine}req@{fg fill}] @{fg fill}[@{fg shine}centre@{fg fill}|@{fg shine}tile@{fg fill}] @{fg fill}[@{fg shine}precision@{fg fill} <@{fg text}precision@{fg fill}>] [@{fg shine}custom@{fg fill}]
@{fg shine}dopus set background on
@{fg text}
This command allows you to set the background picture for either the Desktop,
Listers, or Requesters.

@{b}The display will not be updated until a @{" refresh " LINK dopus_refresh_background} is executed.@{ub}

@{bg fill} file @{bg back} specifies the path and filename of the background
picture to use.

If you do not specify either @{bg fill} desktop @{bg back}, @{bg fill} lister @{bg back} or @{bg fill} req @{bg back}, then desktop will
be assumed.

@{bg fill} precision @{bg back} can be one of @{i}none@{ui}, @{i}gui@{ui}, @{i}icon@{ui}, @{i}image@{ui}, or @{i}exact@{ui}.

The @{bg fill} custom @{bg back} keyword allows you to change the backgrounds without
modifying the actual environment settings.

@{b}You must specify @{bg fill} custom @{bg back} on both @{" dopus set background " LINK dopus_set_background}
and @{" dopus refresh background " LINK dopus_refresh_background} for it to work.@{ub}

@{bg fill} on @{bg back} enables backgrounds for DOpus.

For example,
        + @{b}dopus set background on@{ub}
        + @{b}dopus set background 'DOpus5:Backgrounds/StoneWash.iff' desktop center precision exact@{ub}
        + @{b}dopus set background 'DOpus5:Backgrounds/Marble.iff' desktop center custom@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query background " LINK dopus_query_background}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_set_font "DOpus Magellan II ARexx: 'dopus set font'."

@{fg shine}dopus set font @{fg fill}<@{fg text}screen@{fg fill}|@{fg text}listers@{fg fill}|@{fg text}iconsd@{fg fill}|@{fg text}iconsw@{fg fill}> <@{fg text}name size@{fg fill}>
@{fg text}
This command allows you to set the font for Directory Opus' display.

@{bg fill} screen @{bg back}  - specifies that this is the font to use when Opus is on it's
            own screen.
@{bg fill} listers @{bg back} - use this font for the listers' file display.
@{bg fill} iconsd @{bg back}  - use this font for icons on the Desktop.
@{bg fill} iconsw @{bg back}  - use this font for icons in windows.

@{bg fill} name size @{bg back} is the name of the font, followed by it's size.

For example,
        + @{b}dopus set font screen courier.font 13@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query font " LINK dopus_query_font}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_set_palette "DOpus Magellan II ARexx: 'dopus set palette'."

@{fg shine}dopus set palette @{fg fill}<@{fg text}values@{fg fill}>
@{fg text}
This command allows you to configure the Opus palette.  It accepts a string
of up to 16 hex values; the last 8 represent the Opus colours, the first 8
represent the system colours when Opus is on it's own screen.

For example,
        + @{b}dopus set palette 0xffaabc 0x00aa55@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query palette " LINK dopus_query_palette}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_set_pens "DOpus Magellan II ARexx: 'dopus set pens'."

@{fg shine}dopus set pens @{fg fill}<@{fg text}type@{fg fill}>
@{fg text}
This command allows you to configure the pen numbers used for various Opus
display items.

Where @{bg fill} type @{bg back} is a string signifying the pen set to alter, and is
followed by a number of values which represent which of the pens to use.

@{bg fill} type @{bg back} can be any one of the following:

  icons    <dfg> <dbg> <dstyle> <wfg> <wbg> <wstyle>
  files    <fg> <bg>
  dirs     <fg> <bg>
  selfiles <fg> <bg>
  seldirs  <fg> <bg>
  devices  <fg> <bg>
  assigns  <fg> <bg>
  source   <fg> <bg>
  dest     <fg> <bg>
  gauge    <normal> <full>
  user     <count>

The pen number is mapped in the following way:

 1-4     bottom four system colours
 5-8     top four system colours
 9-16    Opus user pens

For example,
        + @{b}dopus set pens icons 1 2 2 5 7 2@{ub}
        + @{b}dopus set pens gauge 3 6@{ub}
        + @{b}dopus set pens source 9 15@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query pens " LINK dopus_query_pens}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_set_sound "DOpus Magellan II ARexx: 'dopus set sound'."

@{fg shine}dopus set sound @{fg fill}<@{fg text}event@{fg fill}> <@{fg text}file@{fg fill}> <@{fg text}volume@{fg fill}>
@{fg text}
This command allows you to set the sound for the specified @{bg fill} event @{bg back}.

@{bg fill} volume @{bg back} is the playback volume, allowable values are from
0 (minimum) to 64 (maximum).

For example,
        + @{b}dopus set sound Startup 'DOpus5:Sounds/Danger.8svx' 64@{ub}


@{fg shine}See also:@{fg text}

@{" dopus query " LINK dopus_query}
@{" dopus query sound " LINK dopus_query_sound}
@{" dopus set " LINK dopus_set}

@endnode
@NODE dopus_setappicon "DOpus Magellan II ARexx: 'dopus setappicon'."

@{fg shine}dopus setappicon @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}item@{fg fill}>
@{fg text}
This allows you to do things to AppIcons added with the @{" dopus addappicon " LINK dopus_addappicon}
command.

Valid item fields are:-

        @{fg shine}text @{fg fill}<@{fg text}text@{fg fill}>@{fg text}  -       Change the icon label.
        @{fg shine}busy @{fg fill}(@{fg shine}on@{fg fill}|@{fg shine}off@{fg fill})@{fg text}  -       Make icon busy or non-busy.
        @{fg shine}locked @{fg fill}(@{fg shine}on@{fg fill}|@{fg shine}off@{fg fill})@{fg text}        -       Make icon locked or unlocked.

If an icon is busy, it is unselectable by the user. It will not respond to
double-clicks, pop-up menu events, drag'n'drops, etc. The icon image is
ghosted when it is busy.

When an icon is locked, its position can not be changed and it can not be
moved manually by the user, nor will a CleanUp will not affect it.

You can remove the icon's label by setting it to "" (the empty string).

@{fg shine}See also:@{fg text}

@{" dopus addappicon " LINK dopus_addappicon}
@{" dopus remappicon " LINK dopus_remappicon}
@{" AppIcon Handlers " LINK ch_appicons}

@endnode
@NODE dopus_version "DOpus Magellan II ARexx: 'dopus version'."

@{fg shine}dopus version
@{fg text}
The version command returns in @{" RESULT " LINK gen_results} a string in the format

        @{b}<version> <revision>@{ub}

and is useful in ARexx scripts for determining if certain features exist.

@endnode
@NODE lister_add "DOpus Magellan II ARexx: 'lister add'."

@{fg shine}lister add @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}name@{fg fill}> <@{fg text}size@{fg fill}> <@{fg text}type@{fg fill}> <@{fg text}seconds@{fg fill}> <@{fg text}protect@{fg fill}> <@{fg text}comment@{fg fill}>
@{fg text}
This command adds an entry to the specified lister (@{bg fill} handle @{bg back}).

@{bg fill} name @{bg back} is the full name of the entry (no path);
@{bg fill} size @{bg back} is the size of the entry (bytes);
@{bg fill} type @{bg back} is the type of the entry (less than 0 for a file, greater then 0
       for a directory);
@{bg fill} seconds @{bg back} is the datestamp of the entry in seconds from 1/1/78;
@{bg fill} protect @{bg back} is the protection bits of the file (in ASCII format, eg "rwed");
@{bg fill} comment @{bg back} is the comment of the entry (if any).

Valid entry types are:-
                @{b} 0@{ub}     device
                @{b} 1@{ub}     plain directory
                @{b}-1@{ub}     plain file
                @{b} 2@{ub}     directory in assign colour
                @{b}-2@{ub}     file in device colour
                @{b} 3@{ub}     directory in bold (link)
                @{b}-3@{ub}     file in bold (link)
                @{b} 4@{ub}     directory in assign colour and bold
                @{b}-4@{ub}     file in device colour and bold

@{i}After a @{bg fill} lister add @{bg back} command, the display is not updated until you execute
a @{" lister refresh " LINK lister_refresh} command. @{ui}

For example,
    + @{b}lister add 121132636 '"My file!"' 12839 -1 540093905 prwed my comment@{ub}

@{i}The ARexx calender/date functions provide routines perfect for converting
various time formats to the datestamp entry and back again. @{ui}

@{fg shine}See also:@{fg text}

@{" lister addstem " LINK lister_addstem}
@{" lister remove " LINK lister_remove}

@endnode
@NODE lister_addstem "DOpus Magellan II ARexx: 'lister addstem'."

@{fg shine}lister addstem @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}stem@{fg fill}>
@{fg text}
This command adds files to a lister via a stem variable. It is more
powerful than the @{" lister add " LINK lister_add} command and should be used in preference.

The fields of the stem variable are very similar to those returned by a
@{" lister query <handle> entry stem " LINK lister_query} command (in fact, you could pass the
result the query directly to an @{bg fill} addstem @{bg back} to add an identical entry to
another lister.)

The fields that are used are :-

        @{b}name@{ub}           - name of entry (no path)
        @{b}size@{ub}           - file size (bytes)
        @{b}type@{ub}           - type of entry
        @{b}protstring@{ub}     - protection bits (ASCII string, eg "rwed")
        @{b}protect@{ub}        - protection value (number, used if
                         @{b}protstring@{ub} is not given)
        @{b}comment@{ub}        - file comment
        @{b}datestring@{ub}     - creation date and time (ASCII string)
        @{b}date@{ub}           - number of seconds since 1/1/78 (used
                         if @{b}datestring@{ub} is not given)
                         Can be set to @{b}0@{ub} for today's date.
        @{b}filetype@{ub}       - ascii string for file type display
        @{b}selected@{ub}       - 0 (not selected) or 1 (selected)
        @{b}version@{ub}        - version number
        @{b}revision@{ub}       - revision number
        @{b}verdate@{ub}        - version date string
        @{b}userdata@{ub}       - user data (value, not a string)
        @{b}display@{ub}        - custom display string
        @{b}menu@{ub}           - custom pop-up menu
        @{b}base@{ub}           - base ID for pop-up menu

Valid entry types are:-
                @{b} 0@{ub}     device
                @{b} 1@{ub}     plain directory
                @{b}-1@{ub}     plain file
                @{b} 2@{ub}     directory in assign colour
                @{b}-2@{ub}     file in device colour
                @{b} 3@{ub}     directory in bold (link)
                @{b}-3@{ub}     file in bold (link)
                @{b} 4@{ub}     directory in assign colour and bold
                @{b}-4@{ub}     file in device colour and bold

Not all of these fields are required. As a bare minimum you should specify
either the @{bg fill} name @{bg back} or the @{bg fill} display @{bg back} field.

For example (as a sequence of commands),
        + @{b}mynewentry.COMMENT = "This is my comment"@{ub}
        + @{b}mynewentry.NAME = "anewfile.test"@{ub}
        + @{b}mynewentry.TYPE = -1@{ub}
        + @{b}lister addstem 121132636 mynewentry.@{ub}

The @{bg fill} display @{bg back} string allows you to specify a completely custom string to
display for the entry. None of the other information will be displayed if
this string is supplied. The maximum length is 256 characters.

The @{bg fill} userdata @{bg back} field allows you to specify your own ID value (or any other
value) to be associated with this entry. Its main usage is with the custom
pop-up menu and @{" custom handlers " LINK custom_handlers}.

The @{bg fill} menu @{bg back} field allows you to specify a stem variable containing custom
items for the pop-up menu that appears when the user presses the right
button on this entry. Its format is the same as for AppIcon pop-up menus:

        @{b}stem.COUNT@{ub}     - number of entries
        @{b}stem.BASE@{ub}      - base ID
        @{b}stem.0@{ub}         - entry 1
        @{b}stem.1@{ub}         - entry 2
        etc.

If @{bg fill} count @{bg back} is set to 0, right-button pop-ups will be disabled for this file.
If this field is not specified, the default pop-up menu will be displayed.
If you specify "---" as an item, a separator bar will appear. When you
receive a message that the user has selected one of these menu items, the
message will contain the ID of the item. This is the value corresponding to
the item's position in the stem array (eg 0 for item 1, 1 for item 2, etc).
If the @{bg fill} base @{bg back} field is specified, the value given for the base will be added
to this ID.

For example (as a sequence of commands),
        + @{b}mymenu.0 = "Edit"@{ub}
        + @{b}mymenu.1 = "---"@{ub}
        + @{b}mymenu.2 = "View"@{ub}
        + @{b}mymenu.3 = "Play"@{ub}
        + @{b}mymenu.COUNT = 4@{ub}
        + @{b}mynewentry.COMMENT = "This is my comment"@{ub}
        + @{b}mynewentry.NAME = "anewfile.test"@{ub}
        + @{b}mynewentry.TYPE = -1@{ub}
        + @{b}mynewentry.MENU = mymenu.@{ub}
        + @{b}lister addstem 121132636 mynewentry.@{ub}

See the @{" Custom Handlers " LINK custom_handlers} section for more information on the messages
sent.


@{fg shine}See also:@{fg text}

@{" lister add " LINK lister_add}
@{" lister remove " LINK lister_remove}

@endnode
@NODE lister_clear "DOpus Magellan II ARexx: 'lister clear'."

@{fg shine}lister clear @{fg fill}<@{fg text}handle@{fg fill}>
@{fg text}
This command clears the contents of the specified lister (@{bg fill} handle @{bg back}). The
display will not be updated until you execute a @{" lister refresh " LINK lister_refresh} command.

@{i}In previous versions of Opus 5, this command also cleared the
@{" custom handler " LINK custom_handlers} name. This is no longer the case. @{ui}


@{fg shine}lister clear @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}item@{fg fill}> <@{fg text}value@{fg fill}>
@{fg text}
This command clears a particular item of information in the specified
lister.

@{bg fill} handle @{bg back} is the handle of the lister in question;

@{bg fill} item @{bg back} can be one of the following keywords:-
        @{fg shine}abort@{fg text}
                This clears the abort flag in the specified lister.
                For example, + @{b}lister clear 121132636 abort@{ub}
        @{fg shine}flags @{fg fill}<@{fg text}flags@{fg fill}>@{fg text}
                Clears sort/display flags for this lister. The display is
                not updated unless you execute a @{" lister refresh " LINK lister_refresh} command.
                These flags are:-
                        @{b}reverse@{ub}        - sort in reverse order
                        @{b}noicons@{ub}        - filter icons
                        @{b}hidden@{ub} - filter hidden bit
                For example, + @{b}lister clear 121132636 flags reverse@{ub}
        @{fg shine}progress@{fg text}
                This turns the progress indicator off in the specified
                lister.
                For example, + @{b}lister clear 121132636 progress@{ub}


@{fg shine}See also:@{fg text}

@{" lister copy " LINK lister_copy}
@{" lister empty " LINK lister_empty}

@{" lister query abort " LINK lister_query_abort}
@{" lister set newprogress " LINK lister_set_newprogress}
@{" lister set progress " LINK lister_set_progress}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}

@endnode
@NODE lister_clear_value "DOpus Magellan II ARexx: 'lister clear value'."

@{fg shine}lister clear @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}value @{fg fill}<@{fg text}name@{fg fill}>
@{fg text}
This command lets you clear a name/value association that you previously made with
@{" lister set value " LINK lister_set_value}.

@{bg fill} handle @{bg back} is the handle of the lister to take the entries from while
@{bg fill} name @{bg back} is required to clear the name/value pair.

For example,
        + @{b}lister clear 121132636 value MyName@{ub}


@{fg shine}See also:@{fg text}

@{" lister query value " LINK lister_query_value}
@{" lister set value " LINK lister_set_value}


@endnode
@NODE lister_copy "DOpus Magellan II ARexx: 'lister copy'."

@{fg shine}lister copy @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}destination@{fg fill}>
@{fg text}
This command copies the contents of one lister to another lister. Unlike
most commands, the display of the destination lister is refreshed
immediately.

@{bg fill} handle @{bg back} is the handle of the lister to take the entries from while
@{bg fill} destination @{bg back} is the handle of the lister to copy the entries to.

For example,
        + @{b}lister copy 121132636 121963868@{ub}

@{i}Note that what gets copied is only the entry data. No files are physically
copied. The entries may not even represent files at all. @{ui}

@{fg shine}See also:@{fg text}

@{" lister clear " LINK lister_clear}
@{" lister empty " LINK lister_empty}

@endnode
@NODE lister_clearcaches "DOpus Magellan II ARexx: 'lister clearcaches'."

@{fg shine}lister clearcaches @{fg fill}<@{fg text}handle@{fg fill}>
@{fg text}
This command will flush any caches that were created by your lister, using
your custom handler.  No other caches will be affected.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{fg shine}See also:@{fg text}

@{" lister findcache " LINK lister_findcache}

@endnode
@NODE lister_close "DOpus Magellan II ARexx: 'lister close'."

@{fg shine}lister close @{fg fill}(@{fg shine}all@{fg fill}|<@{fg text}handle@{fg fill}>)
@{fg text}
This command closes the specified lister or all listers if the @{bg fill} all @{bg back}
keyword is supplied in place of a lister handle. Any function that is
currently taking place will be aborted.

@{bg fill} handle @{bg back} is the handle of the lister to close.

For example,
        + @{b}lister close 121132636@{ub}

@{fg shine}See also:@{fg text}

@{" lister iconify " LINK lister_iconify}

@endnode
@NODE lister_empty "DOpus Magellan II ARexx: 'lister empty'."

@{fg shine}lister empty @{fg fill}<@{fg text}handle@{fg fill}>
@{fg text}
This command will display an empty cache for the specified lister @{bg fill} handle @{bg back}
(unlike @{" lister clear " LINK lister_clear} which clears the contents of the current cache).
If no empty caches are available (and a new one can not be created), the
existing cache will be cleared. If the lister has a @{" custom handler " LINK custom_handlers}
attached, it will receive an inactive message.

@{i}Note that previous versions of Opus 5 did not send the 'inactive' message
to the @{" custom handler " LINK custom_handlers} when this command was used. @{ui}

@{fg shine}See also:@{fg text}

@{" lister copy " LINK lister_copy}
@{" lister clear " LINK lister_clear}

@endnode
@NODE lister_findcache "DOpus Magellan II ARexx: 'lister findcache'."

@{fg shine}lister findcache @{fg fill}<@{fg text}handle@{fg fill}> @{fg fill}<@{fg text}path@{fg fill}>
@{fg text}
This command allows you to find a cached directory and display it in the
lister.  When it returns, @{" RESULT " LINK gen_results} is set to 0 if the path was not found,
or 1 if it was found.  If the path is found, it will be automatically
displayed in the lister and you don't need to do any more.  If it is not
found, you'll have to read the directory as normal.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} path @{bg back} is the path of the cache to find.

For example,
        + @{b}lister findcache 137025148 Ram:testfile@{ub}
        > @{i}1@{ui}

@{fg shine}See also:@{fg text}

@{" lister clearcaches " LINK lister_clearcaches}

@endnode
@NODE lister_getstring "DOpus Magellan II ARexx: 'lister getstring'."

@{fg shine}lister getstring @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}text@{fg fill}> [@{fg shine}secure@{fg fill}] [<@{fg text}length@{fg fill}>] [<@{fg text}default@{fg fill}>]
                 @{fg fill}[<@{fg text}buttons@{fg fill}>]
@{fg text}
This command allows you to prompt the user to input a text string. It is
identical to the @{" dopus getstring " LINK dopus_getstring} command except that it takes a
lister @{bg fill} handle @{bg back} as an additional parameter and the requester will be
centred over that lister.

@{bg fill} text @{bg back} is a string of text to be displayed in the requester, and should be
surrounded by quotes if it contains spaces.

The @{bg fill} secure @{bg back} keyword causes the string to be displayed as asterisks ("*"),
which can be useful for passwords.

@{bg fill} length @{bg back} is the maximum length of string to accept and defaults to 80 if
not specified.

@{bg fill} default @{bg back} is the default value of the string; that is, the text you wish to
initially appear in the field.

@{bg fill} buttons @{bg back} are the buttons you wish the requester to have; each button
should be separated by a vertical bar character ("|"). If the buttons
parameter is omitted the requester will have a single button marked "OK".

For example,
 + @{b}lister getstring 121132636 '"Please enter some text" 40 "" Okay|Cancel'@{ub}

@{i}Note the quotes around the entire argument string. @{ui}

@{i}You can have multiple lines in the requester text by putting the "return"
character at the end of lines. @{ui}

This would display a requester with the string "Please enter some text", a
maximum input length of 40 characters, an empty default sting, and buttons
labelled "Okay" and "Cancel".

The string (if any) is returned in @{" RESULT " LINK gen_results}. The cardinal number of the
selected button is returned in the special variable @{" DOPUSRC " LINK gen_results}, but the
last (rightmost) gadget is always number 0. In the above example, if the
user clicked "Okay", @{" DOPUSRC " LINK gen_results} would contain 1, and if the user clicked
"Cancel" it would contain 0.  If the RETURN key is used in the string gadget
to accept the text, then the @{" DOPUSRC " LINK gen_results} variable will contain the value -1.

This command, the @{" dopus getstring " LINK dopus_getstring} and the @{" dopus getdesktop " LINK dopus_getdesktop} commands
are the only ones that use the @{" DOPUSRC " LINK gen_results} variable currently, but this may
change in the future.

@{fg shine}See also:@{fg text}

@{" lister request " LINK lister_request}
@{" dopus getstring " LINK dopus_getstring}
@{" dopus request " LINK dopus_request}

@endnode
@NODE lister_iconify "DOpus Magellan II ARexx: 'lister iconify'."

@{fg shine}lister iconify @{fg fill}(@{fg shine}all@{fg fill}|<@{fg text}handle@{fg fill}>) [<@{fg shine}state@{fg fill}>]
@{fg text}
This command causes either all listers or the specified lister to become
iconified if state is 1, "on", or omitted altogether, and to deiconify if
state is 0 or "off".

Specify all listers with the @{bg fill} all @{bg back} parameter, or specify the handle of
a lister with the @{bg fill} handle @{bg back} parameter.

For example,
        + @{b}lister iconify 121132636@{ub}
        + @{b}lister iconify all off@{ub}

@{fg shine}See also:@{fg text}

@{" lister new iconify " LINK lister_new}
@{" lister close " LINK lister_close}

@endnode
@NODE lister_new "DOpus Magellan II ARexx: 'lister new'."

@{fg shine}lister new @{fg fill}[<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}>] [@{fg shine}toolbar @{fg fill}<@{fg text}toolbar@{fg fill}>] [@{fg shine}inactive@{fg fill}] [@{fg shine}invisible@{fg fill}]
           [@{fg shine}iconify@{fg fill}] [@{fg shine}mode@{fg fill} <@{fg text}name@{fg fill}|@{fg text}icon@{fg fill}|@{fg text}action@{fg fill}|@{fg text}showall@{fg fill}>] [@{fg shine}fromicon @{fg fill}<@{fg text}path@{fg fill}>] [<@{fg text}path@{fg fill}>]
@{fg text}
This command creates a new lister.

You may optionally specify the position and size of the new lister. The
default position of -1/-1 causes the lister to open under the mouse
pointer with the default width and height as specified by the environment.

The position is specified by the @{fg fill}[<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}>]@{fg text} parameter:

        @{b}x@{ub}      - x-coordinate for top-left of lister window, or -1;
        @{b}y@{ub}      - y-coordinate for top-left of lister window, or -1;
        @{b}w@{ub}      - width of the lister window;
        @{b}h@{ub}      - height of the lister window.

A custom toolbar for the lister can be specified with the @{bg fill} toolbar @{bg back}
keyword; toolbar files are expected to be found in the @{i}DOpus5:Buttons @{ui}
directory if the full path is not given.

You may also specify a @{bg fill} path @{bg back} to read when the lister opens.

Any @{bg fill} path @{bg back} specified @{b}must@{ub} occur at the end of the command line.

The initial state of a lister can be set by providing one or more of these
additional keywords:

@{bg fill} inactive @{bg back} prevents the newly opened lister from being the active window.
@{bg fill} invisible @{bg back} causes the lister to be invisible initially.
        See @{" lister set visible " LINK lister_set_visible}, and @{" lister query visible " LINK lister_query_visible}
@{bg fill} iconify @{bg back} causes the lister to start iconified.
        See @{" lister iconify " LINK lister_iconify}
@{bg fill} fromicon @{bg back} will open the new lister using the size and position information
        from the specified directory's icon (only if a path is specified and an icon
        exists).  Eg, lister new fromicon sys:tools
@{bg fill} mode @{bg back} lets you specify the initial mode of the new lister.
        ie. name, icon, icon action and showall

For example,
        + @{b}lister new@{ub}
        + @{b}lister new 100/50/400/300@{ub}
        + @{b}lister new ram:@{ub}
        + @{b}lister new 80/30/200/200 dh0:work@{ub}
        + @{b}lister new toolbar custom_toolbar work:@{ub}
        + @{b}lister new fromicon SYS:Devs work:@{ub}
        + @{b}lister new mode icon work:@{ub}
        > @{i}121132636 @{ui}  (Typical return from any one of the above).

If the lister opens successfully, its handle is returned in the @{" RESULT " LINK gen_results}
variable. You must save the value of this handle if you wish to do anything
further with this lister. In the above example, a handle of 121132636 was
returned. This is used in many of the examples.

@endnode
@NODE lister_query "DOpus Magellan II ARexx: 'lister query'."

@{fg shine}lister query @{fg fill}<@{fg text}type@{fg fill}>
@{fg text}
This command returns the handles of all listers matching @{bg fill} type @{bg back} in
@{" RESULT " LINK gen_results}, unless an @{" error " LINK gen_errors} occurs (for example there are no listers
of the given type).

@{bg fill} type @{bg back} can be one of the following keywords:-

 @{" all " LINK lister_query_all}
 @{" dest " LINK lister_query_dest}
 @{" source " LINK lister_query_source}

You can also return the result in a variable of your choosing instead
of @{" RESULT " LINK gen_results}, or return the result in a stem variable. Select one of
the types above for more information.


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}item@{fg fill}>
@{fg text}
This command returns a particular item of information from the specified
lister. @{bg fill} handle @{bg back} is the handle of the lister in question. All information
is returned in the @{" RESULT " LINK gen_results} variable, unless an @{" error " LINK gen_errors} occurs.

@{bg fill} item @{bg back} can be one of the following keywords:-

 @{" abort " LINK lister_query_abort}
 @{" active " LINK lister_query_active}
 @{" busy " LINK lister_query_busy}
 @{" case " LINK lister_query_case}
 @{" commentlength " LINK lister_query_commentlength}
 @{" dirs " LINK lister_query_dirs}
 @{" entries " LINK lister_query_entries}
 @{" entry " LINK lister_query_entry}
 @{" files " LINK lister_query_files}
 @{" firstsel " LINK lister_query_firstsel}
 @{" flags " LINK lister_query_flags}
 @{" handler " LINK lister_query_handler}
 @{" header " LINK lister_query_header}
 @{" hide " LINK lister_query_hide}
 @{" label " LINK lister_query_label}
 @{" lock " LINK lister_query_lock}
 @{" mode " LINK lister_query_mode}
 @{" namelength " LINK lister_query_namelength}
 @{" numdirs " LINK lister_query_numdirs}
 @{" numentries " LINK lister_query_numentries}
 @{" numfiles " LINK lister_query_numfiles}
 @{" numseldirs " LINK lister_query_numseldirs}
 @{" numselentries " LINK lister_query_numselentries}
 @{" numselfiles " LINK lister_query_numselfiles}
 @{" path " LINK lister_query_path}
 @{" position " LINK lister_query_position}
 @{" proc " LINK lister_query_proc}
 @{" seldirs " LINK lister_query_seldirs}
 @{" selentries " LINK lister_query_selentries}
 @{" selfiles " LINK lister_query_selfiles}
 @{" separate " LINK lister_query_separate}
 @{" show " LINK lister_query_show}
 @{" sort " LINK lister_query_sort}
 @{" title " LINK lister_query_title}
 @{" toolbar " LINK lister_query_toolbar}
 @{" visible " LINK lister_query_visible}
 @{" window " LINK lister_query_window}

Several of the keywords allow you to return the result in a variable of
your choosing instead of @{" RESULT " LINK gen_results}, or return the result in a stem
variable. Additionally, some of the keywords take futher arguments.
Select one of the items above for more information.

@{fg shine}See also:@{fg text}

@{" lister set " LINK lister_set}

@endnode
@NODE lister_query_active "DOpus Magellan II ARexx: 'lister query active'."

@{fg shine}lister query active
@{fg text}

This command returns the the handle of the current active lister, ie. the
lister window that is active, the lister may or may not be in state source or
destination.

The handle will be returned in @{" RESULT " LINK gen_results}, unless an
@{" error " LINK gen_errors} occurs (for example there are no listers).

For example,
        + @{b}lister query active@{ub}
        > @{i}121132636@{ui}

If no listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.


@endnode
@NODE lister_query_all "DOpus Magellan II ARexx: 'lister query all'."

@{fg shine}lister query all
@{fg text}
This command returns the handles of all non-busy listers (that is, any
listers that are not performing a function at the time).

For example,
        + @{b}lister query all@{ub}
        > @{i}121132636 121963868 @{ui}

If no matching listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.

@{i}You can use the Word() function in ARexx to traverse the list.@{ui}


@{fg shine}lister query all var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query all @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query all var all_handles@{ub}
would return
        @{b}all_handles@{ub}    = "121132636 121963868"


@{fg shine}lister query all stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query all @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query all stem all_handles@{ub}
would return
        @{b}all_handles.count@{ub}      = 2
        @{b}all_handles.0@{ub}          = 121132636
        @{b}all_handles.1@{ub}          = 121963868

@{i}Note that the stem count will correctly return 0 if there are no
matching listers.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query dest " LINK lister_query_dest}
@{" lister query source " LINK lister_query_source}

@endnode
@NODE lister_query_dest "DOpus Magellan II ARexx: 'lister query dest'."

@{fg shine}lister query dest
@{fg text}
This command returns the handles of all destination listers.

For example,
        + @{b}lister query dest@{ub}
        > @{i}121963868 @{ui}

If no matching listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.

@{i}You can use the Word() function in ARexx to traverse the list.@{ui}


@{fg shine}lister query dest var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query dest @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query dest var dest_handles@{ub}
would return
        @{b}dest_handles@{ub}   = 121963868


@{fg shine}lister query dest stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query dest @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query dest stem dest_handles@{ub}
would return
        @{b}dest_handles.count@{ub}     = 1
        @{b}dest_handles.0@{ub}         = 121963868

@{i}Note that the stem count will correctly return 0 if there are no
matching listers.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query all " LINK lister_query_all}
@{" lister query source " LINK lister_query_source}

@endnode
@NODE lister_query_source "DOpus Magellan II ARexx: 'lister query source'."

@{fg shine}lister query source
@{fg text}
This command returns the handles of all source listers.

For example,
        + @{b}lister query source@{ub}
        > @{i}121132636 128765412 @{ui}

If no matching listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.

@{i}You can use the Word() function in ARexx to traverse the list.@{ui}


@{fg shine}lister query source var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query source @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query source var source_handles@{ub}
would return
        @{b}source_handles@{ub} = "121132636 128765412"


@{fg shine}lister query source stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query source @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query source stem source_handles@{ub}
would return
        @{b}source_handles.count@{ub}   = 2
        @{b}source_handles.0@{ub}       = 121132636
        @{b}source_handles.1@{ub}       = 128765412

@{i}Note that the stem count will correctly return 0 if there are no
matching listers.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query all " LINK lister_query_all}
@{" lister query dest " LINK lister_query_dest}

@endnode
@NODE lister_query_abort "DOpus Magellan II ARexx: 'lister query abort'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}abort
@{fg text}
This returns a boolean (0 or 1) value indicating the status of the lister's
abort flag. This query command is only valid if the lister has a progress
indicator open (as this is the only way the user can abort a function
anyway). This will return 1 if the user has clicked the abort gadget, 0 if
she has not.

@{bg fill} handle @{bg back} is the handle of the lister to query.

For example,
        + @{b}lister query 121132636 abort@{ub}
        > @{i}0 @{ui}

@{i}Note that in Opus 4, querying the abort flag would also reset it. This is
not the case in Opus 5; if you wish to reset the state of the abort flag
you must use the @{" lister clear " LINK lister_clear} command. @{ui}

@{fg shine}See also:@{fg text}

@{" lister clear abort " LINK lister_clear}
@{" lister set newprogress " LINK lister_set_newprogress}
@{" lister set progress " LINK lister_set_progress}

@endnode
@NODE lister_query_busy "DOpus Magellan II ARexx: 'lister query busy'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}busy
@{fg text}
Returns a boolean value (0 or 1) indicating the lister busy status. That
is, if the lister is currently busy, it will return 1, otherwise it will
return 0.

@{bg fill} handle @{bg back} is the handle of the lister to query.

For example,
        + @{b}lister query 121132636 busy@{ub}
        > @{i}1 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set busy " LINK lister_set_busy}
@{" lister wait " LINK lister_wait}

@endnode
@NODE lister_query_case "DOpus Magellan II ARexx: 'lister query case'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}case
@{fg text}
This command turns tells you whether the lister is case sensitive or not.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Returns 1 if the lister is case sensitive and 0 otherwise.

Since Amiga filenames are not case sensitive this setting defaults to off.
It may be useful for some @{" custom handlers " LINK custom_handlers} to turn case sensitivity on,
however. OpusFTP is one such handler, and it needs case sensitivity when
displaying UNIX directories because there could be entries called
"RECENT", "recent", "Recent", and "ReCeNt" which are all different.

For example,
        + @{b}lister query 121132636 case@{ub}
        > @{i}0 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set case " LINK lister_set_case}

@endnode
@NODE lister_query_commentlength "DOpus Magellan II ARexx: 'lister query commentlength'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} commentlength
@{fg text}

Returns the maximum number of characters that can currently be displayed in
the comment field of the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 commentlength@{ub}
        > @{i}79 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set commentlength " LINK lister_set_commentlength}

@endnode
@NODE lister_query_dirs "DOpus Magellan II ARexx: 'lister query dirs'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} dirs @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all directories in the lister (@{bg fill} handle @{bg back}), surrounded
by quotes. If you specify a @{bg fill} separator @{bg back} character it will be placed
between the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 dirs@{ub}
        > @{i}"Clipboards" "ENV" "T" @{ui}
        + @{b}lister query 121132636 dirs ,@{ub}
        > @{i}"Clipboards","ENV","T" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any directory with a space in its
name will cause your script to malfunction. Use a stem variable instead
(see below). @{ui}

@{i}Note that the empty string will be returned if there are no directories in
the lister. In previous versions of Opus 5, however, this was not the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} dirs var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query dirs @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 dirs var dirs@{ub}
would return
        @{b}dirs@{ub}   = '"Clipboards" "ENV" "T"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} dirs stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query dirs @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 dirs stem dirs@{ub}
would return
        @{b}dirs.count@{ub}     = 1
        @{b}dirs.0@{ub}         = "Clipboards"
        @{b}dirs.1@{ub}         = "ENV"
        @{b}dirs.2@{ub}         = "T"

@{i}Note that the stem count will correctly return 0 if there are no
directories.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query entries " LINK lister_query_entries}
@{" lister query files " LINK lister_query_files}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query seldirs " LINK lister_query_seldirs}

@endnode
@NODE lister_query_display "DOpus Magellan II ARexx: 'lister query display'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}display
@{fg text}
This returns a string indicating the current display items. The string will
consist of the same keywords as for @{" lister query sort " LINK lister_query_sort}, in the order
that they appear in the lister (if they appear at all).

Valid keywords are:-
        @{b}name@{ub}           - filename
        @{b}size@{ub}           - file size
        @{b}protect@{ub}        - protection bits
        @{b}date@{ub}           - datestamp
        @{b}comment@{ub}        - comment
        @{b}filetype@{ub}       - file type
        @{b}version@{ub}        - file version

For example,
        + @{b}lister query 121132636 display@{ub}
        > @{i}name size date protect comment @{ui}

@{fg shine}See also:@{fg text}

@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_entries "DOpus Magellan II ARexx: 'lister query entries'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}entries @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all entries (that is, both files and directories) in
the lister (@{bg fill} handle @{bg back}), surrounded by quotes. If you specify a @{bg fill} separator @{bg back}
character it will be placed between the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 entries@{ub}
        > @{i}"Clipboards" "ENV" "T" "abc" "Disk.info" @{ui}
        + @{b}lister query 121132636 entries ,@{ub}
        > @{i}"Clipboards","ENV","T","abc","Disk.info" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any entry with a space in its name
will cause your script to malfunction. Use a stem variable instead (see
below). @{ui}

@{i}Note that the empty string will be returned if there are no entries in
the lister. In previous versions of Opus 5, however, this was not the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} entries var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query entries @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 entries var ents@{ub}
would return
        @{b}ents@{ub}   = '"Clipboards" "ENV" "T" "abc" "Disk.info"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} entries stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query entries @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 entries stem ents@{ub}
would return
        @{b}ents.count@{ub}     = 5
        @{b}ents.0@{ub}         = Clipboards
        @{b}ents.1@{ub}         = ENV
        @{b}ents.2@{ub}         = T
        @{b}ents.3@{ub}         = abc
        @{b}ents.4@{ub}         = Disk.info

@{i}Note that the stem count will correctly return 0 if there are no
entries.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query dirs " LINK lister_query_dirs}
@{" lister query files " LINK lister_query_files}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query selentries " LINK lister_query_selentries}

@endnode
@NODE lister_query_entry "DOpus Magellan II ARexx: 'lister query entry'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}entry @{fg fill}<@{fg text}name@{fg fill}>
@{fg text}
Returns information about the specified entry.

@{bg fill} name @{bg back} is the actual name of the entry to return information about. You can
supply #xxx for the name (where xxx is a number), to specify the cardinal
number of the desired entry.

@{i}Note that you do @{b}not@{ub} include the path in the name. @{ui}

The information returned is in the format

        @{b}<name> <size> <type> <selection> <seconds> <protect> <comment>@{ub}

where   @{b}name@{ub} is the full name of the entry (no path),
        @{b}size@{ub} is the size of the entry (bytes),
        @{b}type@{ub} is the type of the entry (<0 means a file,
                                       >0 means a directory),
        @{b}selection@{ub} indicates the selection status of the entry
                  (1 if the entry is selected, 0 if it is not selected),
        @{b}seconds@{ub} is the datestamp of the entry in seconds from 1/1/78,
        @{b}protect@{ub} is the protection bits of the file
                (in ASCII format, eg "h---rwed"),
        @{b}comment@{ub} is the comment of the entry (if any).

@{i}The ARexx calender/date functions provide routines perfect for converting
various time formats to the datestamp entry and back again. @{ui}

For example,
        + @{b}lister query 121132636 entry ENV@{ub}
        > @{i}ENV -1 2 0 543401724 ----rwed @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}entry @{fg fill}<@{fg text}name@{fg fill}> @{fg shine}var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query entry @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + lister query 121132636 entry "disk.info" var myvar
would return
        @{b}myvar@{ub}  = "Disk.info 828 -1 0 590488349 ----rw-d"


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}entry @{fg fill}<@{fg text}name@{fg fill}> @{fg shine}stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query entry @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

The specified stem variable will have several fields, each containing
information about the entry in question. These fields are as follows:-

        @{b}name@{ub}           - entry name (no path)
        @{b}size@{ub}           - file size (bytes)
        @{b}type@{ub}           - type (<0 = file, >0 = dir)
        @{b}selected@{ub}       - 0 (selected) or 1 (not selected)
        @{b}date@{ub}           - seconds since 1/1/78
        @{b}protect@{ub}        - protection bits (long value)
        @{b}datestring@{ub}     - datestamp in ASCII form
        @{b}protstring@{ub}     - protection bits in ASCII form, eg "----rwed"
        @{b}comment@{ub}        - file comment (if any)
        @{b}filetype@{ub}       - file type (if any)
        @{b}version@{ub}        - version number
        @{b}revision@{ub}       - revision number
        @{b}verdate@{ub}        - version date in numerical dd.mm.yy format
        @{b}datenum@{ub}        - file date in numerical dd.mm.yy format
        @{b}time@{ub}           - file time in hh:mm:ss 24 hour format
        @{b}userdata@{ub}       - userdata value (see @{" lister addstem " LINK lister_addstem})
        @{b}display@{ub}        - display line (if any) (see @{" lister addstem " LINK lister_addstem})

For example,
        > @{b}lister query 121132636 entry "Disk.info" stem fileinfo.@{ub}
would return,
        @{b}fileinfo.name@{ub}          = "Disk.info"
        @{b}fileinfo.size@{ub}          = 828
        @{b}fileinfo.type@{ub}          = -1
        @{b}fileinfo.selected@{ub}      = 0
        @{b}fileinfo.date@{ub}          = 590488349
        @{b}fileinfo.protect@{ub}       = 2
        @{b}fileinfo.datestring@{ub}    = "17-Sep-96 08:32:29"
        @{b}fileinfo.protstring@{ub}    = "----rw-d"
        @{b}fileinfo.comment@{ub}       = ""    (There comment is empty)
        @{b}fileinfo.filetype@{ub}      = ""    (Filetypes not shown in the lister)
        @{b}fileinfo.version@{ub}       = ""    (Versions not shown in the lister,
        @{b}fileinfo.revision@{ub}      = ""     and the file has no version string
        @{b}fileinfo.verdate@{ub}       = ""     inside it anyway).
        @{b}fileinfo.datenum@{ub}       = "17-09-96"
        @{b}fileinfo.time@{ub}          = "08:32:29"
        @{b}fileinfo.userdata@{ub}      = 0     (This is the default userdata value)
        @{b}fileinfo.display@{ub}       = ""

@{fg shine}See also:@{fg text}

@{" lister add " LINK lister_add}
@{" lister addstem " LINK lister_addstem}
@{" lister query dirs " LINK lister_query_dirs}
@{" lister query entries " LINK lister_query_entries}
@{" lister query files " LINK lister_query_files}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_files "DOpus Magellan II ARexx: 'lister query files'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}files @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all files in the lister (@{bg fill} handle @{bg back}), surrounded by
quotes. If you specify a @{bg fill} separator @{bg back} character it will be placed between
the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 files@{ub}
        > @{i}"abc" "Disk.info" @{ui}
        + @{b}lister query 121132636 files ,@{ub}
        > @{i}"abc","Disk.info" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any file with a space in its name
will cause your script to malfunction. Use a stem variable instead (see
below). @{ui}

@{i}Note that the empty string will be returned if there are no files in
the lister. In previous versions of Opus 5, however, this was not the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} files var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query files @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 files var fillies@{ub}
would return
        @{b}fillies@{ub}        = '"abc" "Disk.info"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} files stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query files @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 files stem fyels@{ub}
would return
        @{b}fyels.count@{ub}    = 2
        @{b}fyels.0@{ub}        = abc
        @{b}fyels.1@{ub}        = Disk.info

@{i}Note that the stem count will correctly return 0 if there are no
entries.@{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query dirs " LINK lister_query_dirs}
@{" lister query entries " LINK lister_query_entries}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query selfiles " LINK lister_query_selfiles}

@endnode
@NODE lister_query_firstsel "DOpus Magellan II ARexx: 'lister query firstsel'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}firstsel
@{fg text}
Returns the name (without path) of the first selected entry in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The entry is not deselected, so if you don't deselect it yourself this
command will only ever return the one name.

For example,
        + @{b}lister query 121132636 firstsel @{ub}
        > @{i}"ENV" @{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query dirs " LINK lister_query_dirs}
@{" lister query entries " LINK lister_query_entries}
@{" lister query files " LINK lister_query_files}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_flags "DOpus Magellan II ARexx: 'lister query flags'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}flags
@{fg text}
This returns a string indicating any sort or display flags that are active
for the lister.

These flags are:-
        @{b}reverse@{ub}        - sort in reverse order
        @{b}noicons@{ub}        - filter icons
        @{b}hidden@{ub}         - filter hidden bit

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 flags @{ub}
        > @{i}noicons @{ui}

@{fg shine}See also:@{fg text}

@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_handler "DOpus Magellan II ARexx: 'lister query handler'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}handler
@{fg text}
Returns the name of the current custom handler port for a lister

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 handler @{ub}
        > @{i}ArcDir121132636 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set handler " LINK lister_set_handler}
@{" Custom Handlers " LINK custom_handlers}

@endnode
@NODE lister_query_header "DOpus Magellan II ARexx: 'lister query header'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine} header
@{fg text}
This command returns the current header string of a lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The header will be returned in @{" RESULT " LINK gen_results}, unless an @{" error " LINK gen_errors}
occurs (for example there are no listers matching the handle given).

If the header is the default, then @{" RESULT " LINK gen_results} will be empty.

For example,
        + @{b}lister query 121132636 header@{ub}
        > @{i}Delete files?@{ui}

If no matching listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.


@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister query title " LINK lister_query_title}
@{" lister set header " LINK lister_set_header}
@{" lister set label " LINK lister_set_label}
@{" lister set title " LINK lister_set_title}

@endnode
@NODE lister_query_hide "DOpus Magellan II ARexx: 'lister query hide'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}hide
@{fg text}
This returns the current hide filter for a lister.
Usually this will be empty to indicate that nothing is being hidden.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 hide @{ub}
        > @{i}#?.o @{ui}

@{fg shine}See also:@{fg text}

@{" lister set hide " LINK lister_set_hide}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_label "DOpus Magellan II ARexx: 'lister query label'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}label
@{fg text}
This command returns the label that appears beneath this lister when it is
iconified. By default, the label will be the name of the current directory.
This label can, however, be changed by calling the @{" lister set label " LINK lister_set_label}
command.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 label@{ub}
        > @{i}Ram Disk @{ui}

@{" lister set label " LINK lister_set_label}

@endnode
@NODE lister_query_lock "DOpus Magellan II ARexx: 'lister query lock'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}lock @{fg fill}[@{fg shine}state@{fg fill}|@{fg shine}format@{fg fill}]
@{fg text}
This command returns the current lock status of either the lister's
state or format.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Returns 0 to indicate "unlocked", and 1 to indicate "locked".

For example,
        + @{b}lister query 121132636 lock state@{ub}
        > @{i}0 @{ui}

A lister @{b}state@{ub} and/or @{b}format@{ub} can be locked and unlocked by the
@{" lister set lock " LINK lister_set_lock} command. While a lister's @{b}state@{ub} (source/dest/off/etc.)
is locked the user cannot change it. Similarly, while a lister's @{b}format@{ub} is
locked the user cannot change it (currently this just disables
the Format Edit Requester and it is still possible to change the format
with the field gadgets, if enabled -- hopefully this will be fixed
in the future).

@{i}Note that "locked" in this sense is nothing to do with the "locked source"
and "locked destination" states which you can put listers in to have
multiple source or destination listers, nor is it anything to do with
when a lister is "locked" in position. @{ui}

@{fg shine}See also:@{fg text}

@{" lister set lock " LINK lister_set_lock}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query separate " LINK lister_query_separate}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}

@endnode
@NODE lister_query_mode "DOpus Magellan II ARexx: 'lister query mode'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}mode
@{fg text}
This returns the current mode of the lister and also the word @{b}showall@{ub} if
the lister is in an icon mode and displaying files without icons.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The lister modes are:-
        @{b}name@{ub}           - name mode
        @{b}icon@{ub}           - workbench style icon mode
        @{b}icon action@{ub}    - icon action mode

For example,
        + @{b}lister query 121132636 mode@{ub}
        > @{i}icon action showall @{ui}

@{fg shine}See also:@{fg text}

@{" lister set mode " LINK lister_set_mode}
@{" lister set source " LINK lister_set_source}
@{" lister set dest " LINK lister_set_dest}
@{" lister set off " LINK lister_set_off}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_namelength "DOpus Magellan II ARexx: 'lister query namelength'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}namelength
@{fg text}
This command gets the maximum length allowed for filenames in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The absolute minimum length is 30 characters which is also the default
length (and the current filename length limit of AmigaDOS).

Changing the length (with @{" lister set namelength " LINK lister_set_namelength}) will only be useful to
writers of @{" custom handlers " LINK custom_handlers}. Note that the internal Opus commands, for
the most part, do not currently support filenames longer than 30
characters.

For example,
        + @{b}lister query 121132636 namelength@{ub}
        > @{i}30 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set namelength " LINK lister_set_namelength}

@endnode
@NODE lister_query_numdirs "DOpus Magellan II ARexx: 'lister query numdirs'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numdirs
@{fg text}
Returns the number of directories in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numdirs@{ub}
        > @{i}3 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query dirs " LINK lister_query_dirs}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}

@endnode
@NODE lister_query_numentries "DOpus Magellan II ARexx: 'lister query numentries'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numentries
@{fg text}
Returns the total number of entries in the lister (files + dirs).

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numentries@{ub}
        > @{i}7 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query entries " LINK lister_query_entries}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query selentries " LINK lister_query_selentries}

@endnode
@NODE lister_query_numfiles "DOpus Magellan II ARexx: 'lister query numfiles'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numfiles
@{fg text}
Returns the number of files in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numfiles @{ub}
        > @{i}4 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query files " LINK lister_query_files}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query selfiles " LINK lister_query_selfiles}

@endnode
@NODE lister_query_numseldirs "DOpus Magellan II ARexx: 'lister query numseldirs'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numseldirs
@{fg text}
Returns the number of selected directories in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numseldirs@{ub}
        > @{i}1 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query dirs " LINK lister_query_dirs}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_numselentries "DOpus Magellan II ARexx: 'lister query numselentries'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numselentries
@{fg text}
Returns the number of selected entries (files + dirs) in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numselentries@{ub}
        > @{i}2 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query entries " LINK lister_query_entries}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_numselfiles "DOpus Magellan II ARexx: 'lister query numselfiles'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}numselfiles
@{fg text}
Returns the number of selected files in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 numselfiles@{ub}
        > @{i}1 @{ui}

@{fg shine}See also:@{fg text}

@{" lister query files " LINK lister_query_files}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_path "DOpus Magellan II ARexx: 'lister query path'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}path
@{fg text}
Returns a string indicating the current path visible in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 path@{ub}
        > @{i}ram: @{ui}

@{fg shine}See also:@{fg text}

@{" lister set path " LINK lister_set_path}
@{" lister read " LINK lister_read}

@endnode
@NODE lister_query_position "DOpus Magellan II ARexx: 'lister query position'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}position
@{fg text}
Returns the current position and size of the lister. The word @{b}locked@{ub} will
also be returned if the lister is locked in position.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The position returned is in the following format:

        @{fg fill}<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}> [@{fg shine}locked@{fg fill}] <@{fg text}L@{fg fill}/@{fg text}C@{fg fill}/@{fg text}c@{fg fill}/@{fg text}l@{fg fill}>@{fg text}

        @{b}x@{ub}      - x-coordinate for top-left of lister window;
        @{b}y@{ub}      - y-coordinate for top-left of lister window;
        @{b}w@{ub}      - width of the lister window;
        @{b}h@{ub}      - height of the lister window;
        @{b}L@{ub}      - total number of lines in the lister;
        @{b}C@{ub}      - total number of columns in the lister;
        @{b}c@{ub}      - number of visible columns in the lister;
        @{b}l@{ub}      - number of visible lines in the lister.

@{i}Note that the lines/columns data was not returned before Opus 5.5. @{ui}

For example,
        + @{b}lister query 121132636 position@{ub}
        > @{i}360/47/360/151 27/82/42/14 @{ui}

        + @{b}lister query 121132636 position@{ub}
        > @{i}360/47/360/151 locked 27/82/42/14 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set position " LINK lister_set_position}

@endnode
@NODE lister_query_proc "DOpus Magellan II ARexx: 'lister query proc'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}proc
@{fg text}
This command returns the process address of the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The process address will be returned in @{" RESULT " LINK gen_results}, unless an
error occurs, then @{" RC " LINK gen_results} will contain the relevant @{" error code " LINK gen_errors}.

For example,
        + @{b}lister query 121132636 proc@{ub}
        > @{i}122132648@{ui}

@endnode
@NODE lister_query_seldirs "DOpus Magellan II ARexx: 'lister query seldirs'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}seldirs @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all selected directories in the lister (@{bg fill} handle @{bg back}),
surrounded by quotes. If you specify a @{bg fill} separator @{bg back} character it will be
placed between the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 seldirs@{ub}
        > @{i}"ENV" "T" @{ui}
        + @{b}lister query 121132636 seldirs ,@{ub}
        > @{i}"ENV","T" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any directory with a space in its
name will cause your script to malfunction. Use a stem variable instead
(see below). @{ui}

@{i}Note that the empty string will be returned if there are no selected
directories in the lister. In previous versions of Opus 5, however, this
was not the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} seldirs var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query seldirs @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 seldirs var sds@{ub}
would return
        @{b}sds@{ub}    = '"ENV" "T"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} seldirs stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query seldirs @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 seldirs stem sdirs@{ub}
would return
        @{b}sdirs.count@{ub}    = 2
        @{b}sdirs.0@{ub}        = ENV
        @{b}sdirs.1@{ub}        = T

@{i}Note that the stem count will correctly return 0 if there are no
selected directories.@{ui}


@{fg shine}See also:@{fg text}

@{" lister query dirs " LINK lister_query_dirs}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_selentries "DOpus Magellan II ARexx: 'lister query selentries'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}selentries @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all selected entires (files + dirs) in the lister
(@{bg fill} handle @{bg back}), surrounded by quotes. If you specify a @{bg fill} separator @{bg back} character it
will be placed between the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 selentries@{ub}
        > @{i}"ENV" "T" "abc" "Disk.info" @{ui}
        + @{b}lister query 121132636 selentries ,@{ub}
        > @{i}"ENV","T","abc","Disk.info" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any entry with a space in its name
will cause your script to malfunction. Use a stem variable instead (see
below). @{ui}

@{i}Note that the empty string will be returned if there are no selected
entries in the lister. In previous versions of Opus 5, however, this was
not the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} selentries var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query selentries @{bg back}, except that the
result is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 selentries var sentryz@{ub}
would return
        @{b}sentryz@{ub}        = '"ENV" "T" "abc" "Disk.info"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} selentries stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query selentries @{bg back}, except that the
result is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 selentries stem stsentryz@{ub}
would return
        @{b}stsentryz.count@{ub}        = 4
        @{b}stsentryz.0@{ub}            = ENV
        @{b}stsentryz.1@{ub}            = T
        @{b}stsentryz.2@{ub}            = abc
        @{b}stsentryz.3@{ub}            = Disk.info

@{i}Note that the stem count will correctly return 0 if there are no
selected entries.@{ui}


@{fg shine}See also:@{fg text}

@{" lister query entry " LINK lister_query_entry}
@{" lister query entries " LINK lister_query_entries}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_selfiles "DOpus Magellan II ARexx: 'lister query selfiles'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}selfiles @{fg fill}[<@{fg text}separator@{fg fill}>]
@{fg text}
Returns the names of all selected files in the lister (@{bg fill} handle @{bg back}),
surrounded by quotes. If you specify a @{bg fill} separator @{bg back} character it will be
placed between the quotes, otherwise space is used.

For example, (The quotes are included in the strings)
        + @{b}lister query 121132636 selfiles@{ub}
        > @{i}"abc" "Disk.info" @{ui}
        + @{b}lister query 121132636 selfiles ,@{ub}
        > @{i}"abc","Disk.info" @{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
because it does not support quotes and any file with a space in its name
will cause your script to malfunction. Use a stem variable instead (see
below). @{ui}

@{i}Note that the empty string will be returned if there are no selected
files in the lister. In previous versions of Opus 5, however, this was not
the case. @{ui}


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} selfiles var @{fg fill}<@{fg text}varname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query selfiles @{bg back}, except that the result
is stored in the variable called @{bg fill} varname @{bg back} instead of @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister query 121132636 selfiles var sellyfilles@{ub}
would return
        @{b}sellyfilles@{ub}    = '"abc" "Disk.info"'


@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}>@{fg shine} selfiles stem @{fg fill}<@{fg text}stemname@{fg fill}>
@{fg text}
This is exactly the same as @{bg fill} lister query selfiles @{bg back}, except that the result
is stored in a stem variable whose base-name is @{bg fill} stemname @{bg back}.

For example,
        + @{b}lister query 121132636 selfiles stem sellyfilles@{ub}
would return
        @{b}sellyfilles.count@{ub}      = 2
        @{b}sellyfilles.0@{ub}          = abc
        @{b}sellyfilles.1@{ub}          = Disk.info

@{i}Note that the stem count will correctly return 0 if there are no
selected files.@{ui}


@{fg shine}See also:@{fg text}

@{" lister query files " LINK lister_query_files}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister select " LINK lister_select}

@endnode
@NODE lister_query_separate "DOpus Magellan II ARexx: 'lister query separate'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}separate
@{fg text}
This returns a keyword indicating the current file separation method in
the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Valid methods are:-
        @{b}mix@{ub}            - mix files and directories
        @{b}dirsfirst@{ub}      - directories first
        @{b}filesfirst@{ub}     - files first

For example,
        + @{b}lister query 121132636 separate@{ub}
        > @{i}dirsfirst @{ui}

@{fg shine}See also:@{fg text}

@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}

@endnode
@NODE lister_query_show "DOpus Magellan II ARexx: 'lister query show'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}show
@{fg text}
This returns the current show filter for the lister.
Usually this will be empty, indicating that everything not matched by
the hide filter is shown.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132635 show@{ub}
        > @{i}mod.#? @{ui}

@{fg shine}See also:@{fg text}

@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_sort "DOpus Magellan II ARexx: 'lister query sort'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}sort
@{fg text}
This returns a keyword indicating the current sort method in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Valid sort methods are:-
        @{b}name@{ub}           - filename
        @{b}size@{ub}           - file size
        @{b}protect@{ub}        - protection bits
        @{b}date@{ub}           - datestamp
        @{b}comment@{ub}        - comment
        @{b}filetype@{ub}       - file type
        @{b}version@{ub}        - file version

For example,
        + @{b}lister query 121132636 sort @{ub}
        > @{i}name @{ui}

@{i}Note that reverse sorting may or may not be in effect in the lister. Use
@{" lister query flags " LINK lister_query_flags} to check.@{ui}

@{fg shine}See also:@{fg text}

@{" lister set sort " LINK lister_set_sort}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_query_title "DOpus Magellan II ARexx: 'lister query title'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine} title
@{fg text}
This command returns the current title string of a lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The title will be returned in @{" RESULT " LINK gen_results}, unless an @{" error " LINK gen_errors}
occurs (for example there are no listers matching the handle given).

If the header is the default, then @{" RESULT " LINK gen_results} will be empty.

For example,
        + @{b}lister query 121132636 title@{ub}
        > @{i}Current Directory RAM:@{ui}

If no matching listers are available the result will be empty and @{" RC " LINK gen_results} will
contain the relevant @{" error code " LINK gen_errors}.


@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister query header " LINK lister_query_header}
@{" lister set header " LINK lister_set_header}
@{" lister set label " LINK lister_set_label}
@{" lister set title " LINK lister_set_title}

@endnode
@NODE lister_query_toolbar "DOpus Magellan II ARexx: 'lister query toolbar'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}toolbar
@{fg text}
This returns the toolbar currently being used by the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 toolbar@{ub}
        > @{i}DOpus5:Buttons/toolbar @{ui}

@{fg shine}See also:@{fg text}

@{" lister set toolbar " LINK lister_set_toolbar}

@endnode
@NODE lister_query_value "DOpus Magellan II ARexx: 'lister query value'."

@{fg shine}lister set value @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}name@{fg fill}>
@{fg text}
This command lets you query a value you have previously set with @{" lister set value " LINK lister_set_value}.

@{bg fill} handle @{bg back} is the handle of the lister in question.
@{bg fill} name @{bg back} is the name for which a value is queried.
For example,
        + @{b}lister query 121132636 value MyName
        > @{i}Jon Citizen@{ui}


@{fg shine}See also:@{fg text}

@{" lister query value " LINK lister_query_value}
@{" lister set value " LINK lister_set_value}


@endnode
@NODE lister_query_visible "DOpus Magellan II ARexx: 'lister query visible'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}visible
@{fg text}
Returns a boolean (0 = no, 1 = yes) value indicating if the lister is
currently visible.

@{bg fill} handle @{bg back} is the handle of the lister in question.

A lister's visibility can be changed by the @{" lister set visible " LINK lister_set_visible} command.

@{i}When a lister is invisible its window is completely hidden. A lister
is "visible" when its window is open on a screen, even if it is behind
another window so that you cannot see it. @{ui}

For example,
        + @{b}lister query 121132636 visible@{ub}
        > @{i}1 @{ui}

@{fg shine}See also:@{fg text}

@{" lister set visible " LINK lister_set_visible}
@{" lister new invisible " LINK lister_new}

@endnode
@NODE lister_query_window "DOpus Magellan II ARexx: 'lister query window'."

@{fg shine}lister query @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}window
@{fg text}
Returns a pointer to the window structure of the lister, or 0 if the lister
has no window.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister query 121132636 window@{ub}
        > @{i}0@{ui}

@endnode
@NODE lister_read "DOpus Magellan II ARexx: 'lister read'."

@{fg shine}lister read @{fg fill}<@{fg text}handle@{fg fill}> @{fg fill}<@{fg text}path@{fg fill}> [@{fg shine}force@{fg fill}]
@{fg text}
This command will read the given path into the specified lister (@{bg fill} handle @{bg back}).

By default a new cache is used to read the directory; if the @{bg fill} force @{bg back}
keyword is specified, the current cache will be cleared and the directory
will be read into that.

The old path is returned in @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister read 121132636 'dh0:test'@{ub}
        > @{i}RamDisk: @{ui}

@{fg shine}See also:@{fg text}

@{" lister query path " LINK lister_query_path}
@{" lister set path " LINK lister_set_path}

@endnode
@NODE lister_refresh "DOpus Magellan II ARexx: 'lister refresh'."

@{fg shine}lister refresh @{fg fill}(@{fg shine}all@{fg fill}|<@{fg text}handle@{fg fill}>) [@{fg shine}full@{fg fill}] [@{fg shine}date@{fg fill}]
@{fg text}
This command refreshes the display of the specified lister (@{bg fill} handle @{bg back}) or
all listers if the keyword @{bg fill} all @{bg back} is given in place of a lister handle.
Unlike Opus 4, none of the lister modifying commands will actually refresh
or update the lister display; hence, you must use this command after making
any changes (changing sort method, adding files, etc) to have the changes
display.

The optional @{bg fill} full @{bg back} keyword causes the lister title and status displayed
to be refreshed as well.

For example,
        + @{b}lister refresh 121132636 full@{ub}

If the @{bg fill} date @{bg back} keyword is specified, the lister will update its directory
datestamp, which will stop it re-reading itself the next time it is
activated. If this keyword is specified, the lister display itself is not
refreshed.

For example,
        + @{b}lister refresh 12113236 date @{ub}

@endnode
@NODE lister_reload "DOpus Magellan II ARexx: 'lister reload'."

@{fg shine}lister reload @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}name@{fg fill}> [@{fg shine}update@{fg fill}]
@{fg text}
This command reloads (or loads for the first time) a file in a lister.

@{bg fill} name @{bg back} is either the name of the entry, or #xxx (where xxx is a number) to
specify the cardinal number of the entry.

The @{bg fill} update @{bg back} keyword causes the lister datestamp to be updated
(to save unnecessary reloading).

For example,
        + @{b}lister reload 12381928 'filename.lha' update@{ub}

If the file previously existed in the lister, the user data, user menus and
version information of the file is preserved.

@endnode
@NODE lister_remove "DOpus Magellan II ARexx: 'lister remove'."

@{fg shine}lister remove @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}name@{fg fill}>
@{fg text}
This command removes an entry from the specified lister.

@{bg fill} name @{bg back} is either the name of the entry, or #xxx (where xxx is a number) to
specify the cardinal number of the entry.

The display is not updated until you execute a @{" lister refresh " LINK lister_refresh} command.

For example,
        + @{b}lister remove 121132636 #5@{ub}

@{fg shine}See also:@{fg text}

@{" lister add " LINK lister_add}
@{" lister addstem " LINK lister_addstem}

@endnode
@NODE lister_request "DOpus Magellan II ARexx: 'lister request'."

@{fg shine}lister request @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}text@{fg fill}> <@{fg text}buttons@{fg fill}>
@{fg text}
This command is identical to the @{" dopus request " LINK dopus_request} command except that it
takes an additional @{bg fill} handle @{bg back} parameter and the requester will be centred
over that lister.

@{bg fill} text @{bg back} is a string of text to be displayed in the requester.

@{bg fill} buttons @{bg back} are the buttons you wish the requester to have; each button
should be separated by a vertical bar character.

For example,
 + @{b}lister request 121132636 '"Choose one" Option 1|Option 2|Option 3'@{ub}

@{i}Note the quotes around the entire argument string. @{ui}

@{i}You can have multiple lines in the requester text by putting the "return"
character at the end of lines. @{ui}

This would display a requester with the string "Choose one", and three
buttons labelled Option 1 to Option 3.

The cardinal number of the selected button is returned in @{" RC " LINK gen_results}. The last
button supplied (Option 3 in this case) is designated a "Cancel" button,
and so returns the value 0. Therefore, the values returned by this example
are 1, 2, and 0, respectively.

@{fg shine}See also:@{fg text}

@{" lister getstring " LINK lister_getstring}
@{" dopus request " LINK dopus_request}
@{" dopus getstring " LINK dopus_getstring}

@endnode
@NODE lister_set "DOpus Magellan II ARexx: 'lister set'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> <@{fg text}item@{fg fill}> [<@{fg text}arguments@{fg fill}>]
@{fg text}
This command sets a particular item of information for the specified lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} item @{bg back} can be one of the following keywords:-

 @{" busy " LINK lister_set_busy}
 @{" case " LINK lister_set_case}
 @{" commentlength " LINK lister_set_commentlength}
 @{" dest " LINK lister_set_dest}
 @{" display " LINK lister_set_display}
 @{" field " LINK lister_set_field}
 @{" flags " LINK lister_set_flags}
 @{" header " LINK lister_set_header}
 @{" handler " LINK lister_set_handler}
 @{" hide " LINK lister_set_hide}
 @{" label " LINK lister_set_label}
 @{" lock " LINK lister_set_lock}
 @{" mode " LINK lister_set_mode}
 @{" namelength " LINK lister_set_namelength}
 @{" newprogress " LINK lister_set_newprogress}
 @{" off " LINK lister_set_off}
 @{" path " LINK lister_set_path}
 @{" position " LINK lister_set_position}
 @{" progress " LINK lister_set_progress}
 @{" separate " LINK lister_set_separate}
 @{" show " LINK lister_set_show}
 @{" sort " LINK lister_set_sort}
 @{" source " LINK lister_set_source}
 @{" title " LINK lister_set_title}
 @{" toolbar " LINK lister_set_toolbar}
 @{" visible " LINK lister_set_visible}

@{bg fill} arguments @{bg back}, if any, are specific to each command.

@{fg shine}See also:@{fg text}

@{" lister query " LINK lister_query}

@endnode
@NODE lister_set_busy "DOpus Magellan II ARexx: 'lister set busy'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}busy @{fg fill}(@{fg shine}0@{fg fill}|@{fg shine}1@{fg fill}|@{fg shine}off@{fg fill}|@{fg shine}on@{fg fill}) [@{fg shine}wait@{fg fill}]
@{fg text}
Sets the busy status for the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Specify 1 or "on" to make the lister go busy, or specify 0 or "off"
to un-busy the lister.

When turning busy status on you can also provide the @{bg fill} wait @{bg back} keyword which
will cause the command to be synchronous (it won't return until the
lister has finished going busy). You should use this when you want to do
something else to the lister right after making it go busy, otherwise
it could ignore you.

For example,
        + @{b}lister set 121132636 busy on wait@{ub}
        + @{b}lister set 121132636 busy 0@{ub}

@{fg shine}See also:@{fg text}

@{" lister query busy " LINK lister_query_busy}
@{" lister wait " LINK lister_wait}

@endnode
@NODE lister_set_case "DOpus Magellan II ARexx: 'lister set case'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}case @{fg fill}(@{fg shine}0@{fg fill}|@{fg shine}1@{fg fill}|@{fg shine}off@{fg fill}|@{fg shine}on@{fg fill})
@{fg text}
This command turns on (1 or "on") or off (0 or "off") case sensitivity for
the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Since Amiga filenames are not case sensitive this setting defaults to off.
It may be useful for some @{" custom handlers " LINK custom_handlers} to turn case sensitivity on,
however. OpusFTP is one such handler, and it needs case sensitivity when
displaying UNIX directories because there could be entries called
"RECENT", "recent", "Recent", and "ReCeNt" which are all different.

For example,
        + @{b}lister set 121132636 case on@{ub}
        + @{b}lister set 121132636 case off@{ub}

@{fg shine}See also:@{fg text}

@{" lister query case " LINK lister_query_case}

@endnode
@NODE lister_set_commentlength "DOpus Magellan II ARexx: 'lister set commentlength'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}commentlength @{fg fill}<@{fg text}length@{fg fill}>
@{fg text}

Allows you to set the maximum comment length allowed in the lister.

NOTE: This only affects the lister display, the filesystem still restricts
      the maximum file comment that can be saved to disk as 79 characters.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} length @{bg back} is the amount of characters to display in the comment field.

For example,
        + @{b}lister set 121132636 commentlength 100@{ub}

@{fg shine}See also:@{fg text}

@{" lister query commentlength " LINK lister_query_commentlength}

@endnode
@NODE lister_set_dest "DOpus Magellan II ARexx: 'lister set dest'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}dest @{fg fill}[@{fg shine}lock@{fg fill}]
@{fg text}
Makes the lister the destination.

@{bg fill} handle @{bg back} is the handle of the lister in question.

If you specify the @{bg fill} lock @{bg back} keyword, it will be locked as a destination.

For example,
        + @{b}lister set 121132636 dest@{ub}

@{fg shine}See also:@{fg text}

@{" lister set source " LINK lister_set_source}
@{" lister set off " LINK lister_set_off}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}
@{" lister query mode " LINK lister_query_mode}
@{" lister set mode " LINK lister_set_mode}

@endnode
@NODE lister_set_display "DOpus Magellan II ARexx: 'lister set display'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}display @{fg fill}<@{fg text}items@{fg fill}>
@{fg text}
Sets the display items for this lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The display will not be updated until you execute a @{" lister refresh " LINK lister_refresh}
command.

The items are the same as those returned by the @{" lister query display " LINK lister_query_display}
and @{" lister query sort " LINK lister_query_sort} commands.

Valid items are:-
        @{b}name@{ub}           - filename
        @{b}size@{ub}           - file size
        @{b}protect@{ub}        - protection bits
        @{b}date@{ub}           - datestamp
        @{b}comment@{ub}        - comment
        @{b}filetype@{ub}       - file type
        @{b}version@{ub}        - file version

For example,
        + @{b}lister set 121132636 display name date size protect@{ub}

@{fg shine}See also:@{fg text}

@{" lister query display " LINK lister_query_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}

@endnode
@NODE lister_set_field "DOpus Magellan II ARexx: 'lister set field'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}field @{fg fill}[<@{fg text}number@{fg fill}> <@{fg text}string@{fg fill}>]
@{fg text}
This allows you to set your own strings to be used in the lister field
titles. You can not change the nature of the columns in the lister - this
just allows you to change the heading.

The @{bg fill} number @{bg back} (0-9) specifies which string to replace from the table:-

        @{b}name@{ub}     0,
        @{b}size@{ub}     1,
        @{b}access@{ub}   2,
        @{b}date@{ub}     3,
        @{b}comment@{ub}  4,
        @{b}type@{ub}     5,
        @{b}owner@{ub}    6,
        @{b}group@{ub}    7,
        @{b}net@{ub}      8,
        @{b}version@{ub}  9.

Set to an empty string to restore the default.

You will need to do a @{" lister refresh <handle> full " LINK lister_refresh} to update the display
once you have changed the titles.

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister set 121132636 field 0 "FileName" 4 "Notes"@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}field @{fg fill}(@{fg shine}on@{fg fill}|@{fg shine}off@{fg fill})
@{fg text}
This allows you to remove field titles altogether ("off") and replace them
when you are finished ("on"). (You cannot use 1 and 0 instead of "on" and
"off", for obvious reasons.)

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{i}Note that if field titles have not been enabled in the configuration, an
ARexx script is unable to turn them on. @{ui}


@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister set label " LINK lister_set_label}
@{" lister set title " LINK lister_set_title}
@{" lister set header " LINK lister_set_header}

@endnode
@NODE lister_set_flags "DOpus Magellan II ARexx: 'lister set flags'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}flags @{fg fill}<@{fg text}flags@{fg fill}>
@{fg text}
Sets sort/display flags for the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.  You may use +@{b}flag@{ub} to
turn a flag on, -@{b}flag@{ub} to turn a flag off, or /@{b}flag@{ub} to toggle a flag.
By default, flags will be turned on.

The display is not updated unless you execute a @{" lister refresh " LINK lister_refresh} command.

Valid flags are:-
        @{b}reverse@{ub}        - sort in reverse order
        @{b}noicons@{ub}        - filter icons
        @{b}hidden@{ub} - filter hidden bit

For example,
        + @{b}lister set 121132636 flags +reverse -noicons@{ub}

        This will turn the reverse flag on and the noicons flag off.

@{fg shine}See also:@{fg text}

@{" lister query flags " LINK lister_query_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_header "DOpus Magellan II ARexx: 'lister set header'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}header @{fg fill}<@{fg text}string@{fg fill}>
@{fg text}
This works just like @{" lister set title " LINK lister_set_title} except it changes the text in the
'Files x/y Dirs x/y' bar.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Specify the new header text for the @{bg fill} string @{bg back} parameter.
The old header string is returned in @{" RESULT " LINK gen_results}.

Set this to an empty string to restore the default.
If you wish to actually display an empty header, set it to a "-" (hyphen
character).

You will need to do a @{" lister refresh <handle> full " LINK lister_refresh} to update the display
once you have changed the header.

For example,
        + @{b}lister set 121132636 header Super-Custom Header@{ub}
        + @{b}lister set 121132636 header@{ub}                  (To reset it)

@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister set label " LINK lister_set_label}
@{" lister set field " LINK lister_set_field}
@{" lister set title " LINK lister_set_title}

@endnode
@NODE lister_set_handler "DOpus Magellan II ARexx: 'lister set handler'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}handler @{fg fill}<@{fg text}port name@{fg fill}> [@{fg shine}quotes@{fg fill}] [@{fg shine}fullpath@{fg fill}] [@{fg shine}editing@{fg fill}]
           [@{fg shine}nopopups@{fg fill}] [@{fg shine}guage@{fg fill}] [@{fg shine}leaveguage@{fg fill}] [@{fg shine}synctraps@{fg fill}] [@{fg shine}subdrop@{fg fill}]

@{fg text}
Sets the @{" custom handler " LINK custom_handlers} port name for this lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} port name @{bg back} is the name of the message port to which messages from Opus
will be sent.

@{i}Note that message port names are case sensitive. Make sure that you use
the correct case and that you quote the name properly so that ARexx
doesn't uppercase it.@{ui}

If you specify the @{bg fill} quotes @{bg back} flag, any filenames sent in messages to the
port will be enclosed in quotes (this is a good idea as it allows you to
support filenames containing spaces).

If you specify the @{bg fill} fullpath @{bg back} flag, messages will always contain the full
path name of a file, irrespective of whether it came from an Opus lister or
not. (Usually, if the file comes from a lister you will only get the
filename itself, plus the lister handle with which to find out the path).

If you specify the @{bg fill} editing @{bg back} flag, inline lister editing will be enabled
for this lister.

If you specify the @{bg fill} nopopups @{bg back} flag, all file popups will be disabled for
this lister.

If you specify the @{bg fill} guage @{bg back} flag, you can enable the 'Free Space Gauge'
to show the proportion of space free on the disk. (note that the user may
still have turned them off in the environment)

Specifying the @{bg fill} leaveguage @{bg back} flag, will cause an existing fuelguage
to remain there, or leave it absent if it wasn't.  This is in contrast to
the above @{bg fill} guage @{bg back} flag, which will always add a fuelguage.

Not providing the @{bg fill} guage @{bg back} or the @{bg fill} leaveguage @{bg back} will always cause a
lister to have no fuelguage.

The @{bg fill} synctraps @{bg back} flag causes messages trapped by an ARexx lister handler
to be handled synchronously.  By default, (and for compatibility), all
handler messages remain asynchronous.

The @{bg fill} subdrop @{bg back} flag allows handlers to use the @{bg fill}@{fg shine} Drag into subdirectories @{fg text}@{bg back}
feature of Opus.  See @{fg shine}@{bg fill} Environment/Lister Options @{bg back}@{fg text} in the Opus manual
for more information on this option.

For example,
        + @{b}lister set 121132636 handler 'lhadir_handler' quotes@{ub}
        + @{b}lister set 121132636 handler 'lhadir_handler' quotes@{ub} guage nopopups
        + @{b}lister set 121132636 handler 'lhadir_handler' quotes@{ub} leaveguage

See @{" Custom Handlers " LINK custom_handlers} section for more details.

@{fg shine}See also:@{fg text}

@{" lister query handler " LINK lister_query_handler}
@{" Custom Handlers " LINK custom_handlers}

@endnode
@NODE lister_set_hide "DOpus Magellan II ARexx: 'lister set hide'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}hide @{fg fill}<@{fg text}pattern@{fg fill}>
@{fg text}
Sets the hide pattern for the lister to the string given for the
@{bg fill} pattern @{bg back} parameter.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The pattern is applied immediately but the display is not updated until you
execute a @{" lister refresh " LINK lister_refresh} command.

For example,
        + @{b}lister set 121132636 hide '#?.info'@{ub}

@{fg shine}See also:@{fg text}

@{" lister query hide " LINK lister_query_hide}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_label "DOpus Magellan II ARexx: 'lister set label'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}label @{fg fill}[<@{fg text}label@{fg fill}>]
@{fg text}
This command can be used to set the label that will be displayed beneath
the iconified lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} label @{bg back} is the icon-label string you want.

To remove a custom label, simply use this command with no label specified.

For example,
        + @{b}lister set 121132636 label Custom Lister@{ub}
        + @{b}lister set 121132636 label@{ub}

@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister set field " LINK lister_set_field}
@{" lister set title " LINK lister_set_title}
@{" lister set header " LINK lister_set_header}

@endnode
@NODE lister_set_lock "DOpus Magellan II ARexx: 'lister set lock'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}lock @{fg fill}<@{fg text}type@{fg fill}> (@{fg shine}0@{fg fill}|@{fg shine}1@{fg fill}|@{fg shine}off@{fg fill}|@{fg shine}on@{fg fill})
@{fg text}
@{bg fill} handle @{bg back} is the handle of the lister in question.

The @{bg fill} type @{bg back} parameter may currently be @{b}state@{ub} or @{b}format@{ub}:-

@{b}state@{ub}

The @{b}state@{ub} parameter allows you to lock the lister to its current state
(source/dest/off/etc) so the user will be unable to change it until you
unlock it.

@{b}format@{ub}

The @{b}format@{ub} parameter allows you to lock the lister to its current display
format. Currently this just prevents the user bringing up the Format Edit
Requester and it is still possible to change the format with the field
gadgets, if enabled -- hopefully this will be fixed in the future.

After the @{bg fill} type @{bg back} parameter, add 1 or "on" to turn it on, and 0 or "off" to
turn if off.

@{i}Note that "locked" in this sense is nothing to do with the "locked source"
and "locked destination" states which you can put listers in to have
multiple source or destination listers, nor is it anything to do with
when a lister is "locked" in position. @{ui}

You can string these commands on the one line.

For example,
        + @{b}lister set 121132636 lock state on format on@{ub}

@{fg shine}See also:@{fg text}

@{" lister query lock " LINK lister_query_lock}
@{" lister set source " LINK lister_set_source}
@{" lister set dest " LINK lister_set_dest}
@{" lister set off " LINK lister_set_off}

@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}

@endnode
@NODE lister_set_mode "DOpus Magellan II ARexx: 'lister set mode'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}mode @{fg fill}<@{fg text}mode@{fg fill}>
@{fg text}
This command sets the mode of the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

Valid lister modes are:-
        @{b}name@{ub}           - name mode
        @{b}icon@{ub}           - workbench style icon mode
        @{b}icon action@{ub}    - icon action mode

You can also add @{b}showall@{ub} to either of the icon modes to tell them to
display files without icons as well as those with by giving them default
icons depending on their filetype (see the printed manual for more
information).

For example,
        + @{b}lister set 121132636 mode name@{ub}
        + @{b}lister set 121132636 mode icon action showall@{ub}

@{fg shine}See also:@{fg text}

@{" lister query mode " LINK lister_query_mode}
@{" lister set source " LINK lister_set_source}
@{" lister set dest " LINK lister_set_dest}
@{" lister set off " LINK lister_set_off}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_namelength "DOpus Magellan II ARexx: 'lister set namelength'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}namelength @{fg fill}<@{fg text}length@{fg fill}>
@{fg text}
This command sets the maximum length allowed for filenames in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} length @{bg back} is the new length to set, in characters.

The minimum length is 30 characters which is also the default length
(and the current filename length limit of AmigaDOS).

This command will only be useful for writers of @{" custom handlers " LINK custom_handlers}.
Note that the internal Opus commands, for the most part, do not currently
support filenames longer than 30 characters.

For example,
        + @{b}lister set 121132636 namelength 256@{ub}

@{fg shine}See also:@{fg text}

@{" lister query namelength " LINK lister_query_namelength}

@endnode
@NODE lister_set_newprogress "DOpus Magellan II ARexx: 'lister set newprogress'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress @{fg fill}[@{fg shine}name@{fg fill}] [@{fg shine}file@{fg fill}] [@{fg shine}info@{fg fill}] [@{fg shine}info2@{fg fill}] [@{fg shine}info3@{fg fill}] [@{fg shine}bar@{fg fill}] [@{fg shine}abort@{fg fill}]
@{fg text}
This turns the progress indicator on for the specified lister.
This is similar to the old @{" lister set progress " LINK lister_set_progress} command, but allows
greater control over the information displayed.

@{bg fill} handle @{bg back} is the handle of the lister in question.
(If you don't want to open the progress window over a lister, use the
@{" dopus progress " LINK dopus_progress} command instead.)

        @{b}name@{ub}   - allocates space for filename display
        @{b}file@{ub}   - allocates space for file progress display
        @{b}info@{ub}   - allocates space for information line 1
        @{b}info2@{ub}  - allocates space for information line 2
        @{b}info3@{ub}  - allocates space for information line 3
        @{b}bar@{ub}    - allocates space for progress bar
        @{b}abort@{ub}  - adds "Abort" gadget

Progress windows that show both the bar graph and the file progress will
have the graph and file displays swapped around. This means that instead of
the graph showing the percentage of files copied, and a 'xx%' display
showing the progress of that file, the graph shows the file progress and a
'xxx of yyy' display gives overall information.

For example,
        + @{b}lister set 121132636 newprogress name file info bar abort@{ub}


@{bg text}@{fg fill} The following commands are for use once your progress window is open. @{fg text}@{bg back}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress name @{fg fill}<@{fg text}filename@{fg fill}>
@{fg text}
If the progress bar was opened with the @{b}name@{ub} parameter, this will set the
current filename to @{bg fill} filename @{bg back}.

For example,
        + @{b}lister set 121132636 newprogress name 'myfile.txt'@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress file @{fg fill}<@{fg text}total@{fg fill}> <@{fg text}count@{fg fill}>
@{fg text}
If the progress indicator was opened with the @{b}file@{ub} but not the @{b}bar@{ub}
parameter, this will set the total number of files and the number of the
current file. This is shown as 'xx%' in the top right of the requester.

If the progress indicator was opened with both the @{b}file@{ub} and @{b}bar@{ub} parameters,
this will set the total number of bytes and the current byte count. This is
shown in the bar graph part of the requester.

        + @{b}lister set 121132636 newprogress file 12 4@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress @{fg fill}<@{fg shine}info@{fg fill}|@{fg shine}info2@{fg fill}|@{fg shine}info3@{fg fill}> <@{fg text}text@{fg fill}>
@{fg text}
@{bg fill} text @{bg back} is a text string to be displayed between the filename and the bar
graph of the progress indicator. You can only use this if you allocated
this space when you created the progress bar.

For example,
        + @{b}lister set 121132636 newprogress info "From 'T' to 'Ram:'"@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress bar @{fg fill}<@{fg text}total@{fg fill}> <@{fg text}count@{fg fill}>
@{fg text}
If the progress indicator was opened with the @{b}bar@{ub} but not the @{b}file@{ub}
parameter, this will set the @{bg fill} total @{bg back} number of bytes and the current byte
@{bg fill} count @{bg back}. This is shown in the bar graph part of the requester.

If the progress indicator was opened with both the @{b}file@{ub} and @{b}bar@{ub} parameters,
this will set the @{bg fill} total @{bg back} number of files and the the current file @{bg fill} count @{bg back}.
This is shown as 'xxx of yyy' in the top right of the requester.

For example,
        + @{b}lister set 121132636 newprogress bar 1024 100@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}newprogress title @{fg fill}<@{fg text}text@{fg fill}>
@{fg text}
@{bg fill} text @{bg back} is a text string to be displayed in the title bar of the progress
indicator.

For example,
        + @{b}lister set 121132636 newprogress title 'Copying...'@{ub}


@{i}You can use the old @{" lister set progress " LINK lister_set_progress} commands on a "newprogress"
indicator, but obviously they can only change the filename and bar count.
Use @{" lister clear progress " LINK lister_clear} to remove either the "old" or "new" progress
indicators. @{ui}


@{fg shine}See also:@{fg text}

@{" lister set progress " LINK lister_set_progress}
@{" lister query abort " LINK lister_query_abort}
@{" lister clear progress " LINK lister_clear}
@{" lister clear abort " LINK lister_clear}
@{" dopus progress " LINK dopus_progress}

@endnode
@NODE lister_set_off "DOpus Magellan II ARexx: 'lister set off'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}off
@{fg text}
Turns the lister off (ie neither source nor destination).

@{bg fill} handle @{bg back} is the handle of the lister in question.

For example,
        + @{b}lister set 121132636 off@{ub}

@{fg shine}See also:@{fg text}

@{" lister set source " LINK lister_set_source}
@{" lister set dest " LINK lister_set_dest}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}
@{" lister query mode " LINK lister_query_mode}
@{" lister set mode " LINK lister_set_mode}

@endnode
@NODE lister_set_path "DOpus Magellan II ARexx: 'lister set path'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}path @{fg fill}<@{fg text}path string@{fg fill}>
@{fg text}
Sets the current path string in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} path string @{bg back} is the new string you want.

Note that this does @{b}not@{ub} cause the directory to be read, it merely changes
the displayed string. To read a new directory, use the @{" lister read " LINK lister_read}
command.

For example,
        + @{b}lister set 121132636 path 'dh0:work'@{ub}

@{fg shine}See also:@{fg text}

@{" lister query path " LINK lister_query_path}
@{" lister read " LINK lister_read}

@endnode
@NODE lister_set_position "DOpus Magellan II ARexx: 'lister set position'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}position @{fg fill}<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}>
@{fg text}
This sets the current position and size of the lister if it has not been
locked.

@{bg fill} handle @{bg back} is the handle of the lister in question.

The position is specified by the @{fg fill}<@{fg text}x@{fg fill}/@{fg text}y@{fg fill}/@{fg text}w@{fg fill}/@{fg text}h@{fg fill}>@{fg text} parameter:

        @{b}x@{ub}      - x-coordinate for top-left of lister window;
        @{b}y@{ub}      - y-coordinate for top-left of lister window;
        @{b}w@{ub}      - width of the lister window;
        @{b}h@{ub}      - height of the lister window.

If the lister is visible the window will be moved immediately.

For example,
        + @{b}lister set 121132636 position 20/20/400/300@{ub}

@{fg shine}See also:@{fg text}

@{" lister query position " LINK lister_query_position}

@endnode
@NODE lister_set_progress "DOpus Magellan II ARexx: 'lister set progress'."

@{i}Please note that the "lister set progress" commands have now been
superseded by the @{" lister set newprogress " LINK lister_set_newprogress} commands. Please use those
commands in any new scripts. @{ui}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}progress @{fg fill}<@{fg text}total@{fg fill}> <@{fg text}text@{fg fill}>
@{fg text}
This turns the progress indicator on in the specified lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} total @{bg back} specifies the total amount to be processed, and controls the bar
graph display.

@{bg fill} text @{bg back} is a text string to be displayed in the title bar of the progress
indicator.

For example,
        + @{b}lister set 121132636 progress 38 'Archiving files...'@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}progress count @{fg fill}<@{fg text}count@{fg fill}>
@{fg text}
This updates the bar graph display in the progress indicator (which must
have already been turned on).

@{bg fill} count @{bg back} is the current progress count to be indicated by the bar graph.

For example,
        + @{b}lister set 121132636 progress count 4@{ub}


@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}progress name @{fg fill}<@{fg text}name@{fg fill}>
@{fg text}
This updates the filename display in the progress indicator.
The filename is displayed above the bar graph.

For example,
        + @{b}lister set 121132636 progress name 'myfile.txt'@{ub}


@{fg shine}See also:@{fg text}

@{" lister set newprogress " LINK lister_set_newprogress}
@{" lister query abort " LINK lister_query_abort}
@{" lister clear progress " LINK lister_clear}
@{" lister clear abort " LINK lister_clear}
@{" dopus progress " LINK dopus_progress}

@endnode
@NODE lister_set_separate "DOpus Magellan II ARexx: 'lister set separate'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}separate @{fg fill}<@{fg text}method@{fg fill}>
@{fg text}
Sets the separation method for the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} method @{bg back} can be any one of the following:-
        @{b}mix@{ub}            - mix files and directories
        @{b}dirsfirst@{ub}      - directories first
        @{b}filesfirst@{ub}     - files first

The list is rearranged immediately, but the display will not be updated
until you execute a @{" lister refresh " LINK lister_refresh} command.

For example,
        + @{b}lister set 121132636 separate mix@{ub}

@{fg shine}See also:@{fg text}

@{" lister query separate " LINK lister_query_separate}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_show "DOpus Magellan II ARexx: 'lister set show'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}show @{fg fill}<@{fg text}pattern@{fg fill}>
@{fg text}
Sets the show pattern for the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} pattern @{bg back} is any valid AmigaDOS file pattern.

The pattern is applied immediately but the display is not updated until you
execute a @{" lister refresh " LINK lister_refresh} command.

For example,
        + @{b}lister set 121132636 show '#?.c'@{ub}

@{fg shine}See also:@{fg text}

@{" lister query show " LINK lister_query_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query sort " LINK lister_query_sort}
@{" lister set sort " LINK lister_set_sort}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_sort "DOpus Magellan II ARexx: 'lister set sort'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}sort @{fg fill}<@{fg text}method@{fg fill}>
@{fg text}
Sets the sort method for this lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} method @{bg back} can be any one of the following:-
        @{b}name@{ub}           - filename
        @{b}size@{ub}           - file size
        @{b}protect@{ub}        - protection bits
        @{b}date@{ub}           - datestamp
        @{b}comment@{ub}        - comment
        @{b}filetype@{ub}       - file type
        @{b}version@{ub}        - file version

The list is resorted immediately, but the display will not be updated until
you execute a @{" lister refresh " LINK lister_refresh} command.

For example,
        + @{b}lister set 121132636 sort date@{ub}
        + @{b}lister set 121132636 sort filetype@{ub}

@{fg shine}See also:@{fg text}

@{" lister query sort " LINK lister_query_sort}
@{" lister query show " LINK lister_query_show}
@{" lister set show " LINK lister_set_show}
@{" lister query hide " LINK lister_query_hide}
@{" lister set hide " LINK lister_set_hide}
@{" lister query flags " LINK lister_query_flags}
@{" lister set flags " LINK lister_set_flags}
@{" lister clear flags " LINK lister_clear}
@{" lister query display " LINK lister_query_display}
@{" lister set display " LINK lister_set_display}
@{" lister query separate " LINK lister_query_separate}
@{" lister set separate " LINK lister_set_separate}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}

@endnode
@NODE lister_set_source "DOpus Magellan II ARexx: 'lister set source'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}source @{fg fill}[@{fg text}lock@{fg fill}]
@{fg text}
Makes the lister the source.

@{bg fill} handle @{bg back} is the handle of the lister in question.

If you specify the @{bg fill} lock @{bg back} keyword, it will be locked as a source.

For example,
        + @{b}lister set 121132636 source lock@{ub}

@{fg shine}See also:@{fg text}

@{" lister set dest " LINK lister_set_dest}
@{" lister set off " LINK lister_set_off}
@{" lister query lock " LINK lister_query_lock}
@{" lister set lock " LINK lister_set_lock}
@{" lister query mode " LINK lister_query_mode}
@{" lister set mode " LINK lister_set_mode}

@endnode
@NODE lister_set_title "DOpus Magellan II ARexx: 'lister set title'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}title @{fg fill}<@{fg text}string@{fg fill}>
@{fg text}
Sets the title for the lister (the title displayed in the lister title
bar).

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} string @{bg back} is the text you want to replace the title with.

The old title is returned in @{" RESULT " LINK gen_results}.

The title bar display will not be updated until you execute a
@{" lister refresh <handle> full " LINK lister_refresh} command.

For example,
        + @{b}lister set 121132636 title 'hello'@{ub}
        > @{i}RESULT @{ui}
        + @{b}lister set 121132636 title@{ub}
        > @{i}hello @{ui}

@{fg shine}See also:@{fg text}

@{" lister query label " LINK lister_query_label}
@{" lister set label " LINK lister_set_label}
@{" lister set field " LINK lister_set_field}
@{" lister set header " LINK lister_set_header}

@endnode
@NODE lister_set_toolbar "DOpus Magellan II ARexx: 'lister set toolbar'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}toolbar @{fg fill}<@{fg text}toolbarname@{fg fill}>
@{fg text}
This command changes the toolbar that is used in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

@{bg fill} toolbarname @{bg back} is the name of the toolbar to use, either its full path or
just its filename if it's in the @{i}DOpus5:Buttons@{ui} directory.

For example,
        + @{b}lister set 121132636 toolbar Ram:custom_toolbar@{ub}

@{fg shine}See also:@{fg text}

@{" lister query toolbar " LINK lister_query_toolbar}

@endnode
@NODE lister_set_value "DOpus Magellan II ARexx: 'lister set value'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}value @{fg fill}<@{fg text}name@{fg fill}> <@{fg text}value@{fg fill}>
@{fg text}
This command lets you associate your own data with a lister in the form of
name/value pairs.  The lister will maintain the values until it is closed.

For example,
        + @{b}lister set 121132636 value MyName "Jon Citizen"


@{fg shine}See also:@{fg text}

@{" lister query value " LINK lister_query_value}
@{" lister clear value " LINK lister_clear_value}


@endnode
@NODE lister_set_visible "DOpus Magellan II ARexx: 'lister set visible'."

@{fg shine}lister set @{fg fill}<@{fg text}handle@{fg fill}> @{fg shine}visible @{fg fill}<@{fg text}state@{fg fill}>
@{fg text}
Sets the visible status for this lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

By default, listers are visible when they are created.

If you set this @{bg fill} state @{bg back} to 0 or "off", the lister will disappear from the
display until you make it visible again (with 1 or "on").

For example,
        + @{b}lister set 121132636 visible off@{ub}
        + @{b}lister set 121132636 visible 1@{ub}

@{fg shine}See also:@{fg text}

@{" lister query visible " LINK lister_query_visible}
@{" lister new invisible " LINK lister_new}

@endnode
@NODE lister_select "DOpus Magellan II ARexx: 'lister select'."

@{fg shine}lister select @{fg fill}<@{fg text}handle@{fg fill}> @{fg fill}<@{fg text}name@{fg fill}> <@{fg text}state@{fg fill}>
@{fg text}
This command changes the selection status of an entry in the lister.

@{bg fill} handle @{bg back} is the handle of the lister in question.

 @{bg fill}name @{bg back} is either the name of the entry, or #xxx (where xxx is a number) to
specify the cardinal number of the entry.

@{bg fill} state @{bg back} is the desired selection status (0 or "off" for off, 1 or "on" for
on). If @{bg fill} state @{bg back} is not given then the state of the entry is toggled.

The display is not refreshed until you execute a @{" lister refresh " LINK lister_refresh} command.

The previous selection state of the entry is returned in @{" RESULT " LINK gen_results}.

For example,
        + @{b}lister select 121132636 ENV on@{ub}
        > @{i}off @{ui}

@{fg shine}See also:@{fg text}

@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister query selfiles " LINK lister_query_selfiles}

@endnode
@NODE lister_wait "DOpus Magellan II ARexx: 'lister wait'."

@{fg shine}lister wait @{fg fill}<@{fg text}handle@{fg fill}> [@{fg shine}quick@{fg fill}]
@{fg text}
This command causes the rexx script to wait for the specified lister to
finish whatever it is doing.

Because Opus 5 multitasks, all rexx commands (like @{" lister read " LINK lister_read}, or
@{" lister new " LINK lister_new}) will return immediately, even if the lister has not
completed its task. This command will force the script to wait until the
lister goes non-busy.

If the lister is not in a busy state when this command is called, the
program will wait for up to two seconds for it to go busy, otherwise the
call is aborted.

@{bg fill} handle @{bg back} is the handle of the lister in question.

If the @{bg fill} quick @{bg back} keyword is specified, the command will return immediately
if the lister is not busy, instead of waiting for two seconds.

@{i}It would be silly to do @{" lister set busy 1 " LINK lister_set_busy} and then @{b}lister wait@{ub}. @{ui}

For example,
        + @{b}lister read 121132636 'c:'@{ub}
        + @{b}lister wait 121132636@{ub}

@{fg shine}See also:@{fg text}

@{" lister query busy " LINK lister_query_busy}
@{" lister set busy " LINK lister_set_busy}

@endnode
@NODE list_command "DOpus Magellan II ARexx: 'command'."

@{fg shine}command @{fg fill}[@{fg shine}wait@{fg fill}] [@{fg shine}source @{fg fill}<@{fg text}handle@{fg fill}>] [@{fg shine}dest @{fg fill}<@{fg text}handle@{fg fill}>] [@{fg shine}original@{fg fill}]
        @{fg shine}command @{fg fill}[<@{fg text}arguments@{fg fill}>]
@{fg text}
The @{b}command@{ub} command allows you to call the internal commands of
Directory Opus 5 from an ARexx script. The commands execute exactly as if
they had been run from a custom button or menu.

If the @{bg fill} wait @{bg back} flag is specified, the command will be run synchronously,
otherwise it will return immediately.  @{" RC " LINK gen_results} will contain a
result code indicating whether the command was successful or not.

Ordinarily, commands operate on the current source and destination listers
- the @{bg fill} source @{bg back} and @{bg fill} dest @{bg back} parameters allow you to specify alternative
listers to use by their handles.

The @{bg fill} original @{bg back} flag allows you to run an original Opus internal function if
the command has been replaced in the command list by an @{" external module " LINK arexx_modules}
(@{" external modules " LINK arexx_modules} which add commands to Opus override the internal list).
This means you could have a module that replaced some Opus commands, did
something special in some circumstances, and in others just called the
original Opus function.

The @{bg fill} command @{bg back} parameter is the name of the command, and @{bg fill} arguments @{bg back} are
any optional arguments for the command, as normal.

Some examples,
        + @{b}command all@{ub}
        + @{b}command wait copy@{ub}
        + @{b}command read s:startup-sequence@{ub}
        + @{b}command source 121132636 makedir name=MyDir noicon@{ub}
        + @{b}command original wait delete ram:#?@{ub}

@endnode
@NODE gen_errors "DOpus Magellan II ARexx: Error Codes."

@{fg shine}ARexx Error Codes@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
Lister handles are the actual address in memory of the lister structure.
Opus 5 will reject any non-valid handles with an @{" RC " LINK gen_results} of 10.

All commands that return data return it in @{" RESULT " LINK gen_results} (with the exception of
@{" dopus getstring " LINK dopus_getstring} and @{" lister getstring " LINK lister_getstring}) or a specified (stem) variable;
if an error occurs, the error code is returned in @{" RC " LINK gen_results}.

An @{" RC " LINK gen_results} of 0 generally indicates that everything is ok.

Error codes are:-

@{b}1@{ub}      @{bg text}@{fg fill} RXERR_FILE_REJECTED @{fg text}@{bg back}
        The file you tried to add was rejected by the current lister
        filters.
        @{i}Note that this is not an error, just a warning. The file is still
        added, it will just not be visible until the filters are changed. @{ui}

@{b}5@{ub}      @{bg text}@{fg fill} RXERR_INVALID_QUERY @{fg text}@{bg back}
        @{bg text}@{fg fill} RXERR_INVALID_SET @{fg text}@{bg back}
        The query/set item you specified was invalid.

@{b}6@{ub}      @{bg text}@{fg fill} RXERR_INVALID_NAME  @{fg text}@{bg back}
        @{bg text}@{fg fill} RXERR_INVALID_KEYWORD @{fg text}@{bg back}
        The filename or keyword you specified was invalid.

@{b}8@{ub}      @{bg text}@{fg fill} RXERR_INVALID_TRAP @{fg text}@{bg back}
        The trap you tried to remove didn't exist.

@{b}10@{ub}     @{bg text}@{fg fill} RXERR_INVALID_HANDLE @{fg text}@{bg back}
        The lister handle you gave was invalid.

@{b}12@{ub}     @{bg text}@{fg fill} RXERR_NO_TOOLBAR @{fg text}@{bg back}
        The lister has no valid toolbar.

@{b}15@{ub}     @{bg text}@{fg fill} RXERR_NO_MEMORY @{fg text}@{bg back}
        There wasn't enough memory to do what you wanted.

@{b}20@{ub}     @{bg text}@{fg fill} RXERR_NO_LISTER @{fg text}@{bg back}
        A lister failed to open (usually because of low-memory).

You can convert the error codes returned in @{" RC " LINK gen_results} into meaningful error
messages (for error reports and so on) with the @{" dopus error " LINK dopus_error} command.

@endnode
@NODE custom_handlers "DOpus Magellan II ARexx: Custom Handlers."

@{fg shine}Custom Handlers@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
@{" The Basics " LINK ch_the_basics}
@{" Custom Handlers for Listers " LINK ch_listers}
- @{" List of events " LINK ch_listers_events}
@{" Custom Handlers for AppIcons " LINK ch_appicons}

@endnode
@NODE ch_the_basics "DOpus Magellan II ARexx: Custom Handlers, The Basics."

@{fg shine}Custom Handlers, The Basics.@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
The custom handler system allows you to specify the name of an external
public message port. This port will be sent messages whenever certain
things happen that you are interested in. Messages that are sent are
properly formatted ARexx messages.

An example code fragment to receive a message is:
@{b}
        call waitpkt(myportname)        /* wait for messages to arrive */

        packet=getpkt(myportname)       /* get waiting message */
        arg0=getarg(packet,0)           /* get Argument 0 */
        arg1=getarg(packet,1)           /* get Argument 1 */
        arg2=getarg(packet,2)           /* get Argument 2, etc... */

        call reply(packet,0)            /* reply to the message */
@{ub}

Because of the multi-tasking nature of Opus 5, information custom handlers
receive can not be 100% relied on. For example, you may receive an "active"
message, but the cache that caused it may have immediately gone "inactive"
again. You should therefore check your port is clear of all messages before
processing any that have come in, and you should also use the
@{" lister query " LINK lister_query} command to make sure that things are how you expect them.
Also note that listers (unless you have turned @{" busy " LINK lister_set_busy} on) can be closed by
the user at any time. An "inactive" message is sent when the lister is
closed. To check that a lister is still open, use the @{" lister query path " LINK lister_query_path}
command (or any other @{" query " LINK lister_query} command). If the lister no longer exists,
@{" RC " LINK gen_results} will contain the error code @{" XERR_INVALID_HANDLE " LINK gen_errors} (10). Be aware,
though, that while these possibilities exist, generally they will not cause
a problem. For the most part it will only be if the user is
"playing around" that weird situations will occur.

@endnode
@NODE ch_listers "DOpus Magellan II ARexx: Custom Handlers for Listers."

@{fg shine}Custom Handlers for Listers@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
A custom handler is "attached" to a lister by calling
@{" lister set <handle> handler " LINK lister_set_handler} for that lister, giving the name of your
message port. Whenever something interesting happens to your lister, the
handler will be sent an ARexx message.

The handler can be implemented either as a rexx program or as a C program
(in which case it must interpret the rexx message itself).

Unlike Opus 4, messages sent to handlers do not cause Directory Opus 5 to
"hang" until they are replied (although you should try to reply to any
messages as soon as possible).

@{i}Note that custom handlers for listers are specific only to the cache that
is visible in the lister at the time the handler name is set. The same
handler port may be used set for multiple caches, and indeed for multiple
listers. @{ui}

@{i}Note also that message port names are case-sensitive. Be careful that
ARexx doesn't uppercase them. @{ui}

The rexx message identifies the type of event, the lister the event
happened to, and other pertinent data.

@{" List of events " LINK ch_listers_events}

@endnode
@NODE ch_listers_events "DOpus Magellan II ARexx: Lister Handlers, Events."

@{fg shine}Custom Handlers for Listers: The Events@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
The rexx message identifies the type of event, the lister the event
happened to, and other pertinent data.

The events that you will be notified of are:-

 @{" active " LINK ch_lactive}
 @{" doubleclick " LINK ch_ldoubleclick}
 @{" drop " LINK ch_ldrop}
 @{" dropfrom " LINK ch_ldropfrom}
 @{" edit " LINK ch_ledit}
 @{" inactive " LINK ch_linactive}
 @{" parent " LINK ch_lparent}
 @{" path " LINK ch_lpath}
 @{" reread " LINK ch_lreread}
 @{" root " LINK ch_lroot}
 @{" snapshot " LINK ch_lsnapshot}
 @{" unsnapshot " LINK ch_lunsnapshot}
 @{" Trapped Functions " LINK ch_ltrappedfunctions}
 @{" AddStem Pop-Ups " LINK ch_laddstempopups}
 @{" Lister2 Pop-Ups " LINK ch_llister2popups}

@endnode
@NODE ch_lactive "DOpus Magellan II ARexx: Lister Handlers, 'active'"

@{fg shine}Custom Handlers for Listers: active@{fg text}

This event indicates that a cache with a custom handler attached has just
become visible.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"active"@{fg text}            (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<title>@{fg text}             (cache title)
        @{b}Arg3@{ub} - undefined
        @{b}Arg4@{ub} - @{fg fill}<path>@{fg text}              (path of the lister)

@{b}Arg2@{ub} will contain the custom title of the cache that became active, if it
has been set with @{" lister set title " LINK lister_set_title}. If no custom title has been defined,
the path string of the cache is returned instead (ie in this case @{b}Arg2@{ub} will
be the same as @{b}Arg4@{ub}).

@endnode
@NODE ch_ldoubleclick "DOpus Magellan II ARexx: Lister Handlers, 'doubleclick'"

@{fg shine}Custom Handlers for Listers: doubleclick@{fg text}

This is a double-click event, and indicates that an item in the lister has
been double-clicked on by the user.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"doubleclick"@{fg text}       (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<name>@{fg text}              (entry name)
        @{b}Arg3@{ub} - undefined
        @{b}Arg4@{ub} - undefined
        @{b}Arg5@{ub} - @{fg fill}<userdata>@{fg text}          (if userdata was specified with the
                                   @{" lister addstem " LINK lister_addstem} command)
        @{b}Arg6@{ub} - @{fg fill}<qualifiers>@{fg text}        (string indicating qualifiers pressed
                                   - shift, alt, and control keys)

@endnode
@NODE ch_ldrop "DOpus Magellan II ARexx: Lister Handlers, 'drop'"

@{fg shine}Custom Handlers for Listers: drop@{fg text}

This is a drag'n'drop event, and indicates that one or more entries have
been dropped into a lister.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"drop"@{fg text}              (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (destination lister handle)
        @{b}Arg2@{ub} - @{fg fill}<names>@{fg text}             (filenames)
        @{b}Arg3@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle)
        @{b}Arg4@{ub} - undefined
        @{b}Arg5@{ub} - @{fg fill}<destination>@{fg text}       (full destination path)
        @{b}Arg6@{ub} - @{fg fill}<qualifiers>@{fg text}        (string indicating qualifiers pressed
                                   - shift, alt, control keys, or whether drop
                                   was over a sub-directory)

The filenames are separated by spaces (if there is more than one), and will
be within quotes if the @{b}quotes@{ub} keyword was specified for the
@{" lister set handler " LINK lister_set_handler} command.

@{b}Arg5@{ub} contains the full destination path.  You can compare this against the
path of the destination lister (handle in @{b}Arg1@{ub}) to see whether the drop was
into a sub-directory or into the lister itself.

@{i}You should not rely on the ARexx Word() function to traverse the list
of filenames because it does not support quotes and any name with a space
in it will cause your script to malfunction. @{ui}

If the files originated from another Opus 5 lister, @{b}Arg3@{ub} gives the handle
of that lister. If this is the case, and the @{b}fullpath@{ub} option was not
specified for @{" lister set handler " LINK lister_set_handler}, only the filenames (and not their
paths) are supplied in @{b}Arg2@{ub} (you can get the source path using
@{" lister query path " LINK lister_query_path}). If Arg3 is null then the drop most likely originated
from Workbench, and the names in @{b}Arg2@{ub} include the full paths.

If the files are dropped over a sub-directory in the lister then @{b}Arg6@{ub} will
contain the qualifier 'subdrop', providing that the handler was invoked using
@{" lister set handler " LINK lister_set_handler} with the @{b}subdrop@{ub} keyword.

@endnode
@NODE ch_ldropfrom "DOpus Magellan II ARexx: Lister Handlers, 'dropfrom'"

@{fg shine}Custom Handlers for Listers: dropfrom@{fg text}

This is basically the same as the @{" drop " LINK ch_ldrop} event, except that it indicates a
drop from a lister rather than a drop to one.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"dropfrom"@{fg text}          (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle)
        @{b}Arg2@{ub} - @{fg fill}<names>@{fg text}             (filenames)
        @{b}Arg3@{ub} - @{fg fill}<handle>@{fg text}            (destination lister handle)
        @{b}Arg4@{ub} - undefined
        @{b}Arg5@{ub} - @{fg fill}<destination>@{fg text}       (path the file was dropped into)
        @{b}Arg6@{ub} - @{fg fill}<qualifiers>@{fg text}        (string indicating qualifiers pressed
                                   - shift, alt, control keys, or whether drop
                                   was over a sub-directory)

The filenames are separated by spaces (if there is more than one), and will
be within quotes if the @{b}quotes@{ub} keyword was specified for the
@{" lister set handler " LINK lister_set_handler} command.

@{b}Arg5@{ub} of the 'dropfrom' custom handler message contains the destination
path; that is, the path that the file was dropped into. If the file was
dropped onto an icon, the destination path will be that of the object it
was dropped onto. For example, if a file from your custom lister is dropped
onto the Prefs icon in the Workbench lister, @{b}Arg5@{ub} will contain
"DH0:Prefs/", while @{b}Arg3@{ub} will contain the handle of the destination lister.

If @{b}Arg3@{ub} is 0 the drop was probably to the desktop.  If the file was dropped
onto an icon on the desktop, @{b}Arg5@{ub} will contain the path.  If the file was
dropped onto empty space on the desktop, @{b}Arg5@{ub} will contain the string
'desktop'.  If you get the string 'desktop' you can find the proper path to
copy the file to (or whatever) using the @{" getdesktop " LINK dopus_getdesktop} command.

If the files are dropped over a sub-directory in the lister then @{b}Arg6@{ub} will
contain the qualifier 'subdrop', providing that the handler was invoked using
@{" lister set handler " LINK lister_set_handler} with the @{b}subdrop@{ub} keyword.

@{i}Note that if the user drops a file onto an icon that is not a disk or a
drawer, you will still get the full pathname of the icon in @{b}Arg5@{ub}.  It is up
to you to determine whether the given destination path is a drawer or a
file and act appropriately.@{ui}

@{i}Also note: the old @{b}Arg3@{ub} was a little bit confusing; it was the
destination lister handle if there was one, otherwise it was the source
lister handle. This has now been changed; @{b}Arg3@{ub} is ALWAYS the destination
lister handle, and 0 if there is none. @{b}Arg1@{ub} is still the source
lister handle.@{ui}

@{i}You should not rely on the ARexx Word() function to traverse the list
of filenames because it does not support quotes and any name with a space
in it will cause your script to malfunction. @{ui}

Note that @{" appicons " LINK ch_appicons} can also receive @{b}dropfrom@{ub} events but they have
slightly different arguments. They can be distinguished by the word
"icon" always present in @{b}Arg4@{ub}. See the @{" appicons " LINK ch_appicons} section.

@endnode
@NODE ch_ledit "DOpus Magellan II ARexx: Lister Handlers, 'edit'"

@{fg shine}Custom Handlers for Listers: edit@{fg text}

This event indicates that the cache this custom handler is attached to is
no longer active (visible in the lister).
This event indicates that an entry has been changed via inline editing.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"edit"@{fg text}              (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<name>@{fg text}              (entry name)
        @{b}Arg3@{ub} - @{fg fill}<field>@{fg text}             ("name", "protect", "date", or "comment")
        @{b}Arg4@{ub} - @{fg fill}<new value>@{fg text}         (value of string after editing)
        @{b}Arg5@{ub} - @{fg fill}<userdata>@{fg text}          (userdata specified via the
                                   @{" lister addstem " LINK lister_addstem} command)

This message will only be sent if inline editing was enabled by specifying
the @{b}editing@{ub} option of the @{" lister set handler " LINK lister_set_handler} command.

@endnode
@NODE ch_linactive "DOpus Magellan II ARexx: Lister Handlers, 'inactive'"

@{fg shine}Custom Handlers for Listers: inactive@{fg text}

This event indicates that the cache this custom handler is attached to is
no longer active (visible in the lister).

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"inactive"@{fg text}          (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<title>@{fg text}             (cache title)
        @{b}Arg3@{ub} - undefined
        @{b}Arg4@{ub} - @{fg fill}<path>@{fg text}              (path of the lister)

This message is caused by the cache in the lister being changed (either by
the user or under rexx control), or even by the lister being closed. Note
that you may receive an active message for another cache with a custom
handler, or even for the same cache, immediately after receiving an
inactive message.

@endnode
@NODE ch_lparent "DOpus Magellan II ARexx: Lister Handlers, 'parent'"

@{fg shine}Custom Handlers for Listers: parent@{fg text}

This event will be received when the Parent Directory item is chosen from
the lister cache pop-up menu, or whenever the user clicks on the border
parent gadget or uses the parent hot key, "/".

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"parent"@{fg text}            (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle)
        @{b}Arg2@{ub} - @{fg fill}<path>@{fg text}              (path of lister)
        @{b}Arg3@{ub} - undefined
        @{b}Arg4@{ub} - undefined
        @{b}Arg5@{ub} - undefined
        @{b}Arg6@{ub} - @{fg fill}<qualifiers>@{fg text}        (string indicating qualifiers pressed
                                   - only shift keys)

@endnode
@NODE ch_lpath "DOpus Magellan II ARexx: Lister Handlers, 'path'"

@{fg shine}Custom Handlers for Listers: path@{fg text}

When the user enters a new path in the path gadget of a lister you will
receive this message.

The arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"path"@{fg text}              (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<path>@{fg text}              (path of lister)

@endnode
@NODE ch_lreread "DOpus Magellan II ARexx: Lister Handlers, 'reread'"

@{fg shine}Custom Handlers for Listers: reread@{fg text}

The reread event will be sent to your handler when the Re-read Directory
item is chosen from the lister cache pop-up menu.

Its arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"reread"@{fg text}            (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<path>@{fg text}              (new path for lister)

@endnode
@NODE ch_lroot "DOpus Magellan II ARexx: Lister Handlers, 'root'"

@{fg shine}Custom Handlers for Listers: root@{fg text}

A root event will be received when the Root Directory item is chosen
from the lister cache pop-up menu, or whenever the user uses the root
hot key, ":".

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"root"@{fg text}              (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle)
        @{b}Arg2@{ub} - @{fg fill}<path>@{fg text}              (path of lister)
        @{b}Arg3@{ub} - undefined
        @{b}Arg4@{ub} - undefined
        @{b}Arg5@{ub} - undefined
        @{b}Arg6@{ub} - @{fg fill}<qualifiers>@{fg text}        (string indicating qualifiers pressed
                                   - only shift keys)

@endnode
@NODE ch_lsnapshot "DOpus Magellan II ARexx: Lister Handlers, 'snapshot'"

@{fg shine}Custom Handlers for Listers: 'snapshot'@{fg text}

The snapshot event will be sent to your handler when the user snapshots
a lister under your control.

Its arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"snapshot"@{fg text}          (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)

Unlike @{" snapshot for AppIcons " LINK ch_appicons}, the lister's position is not sent with the
event and it is up to you to get it using @{" lister query position " LINK lister_query_position}.

It is also up to you to save the information for later use, if you wish to
support snapshots on your handler.

@endnode
@NODE ch_lunsnapshot "DOpus Magellan II ARexx: Lister Handlers, 'unsnapshot'"

@{fg shine}Custom Handlers for Listers: 'unsnapshot'@{fg text}

The unsnapshot event will be sent to your handler when the user un-snapshots
a lister under your control.

Its arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"unsnapshot"@{fg text}        (a string indicating the event type)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)

It is up to you to remember that the lister has been un-snapshotted if you
wish to support snapshots on your handler.

@endnode
@NODE ch_ltrappedfunctions "DOpus Magellan II ARexx: Lister Handlers, Trapped Functions"

@{fg shine}Custom Handlers for Listers: Trapped Functions@{fg text}

Messages for @{" trapped commands " LINK dopus_addtrap} are sent to the lister much like the other
messages.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}<command>@{fg text}           (name of the command, or @{"'abort'" LINK dopus_addtrap})
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle, if any)
        @{b}Arg2@{ub} - @{fg fill}<files>@{fg text}             (selected files, if any)
        @{b}Arg3@{ub} - @{fg fill}<handle>@{fg text}            (destination lister handle, if any)
        @{b}Arg4@{ub} - @{fg fill}<path>@{fg text}              (source path; useful if there's no lister
                                   associated with it)
        @{b}Arg5@{ub} - @{fg fill}<args>@{fg text}              (user-supplied arguments to the function)
        @{b}Arg7@{ub} - @{fg fill}<path>@{fg text}              (destination path; allows you to support
                                   the Select Destination requester)
        @{b}Arg8@{ub} - @{fg fill}<functionhandle>@{fg text}    (If @{bg fill} synctraps @{bg back} flag is set, contains
                                   address in decimal of structure for this
                                   function)

The filenames are separated by spaces (if there is more than one), and will
be within quotes if the @{b}quotes@{ub} keyword was specified for the
@{" lister set handler " LINK lister_set_handler} command.

@{i}You should not rely on the ARexx Word() function to traverse the list
of filenames because it does not support quotes and any name with a space
in it will cause your script to malfunction. @{ui}

@endnode
@NODE ch_laddstempopups "DOpus Magellan II ARexx: Lister Handlers, AddStem Pop-Ups"

@{fg shine}Custom Handlers for Listers: AddStem Pop-Ups@{fg text}

If you have added files to a lister with @{" lister addstem " LINK lister_addstem} and specified
your own pop-up menus for the files, you will receive messages when these
menus are chosen by the user.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"menu"@{fg text}              (string identifies this as a menu event)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)
        @{b}Arg2@{ub} - @{fg fill}<name>@{fg text}              (entry name)
        @{b}Arg3@{ub} - @{fg fill}<id>@{fg text}                (ID of the menu item + base ID if specified)
        @{b}Arg4@{ub} - @{fg fill}"file"@{fg text}              (string identifying this as a "file" menu
                                   event)
        @{b}Arg5@{ub} - @{fg fill}<userdata>@{fg text}          (userdata specified via the
                                   @{" lister addstem " LINK lister_addstem} command)

@endnode
@NODE ch_llister2popups "DOpus Magellan II ARexx: Lister Handlers, Lister Pop-Ups"

@{fg shine}Custom Handlers for Listers: Lister Pop-Ups@{fg text}

If you have added menu items to the lister pop-up menu, accessed by using the
LMB over the SRCE/DEST status display, then messages will be received when
these menu items are chosen.

The message arguments are:-

        @{b}Arg0@{ub} - @{fg fill}"menu text"@{fg text}         (the menu item text you added with
                                   'dopus command' @{b}ext@{ub} parameter)
        @{b}Arg1@{ub} - @{fg fill}<handle>@{fg text}            (lister handle)

@endnode
@NODE ch_appicons "DOpus Magellan II ARexx: Custom Handlers for AppIcons."

@{fg shine}Custom Handlers for AppIcons@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
Like listers with handles, AppIcons added with the @{" addappicon " LINK dopus_addappicon} command
will also cause messages to be sent. See the @{" lister handlers " LINK ch_listers} section
for more details.

All AppIcon messages have the same arguments:-

        @{b}Arg0@{ub} - @{fg fill}<event>@{fg text}             (string identifying the event)
        @{b}Arg1@{ub} - @{fg fill}<id>@{fg text}                (ID specified in the addappicon command)
        @{b}Arg2@{ub} - @{fg fill}<data>@{fg text}              (filenames/menu ID/other information)
        @{b}Arg3@{ub} - @{fg fill}<handle>@{fg text}            (source lister handle - if applicable)
        @{b}Arg4@{ub} - @{fg fill}"icon"@{fg text}              (string identifying this as an "icon" event)

These are the events that apply to AppIcons:-

@{fg shine}doubleclick@{fg text}
This event indicates that an icon has been double-clicked, or has had
"Open" selected from its menu. ("Open" is replaced with "Close" if you give
the @{b}close@{ub} option to @{" dopus addappicon " LINK dopus_addappicon}, and you'll get @{fg shine}close@{fg text} events
instead.)

@{fg shine}dropfrom@{fg text}
This is a drag'n'drop event, and indicates that one or more entries have
been dropped on this appicon from a lister or elsewhere. The names of the
entries are available in @{b}Arg2@{ub}. The names will be surrounded by quotes if
you gave the @{b}quotes@{ub} option to @{" dopus addappicon " LINK dopus_addappicon}.

@{i}You should not rely on the ARexx Word() function to traverse the list
of filenames because it does not support quotes and any name with a space
in it will cause your script to malfunction. @{ui}

@{fg shine}snapshot@{fg text}
This event occurs when the Snapshot menu item is selected. The current
position of the icon is available in @{b}Arg2@{ub} (as an x,y string). You are
responsible for storing this position. (You will only get snapshot
events if you give the @{b}snap@{ub} option to @{" dopus addappicon " LINK dopus_addappicon}.)

@{fg shine}unsnapshot@{fg text}
This event occurs when the Un-Snapshot menu item is selected. (You will
only get unsnapshot events if you give the @{b}snap@{ub} option to
@{" dopus addappicon " LINK dopus_addappicon}.)

@{fg shine}removed@{fg text}
This event warns that Opus has quit and the handler code should now clean
up and exit.

@{fg shine}info@{fg text}
This event occurs when the Information menu item is selected. (You will
only get info events when you give the @{b}info@{ub} option to @{" dopus addappicon " LINK dopus_addappicon}.)

@{fg shine}close@{fg text}
This will occur when Close is selected from the pop-up menu. (You will only
get close events when you give the @{b}close@{ub} option to @{" dopus addappicon " LINK dopus_addappicon}.)

@{fg shine}menu@{fg text}
This event indicates that one of the user-supplied menu items has been
selected in the pop-up menu. The number of the menu item will be returned
in @{b}Arg2@{ub}, and your @{b}base@{ub} value will have been added to it if you specified
one when you called @{" dopus addappicon " LINK dopus_addappicon}.

@{fg shine}menuhelp@{fg text}
This event indicates that the help key was pressed while the mouse pointer
was over one of the user-supplied menu items. The number of the menu item
will be returned in @{b}Arg2@{ub}, and your @{b}base@{ub} value will have been added to it if
you specified one when you called @{" dopus addappicon " LINK dopus_addappicon}.

@endnode
@NODE arexx_modules "DOpus Magellan II ARexx: ARexx Modules."

@{fg shine}ARexx Modules@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
ARexx Modules are ARexx scripts which are installed in the DOpus5:Modules
directory. They must have the suffix @{b}.dopus5@{ub} to work correctly.

Each ARexx Module can add new internal commands to Opus.

Once both Opus 5 and ARexx have been started on the computer, the
DOpus5:Modules directory will be scanned for ARexx Modules and each will
have its @{b}init@{ub} function called. Every ARexx Module must have an @{b}init@{ub}
function or else it will not work. This is the function that adds the extra
commands to Opus.

The scripts are called with 4 or more parameters. The first 4 are always
provided - the portname of Directory Opus 5 and the function name, followed
by the source and destination lister handles. Any user-supplied arguments
to the function will follow.

@{i}Note that although the source and destination lister handle arguments are
always given when your script is called, they will always be zero unless
you specified that you wanted source and/or destination handles when
you added the command. @{ui}

You can add as many commands as you like. To add commands, use the
@{" dopus command " LINK dopus_command} command.

Here is a complete example of an ARexx Module:-

@{b}
/* Example Directory Opus 5 ARexx Module */

parse arg portname function source dest arguments
address value portname
options results

/* Initialise */

if function='init' then do
        dopus command "Test1" program "test-command" desc "'Test command 1'" template "TEST/S"
        dopus command "Test2" program "test-command" desc "'Test command 2'" "source"
        exit
        end


/* Test function 1 */

if function='Test1' then do
        dopus request "'Test command 1 received!'" "Ok"
        exit
        end


/* Test function 2 */

if function='Test2' then do
        str="'Test command 2 received - source handle " || source
        dopus request str "Ok"
        exit
        end
@{ub}

@endnode
@NODE index "DOpus Magellan II ARexx: Guide Index."

@{fg shine}Index@{fg text}
@{fg shine}----------------------@{fg fill}-@{fg shine}--@{fg fill}-@{fg shine}-@{fg fill}--@{fg shine}-@{fg fill}--- -- -  -@{fg text}
@{" abort " LINK lister_query_abort}
@{" active " LINK ch_lactive}
@{" active " LINK lister_query_active}
@{" add " LINK lister_add}
@{" addappicon " LINK dopus_addappicon}
@{" addstem " LINK lister_addstem}
@{" AddStem Pop-Ups " LINK ch_laddstempopups}
@{" addtrap " LINK dopus_addtrap}
@{" all " LINK dopus_refresh_all}
@{" all " LINK lister_query_all}
@{" AppIcons " LINK ch_appicons}
@{" ARexx Modules. " LINK arexx_modules}

@{" back " LINK dopus_back}
@{" background " LINK dopus_query_background}
@{" background " LINK dopus_refresh_background}
@{" background " LINK dopus_set_background}
@{" busy " LINK lister_query_busy}
@{" busy " LINK lister_set_busy}

@{" case " LINK lister_query_case}
@{" case " LINK lister_set_case}
@{" centre " LINK dopus_set_background}
@{" clear " LINK dopus_clear}
@{" clear " LINK lister_clear}
@{" clear value " LINK lister_clear_value}
@{" close " LINK lister_close}
@{" command " LINK dopus_command}
@{" command " LINK list_command}
@{" Commands " LINK arexx_commands}
@{" commands " LINK list_dopus}
@{" commands " LINK list_lister}
@{" commentlength " LINK lister_query_commentlength}
@{" commentlength " LINK lister_set_commentlength}
@{" copy " LINK lister_copy}
@{" Credits " LINK credits}
@{" custom " LINK dopus_refresh_background}
@{" custom " LINK dopus_set_background}
@{" Custom Handlers " LINK custom_handlers}
@{" Custom Handlers for AppIcons " LINK ch_appicons}
@{" Custom Handlers for Listers " LINK ch_listers}
@{" Custom Handlers, The Basics " LINK ch_the_basics}

@{" desktoppopup " LINK dopus_desktoppopup}
@{" dest " LINK lister_query_dest}
@{" dest " LINK lister_set_dest}
@{" dirs " LINK lister_query_dirs}
@{" display " LINK lister_query_display}
@{" display " LINK lister_set_display}
@{" dopus addappicon " LINK dopus_addappicon}
@{" dopus addtrap " LINK dopus_addtrap}
@{" dopus back " LINK dopus_back}
@{" dopus clear " LINK dopus_clear}
@{" dopus command " LINK dopus_command}
@{" dopus commands " LINK list_dopus}
@{" dopus desktoppopup " LINK dopus_desktoppopup}
@{" dopus error " LINK dopus_error}
@{" dopus front " LINK dopus_front}
@{" dopus getfiletype " LINK dopus_getfiletype}
@{" dopus getstring " LINK dopus_getstring}
@{" dopus matchdesktop " LINK dopus_matchdesktop}
@{" dopus progress " LINK dopus_progress}
@{" dopus query " LINK dopus_query}
@{" dopus query background " LINK dopus_query_background}
@{" dopus query font " LINK dopus_query_font}
@{" dopus query palette " LINK dopus_query_palette}
@{" dopus query pens " LINK dopus_query_pens}
@{" dopus query sound " LINK dopus_query_sound}
@{" dopus read " LINK dopus_read}
@{" dopus refresh " LINK dopus_refresh}
@{" dopus refresh all " LINK dopus_refresh_all}
@{" dopus refresh background " LINK dopus_refresh_background}
@{" dopus refresh icons " LINK dopus_refresh_icons}
@{" dopus refresh lister " LINK dopus_refresh_lister}
@{" dopus remappicon " LINK dopus_remappicon}
@{" dopus remtrap " LINK dopus_remtrap}
@{" dopus request " LINK dopus_request}
@{" dopus screen " LINK dopus_screen}
@{" dopus send " LINK dopus_send}
@{" dopus set " LINK dopus_set}
@{" dopus set background " LINK dopus_set_background}
@{" dopus set font " LINK dopus_set_font}
@{" dopus set palette " LINK dopus_set_palette}
@{" dopus set pens " LINK dopus_set_pens}
@{" dopus set sound " LINK dopus_set_sound}
@{" dopus setappicon " LINK dopus_setappicon}
@{" dopus version " LINK dopus_version}
@{" doubleclick " LINK ch_ldoubleclick}
@{" drop " LINK ch_ldrop}
@{" dropfrom " LINK ch_ldropfrom}

@{" empty " LINK lister_empty}
@{" entries " LINK lister_query_entries}
@{" entry " LINK lister_query_entry}
@{" error " LINK dopus_error}
@{" Error Codes " LINK gen_errors}
@{" Events " LINK ch_listers_events}

@{" field " LINK lister_set_field}
@{" files " LINK lister_query_files}
@{" firstsel " LINK lister_query_firstsel}
@{" flags " LINK dopus_desktoppopup}
@{" flags " LINK lister_query_flags}
@{" flags " LINK lister_set_flags}
@{" font " LINK dopus_query_font}
@{" font " LINK dopus_set_font}
@{" front " LINK dopus_front}

@{" getfiletype " LINK dopus_getfiletype}
@{" getstring " LINK dopus_getstring}
@{" getstring " LINK lister_getstring}
@{" Guide Credits " LINK credits}
@{" Guide History " LINK guide_history}

@{" handler " LINK lister_query_handler}
@{" handler " LINK lister_set_handler}
@{" header " LINK lister_query_header}
@{" header " LINK lister_set_header}
@{" hide " LINK lister_query_hide}
@{" hide " LINK lister_set_hide}
@{" History " LINK guide_history}

@{" iconify " LINK lister_iconify}
@{" icons " LINK dopus_refresh_icons}
@{" inactive " LINK ch_linactive}
@{" Introduction " LINK gen_intro}

@{" label " LINK lister_query_label}
@{" label " LINK lister_set_label}
@{" lister " LINK dopus_refresh_lister}
@{" lister add " LINK lister_add}
@{" lister addstem " LINK lister_addstem}
@{" lister clear " LINK lister_clear}
@{" lister clear value " LINK lister_clear_value}
@{" lister close " LINK lister_close}
@{" lister commands " LINK list_lister}
@{" lister copy " LINK lister_copy}
@{" lister empty " LINK lister_empty}
@{" lister getstring " LINK lister_getstring}
@{" Lister Handlers, active " LINK ch_lactive}
@{" Lister Handlers, AddStem Pop-Ups " LINK ch_laddstempopups}
@{" Lister Handlers, doubleclick " LINK ch_ldoubleclick}
@{" Lister Handlers, drop " LINK ch_ldrop}
@{" Lister Handlers, dropfrom " LINK ch_ldropfrom}
@{" Lister Handlers, edit " LINK ch_ledit}
@{" Lister Handlers, Events " LINK ch_listers_events}
@{" Lister Handlers, inactive " LINK ch_linactive}
@{" Lister Handlers, lister2 pop-ups " LINK ch_llister2popups}
@{" Lister Handlers, parent " LINK ch_lparent}
@{" Lister Handlers, path " LINK ch_lpath}
@{" Lister Handlers, reread " LINK ch_lreread}
@{" Lister Handlers, root " LINK ch_lroot}
@{" Lister Handlers, snapshot " LINK ch_lsnapshot}
@{" Lister Handlers, Trapped Functions " LINK ch_ltrappedfunctions}
@{" Lister Handlers, unsnapshot " LINK ch_lunsnapshot}
@{" lister iconify " LINK lister_iconify}
@{" lister new " LINK lister_new}
@{" lister query " LINK lister_query}
@{" lister query abort " LINK lister_query_abort}
@{" lister query active " LINK lister_query_active}
@{" lister query all " LINK lister_query_all}
@{" lister query busy " LINK lister_query_busy}
@{" lister query case " LINK lister_query_case}
@{" lister query commentlength " LINK lister_query_commentlength}
@{" lister query dest " LINK lister_query_dest}
@{" lister query dirs " LINK lister_query_dirs}
@{" lister query display " LINK lister_query_display}
@{" lister query entries " LINK lister_query_entries}
@{" lister query entry " LINK lister_query_entry}
@{" lister query files " LINK lister_query_files}
@{" lister query firstsel " LINK lister_query_firstsel}
@{" lister query flags " LINK lister_query_flags}
@{" lister query handler " LINK lister_query_handler}
@{" lister query header " LINK lister_query_header}
@{" lister query hide " LINK lister_query_hide}
@{" lister query label " LINK lister_query_label}
@{" lister query lock " LINK lister_query_lock}
@{" lister query mode " LINK lister_query_mode}
@{" lister query namelength " LINK lister_query_namelength}
@{" lister query numdirs " LINK lister_query_numdirs}
@{" lister query numentries " LINK lister_query_numentries}
@{" lister query numfiles " LINK lister_query_numfiles}
@{" lister query numseldirs " LINK lister_query_numseldirs}
@{" lister query numselentries " LINK lister_query_numselentries}
@{" lister query numselfiles " LINK lister_query_numselfiles}
@{" lister query path " LINK lister_query_path}
@{" lister query position " LINK lister_query_position}
@{" lister query proc " LINK lister_query_proc}
@{" lister query seldirs " LINK lister_query_seldirs}
@{" lister query selentries " LINK lister_query_selentries}
@{" lister query selfiles " LINK lister_query_selfiles}
@{" lister query separate " LINK lister_query_separate}
@{" lister query show " LINK lister_query_show}
@{" lister query sort " LINK lister_query_sort}
@{" lister query source " LINK lister_query_source}
@{" lister query title " LINK lister_query_title}
@{" lister query toolbar " LINK lister_query_toolbar}
@{" lister query value " LINK lister_query_value}
@{" lister query visible " LINK lister_query_visible}
@{" lister read " LINK lister_read}
@{" lister refresh " LINK lister_refresh}
@{" lister remove " LINK lister_remove}
@{" lister request " LINK lister_request}
@{" lister select " LINK lister_select}
@{" lister set " LINK lister_set}
@{" lister set busy " LINK lister_set_busy}
@{" lister set case " LINK lister_set_case}
@{" lister set commentlength " LINK lister_set_commentlength}
@{" lister set dest " LINK lister_set_dest}
@{" lister set display " LINK lister_set_display}
@{" lister set field " LINK lister_set_field}
@{" lister set flags " LINK lister_set_flags}
@{" lister set handler " LINK lister_set_handler}
@{" lister set header " LINK lister_set_header}
@{" lister set hide " LINK lister_set_hide}
@{" lister set label " LINK lister_set_label}
@{" lister set lock " LINK lister_set_lock}
@{" lister set mode " LINK lister_set_mode}
@{" lister set namelength " LINK lister_set_namelength}
@{" lister set newprogress " LINK lister_set_newprogress}
@{" lister set off " LINK lister_set_off}
@{" lister set path " LINK lister_set_path}
@{" lister set position " LINK lister_set_position}
@{" lister set progress " LINK lister_set_progress}
@{" lister set separate " LINK lister_set_separate}
@{" lister set show " LINK lister_set_show}
@{" lister set sort " LINK lister_set_sort}
@{" lister set source " LINK lister_set_source}
@{" lister set title " LINK lister_set_title}
@{" lister set toolbar " LINK lister_set_toolbar}
@{" lister set value " LINK lister_set_value}
@{" lister set visible " LINK lister_set_visible}
@{" lister wait " LINK lister_wait}
@{" lock " LINK lister_query_lock}
@{" lock " LINK lister_set_lock}

@{" matchdesktop " LINK dopus_matchdesktop}
@{" mode " LINK lister_query_mode}
@{" mode " LINK lister_set_mode}

@{" namelength " LINK lister_query_namelength}
@{" namelength " LINK lister_set_namelength}
@{" new " LINK lister_new}
@{" newprogress " LINK lister_set_newprogress}
@{" numdirs " LINK lister_query_numdirs}
@{" numentries " LINK lister_query_numentries}
@{" numfiles " LINK lister_query_numfiles}
@{" numseldirs " LINK lister_query_numseldirs}
@{" numselentries " LINK lister_query_numselentries}
@{" numselfiles " LINK lister_query_numselfiles}

@{" off " LINK lister_set_off}

@{" palette " LINK dopus_query_palette}
@{" palette " LINK dopus_set_palette}
@{" parent " LINK ch_lparent}
@{" path " LINK ch_lpath}
@{" path " LINK lister_query_path}
@{" path " LINK lister_set_path}
@{" pens " LINK dopus_query_pens}
@{" pens " LINK dopus_set_pens}
@{" precision " LINK dopus_set_background}
@{" position " LINK lister_query_position}
@{" position " LINK lister_set_position}
@{" proc " LINK lister_query_proc}
@{" progress " LINK dopus_progress}
@{" progress " LINK lister_set_progress}
@{" Purchasing Directory Opus 5.5 " LINK purchasing}

@{" query " LINK dopus_query}
@{" query " LINK lister_query}
@{" query abort " LINK lister_query_abort}
@{" query active " LINK lister_query_active}
@{" query all " LINK lister_query_all}
@{" query background " LINK dopus_query_background}
@{" query busy " LINK lister_query_busy}
@{" query case " LINK lister_query_case}
@{" query commentlength " LINK lister_query_commentlength}
@{" query dest " LINK lister_query_dest}
@{" query dirs " LINK lister_query_dirs}
@{" query display " LINK lister_query_display}
@{" query entries " LINK lister_query_entries}
@{" query entry " LINK lister_query_entry}
@{" query files " LINK lister_query_files}
@{" query firstsel " LINK lister_query_firstsel}
@{" query flags " LINK lister_query_flags}
@{" query font " LINK dopus_query_font}
@{" query handler " LINK lister_query_handler}
@{" query header " LINK lister_query_header}
@{" query hide " LINK lister_query_hide}
@{" query label " LINK lister_query_label}
@{" query lock " LINK lister_query_lock}
@{" query mode " LINK lister_query_mode}
@{" query namelength " LINK lister_query_namelength}
@{" query numdirs " LINK lister_query_numdirs}
@{" query numentries " LINK lister_query_numentries}
@{" query numfiles " LINK lister_query_numfiles}
@{" query numseldirs " LINK lister_query_numseldirs}
@{" query numselentries " LINK lister_query_numselentries}
@{" query numselfiles " LINK lister_query_numselfiles}
@{" query palette " LINK dopus_query_palette}
@{" query path " LINK lister_query_path}
@{" query pens " LINK dopus_query_pens}
@{" query position " LINK lister_query_position}
@{" query proc " LINK lister_query_proc}
@{" query seldirs " LINK lister_query_seldirs}
@{" query selentries " LINK lister_query_selentries}
@{" query selfiles " LINK lister_query_selfiles}
@{" query separate " LINK lister_query_separate}
@{" query show " LINK lister_query_show}
@{" query sort " LINK lister_query_sort}
@{" query sound " LINK dopus_query_sound}
@{" query source " LINK lister_query_source}
@{" query title " LINK lister_query_title}
@{" query toolbar " LINK lister_query_toolbar}
@{" query value " LINK lister_query_value}
@{" query visible " LINK lister_query_visible}

@{" read " LINK dopus_read}
@{" read " LINK lister_read}
@{" refresh " LINK dopus_refresh}
@{" refresh " LINK lister_refresh}
@{" refresh all " LINK dopus_refresh_all}
@{" refresh background " LINK dopus_refresh_background}
@{" refresh icons " LINK dopus_refresh_icons}
@{" refresh lister " LINK dopus_refresh_lister}
@{" remappicon " LINK dopus_remappicon}
@{" remove " LINK dopus_command}
@{" remove " LINK lister_remove}
@{" remtrap " LINK dopus_remtrap}
@{" request " LINK dopus_request}
@{" request " LINK lister_request}
@{" reread " LINK ch_lreread}
@{" Results from commands " LINK gen_results}
@{" root " LINK ch_lroot}

@{" screen " LINK dopus_screen}
@{" seldirs " LINK lister_query_seldirs}
@{" select " LINK lister_select}
@{" selentries " LINK lister_query_selentries}
@{" selfiles " LINK lister_query_selfiles}
@{" send " LINK dopus_send}
@{" separate " LINK lister_query_separate}
@{" separate " LINK lister_set_separate}
@{" set " LINK dopus_set}
@{" set " LINK lister_set}
@{" set background " LINK dopus_set_background}
@{" set busy " LINK lister_set_busy}
@{" set case " LINK lister_set_case}
@{" set commentlength " LINK lister_set_commentlength}
@{" set dest " LINK lister_set_dest}
@{" set display " LINK lister_set_display}
@{" set field " LINK lister_set_field}
@{" set flags " LINK lister_set_flags}
@{" set font " LINK dopus_set_font}
@{" set handler " LINK lister_set_handler}
@{" set header " LINK lister_set_header}
@{" set hide " LINK lister_set_hide}
@{" set label " LINK lister_set_label}
@{" set lock " LINK lister_set_lock}
@{" set mode " LINK lister_set_mode}
@{" set namelength " LINK lister_set_namelength}
@{" set newprogress " LINK lister_set_newprogress}
@{" set off " LINK lister_set_off}
@{" set palette " LINK dopus_set_palette}
@{" set path " LINK lister_set_path}
@{" set pens " LINK dopus_set_pens}
@{" set position " LINK lister_set_position}
@{" set progress " LINK lister_set_progress}
@{" set separate " LINK lister_set_separate}
@{" set show " LINK lister_set_show}
@{" set sort " LINK lister_set_sort}
@{" set sound " LINK dopus_set_sound}
@{" set source " LINK lister_set_source}
@{" set title " LINK lister_set_title}
@{" set toolbar " LINK lister_set_toolbar}
@{" set value " LINK lister_set_value}
@{" set visible " LINK lister_set_visible}
@{" setappicon " LINK dopus_setappicon}
@{" show " LINK lister_query_show}
@{" show " LINK lister_set_show}
@{" snapshot " LINK ch_lsnapshot}
@{" sort " LINK lister_query_sort}
@{" sort " LINK lister_set_sort}
@{" source " LINK lister_query_source}
@{" source " LINK lister_set_source}

@{" temp " LINK dopus_command}
@{" The Basics " LINK ch_the_basics}
@{" The Port " LINK gen_port}
@{" tile " LINK dopus_set_background}
@{" title " LINK lister_set_title}
@{" title " LINK lister_query_title}
@{" toolbar " LINK lister_query_toolbar}
@{" toolbar " LINK lister_set_toolbar}
@{" Trapped Functions " LINK ch_ltrappedfunctions}

@{" unsnapshot " LINK ch_lunsnapshot}

@{" value " LINK lister_clear_value}
@{" value " LINK lister_query_value}
@{" value " LINK lister_set_value}
@{" version " LINK dopus_version}
@{" visible " LINK lister_query_visible}
@{" visible " LINK lister_set_visible}
@{" volume " LINK dopus_set_sound}

@{" wait " LINK list_command}
@{" wait " LINK lister_wait}

@endnode

